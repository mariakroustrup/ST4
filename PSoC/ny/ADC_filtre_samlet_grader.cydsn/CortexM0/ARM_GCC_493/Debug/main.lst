ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	x_mavg
  18              		.bss
  19              		.align	3
  20              		.type	x_mavg, %object
  21              		.size	x_mavg, 80
  22              	x_mavg:
  23 0000 00000000 		.space	80
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	y_mavg
  25              		.align	3
  26              		.type	y_mavg, %object
  27              		.size	y_mavg, 8
  28              	y_mavg:
  29 0050 00000000 		.space	8
  29      00000000 
  30              		.global	b_mavg
  31              		.data
  32              		.align	3
  33              		.type	b_mavg, %object
  34              		.size	b_mavg, 80
  35              	b_mavg:
  36 0000 9A999999 		.word	-1717986918
  37 0004 9999B93F 		.word	1069128089
  38 0008 9A999999 		.word	-1717986918
  39 000c 9999B93F 		.word	1069128089
  40 0010 9A999999 		.word	-1717986918
  41 0014 9999B93F 		.word	1069128089
  42 0018 9A999999 		.word	-1717986918
  43 001c 9999B93F 		.word	1069128089
  44 0020 9A999999 		.word	-1717986918
  45 0024 9999B93F 		.word	1069128089
  46 0028 9A999999 		.word	-1717986918
  47 002c 9999B93F 		.word	1069128089
  48 0030 9A999999 		.word	-1717986918
  49 0034 9999B93F 		.word	1069128089
  50 0038 9A999999 		.word	-1717986918
  51 003c 9999B93F 		.word	1069128089
  52 0040 9A999999 		.word	-1717986918
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 2


  53 0044 9999B93F 		.word	1069128089
  54 0048 9A999999 		.word	-1717986918
  55 004c 9999B93F 		.word	1069128089
  56              		.global	x2_mavg
  57              		.bss
  58              		.align	3
  59              		.type	x2_mavg, %object
  60              		.size	x2_mavg, 80
  61              	x2_mavg:
  62 0058 00000000 		.space	80
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.global	y2_mavg
  64              		.align	3
  65              		.type	y2_mavg, %object
  66              		.size	y2_mavg, 8
  67              	y2_mavg:
  68 00a8 00000000 		.space	8
  68      00000000 
  69              		.global	b2_mavg
  70              		.data
  71              		.align	3
  72              		.type	b2_mavg, %object
  73              		.size	b2_mavg, 80
  74              	b2_mavg:
  75 0050 9A999999 		.word	-1717986918
  76 0054 9999B93F 		.word	1069128089
  77 0058 9A999999 		.word	-1717986918
  78 005c 9999B93F 		.word	1069128089
  79 0060 9A999999 		.word	-1717986918
  80 0064 9999B93F 		.word	1069128089
  81 0068 9A999999 		.word	-1717986918
  82 006c 9999B93F 		.word	1069128089
  83 0070 9A999999 		.word	-1717986918
  84 0074 9999B93F 		.word	1069128089
  85 0078 9A999999 		.word	-1717986918
  86 007c 9999B93F 		.word	1069128089
  87 0080 9A999999 		.word	-1717986918
  88 0084 9999B93F 		.word	1069128089
  89 0088 9A999999 		.word	-1717986918
  90 008c 9999B93F 		.word	1069128089
  91 0090 9A999999 		.word	-1717986918
  92 0094 9999B93F 		.word	1069128089
  93 0098 9A999999 		.word	-1717986918
  94 009c 9999B93F 		.word	1069128089
  95              		.global	x_low
  96              		.bss
  97              		.align	3
  98              		.type	x_low, %object
  99              		.size	x_low, 24
 100              	x_low:
 101 00b0 00000000 		.space	24
 101      00000000 
 101      00000000 
 101      00000000 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 3


 101      00000000 
 102              		.global	y_low
 103              		.align	3
 104              		.type	y_low, %object
 105              		.size	y_low, 24
 106              	y_low:
 107 00c8 00000000 		.space	24
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	b_low
 109              		.data
 110              		.align	3
 111              		.type	b_low, %object
 112              		.size	b_low, 24
 113              	b_low:
 114 00a0 FA7E6ABC 		.word	-1133871366
 115 00a4 7493583F 		.word	1062769524
 116 00a8 E09C11A5 		.word	-1525572384
 117 00ac BDC1673F 		.word	1063764413
 118 00b0 FA7E6ABC 		.word	-1133871366
 119 00b4 7493583F 		.word	1062769524
 120              		.global	a_low
 121              		.align	3
 122              		.type	a_low, %object
 123              		.size	a_low, 24
 124              	a_low:
 125 00b8 00000000 		.word	0
 126 00bc 0000F03F 		.word	1072693248
 127 00c0 D34D6210 		.word	274877907
 128 00c4 5839FEBF 		.word	-1073858216
 129 00c8 C2172653 		.word	1395005378
 130 00cc 05A3EC3F 		.word	1072472837
 131              		.comm	value_in,2,2
 132              		.global	value_out
 133              		.bss
 134              		.align	2
 135              		.type	value_out, %object
 136              		.size	value_out, 4
 137              	value_out:
 138 00e0 00000000 		.space	4
 139              		.global	i
 140              		.align	1
 141              		.type	i, %object
 142              		.size	i, 2
 143              	i:
 144 00e4 0000     		.space	2
 145              		.global	j
 146              		.align	1
 147              		.type	j, %object
 148              		.size	j, 2
 149              	j:
 150 00e6 0000     		.space	2
 151              		.global	k
 152              		.align	1
 153              		.type	k, %object
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 4


 154              		.size	k, 2
 155              	k:
 156 00e8 0000     		.space	2
 157              		.comm	grader_groen,2,2
 158              		.comm	grader_roed,2,2
 159              		.comm	diff,2,2
 160              		.comm	old,2,2
 161              		.global	counter
 162              		.align	1
 163              		.type	counter, %object
 164              		.size	counter, 2
 165              	counter:
 166 00ea 0000     		.space	2
 167              		.global	FirstCall
 168              		.data
 169              		.type	FirstCall, %object
 170              		.size	FirstCall, 1
 171              	FirstCall:
 172 00d0 01       		.byte	1
 173              		.global	accroed
 174 00d1 00000000 		.bss
 174      000000
 175              		.align	1
 176              		.type	accroed, %object
 177              		.size	accroed, 2
 178              	accroed:
 179 00ec 0000     		.space	2
 180              		.global	accgroen
 181              		.align	1
 182              		.type	accgroen, %object
 183              		.size	accgroen, 2
 184              	accgroen:
 185 00ee 0000     		.space	2
 186              		.global	EMG
 187              		.align	1
 188              		.type	EMG, %object
 189              		.size	EMG, 2
 190              	EMG:
 191 00f0 0000     		.space	2
 192              		.global	result
 193 00f2 0000     		.align	2
 194              		.type	result, %object
 195              		.size	result, 6
 196              	result:
 197 00f4 00000000 		.space	6
 197      0000
 198              		.global	data_ready
 199              		.type	data_ready, %object
 200              		.size	data_ready, 1
 201              	data_ready:
 202 00fa 00       		.space	1
 203              		.comm	mav_data_roed,2,2
 204              		.comm	mav_data_groen,2,2
 205              		.comm	samlet_grader,2,2
 206              		.comm	low_pass_data,2,2
 207              		.comm	diff_data,2,2
 208              		.global	__aeabi_dcmpgt
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 5


 209              		.global	__aeabi_dadd
 210              		.global	__aeabi_d2iz
 211              		.global	__aeabi_dsub
 212 00fb 00000000 		.section	.text.floor_and_convert,"ax",%progbits
 212      00
 213              		.align	2
 214              		.global	floor_and_convert
 215              		.code	16
 216              		.thumb_func
 217              		.type	floor_and_convert, %function
 218              	floor_and_convert:
 219              	.LFB37:
 220              		.file 1 ".\\main.c"
   1:.\main.c      **** #include <project.h>
   2:.\main.c      **** #include <my_defines.h>
   3:.\main.c      **** #include <stdlib.h>
   4:.\main.c      **** 
   5:.\main.c      **** #define FALSE 0
   6:.\main.c      **** #define TRUE 1
   7:.\main.c      **** #define LED_ON 0u
   8:.\main.c      **** #define LED_OFF 1u
   9:.\main.c      **** 
  10:.\main.c      **** /* Moving average filter */ 
  11:.\main.c      **** #define FILTER_LENGTH_mavg 9
  12:.\main.c      **** //int y[2] = {0,0};
  13:.\main.c      **** double x_mavg[FILTER_LENGTH_mavg+1] = {0,0,0,0,0,0,0,0,0,0};
  14:.\main.c      **** double y_mavg = 0;
  15:.\main.c      **** double b_mavg[FILTER_LENGTH_mavg+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  16:.\main.c      **** 
  17:.\main.c      **** /* Moving average filter 2 */
  18:.\main.c      **** #define FILTER_LENGTH_mavg2 9
  19:.\main.c      **** //int y2[2] = {0,0};
  20:.\main.c      **** double x2_mavg[FILTER_LENGTH_mavg2+1] = {0,0,0,0,0,0,0,0,0,0};
  21:.\main.c      **** double y2_mavg = 0;
  22:.\main.c      **** double b2_mavg[FILTER_LENGTH_mavg2+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  23:.\main.c      **** 
  24:.\main.c      **** 
  25:.\main.c      **** #define FILTER_LENGTH_low 2
  26:.\main.c      **** double x_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  27:.\main.c      **** double y_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  28:.\main.c      **** double b_low[FILTER_LENGTH_low+1] = {0.0015, 0.0029, 0.0015};
  29:.\main.c      **** double a_low[FILTER_LENGTH_low+1] = {1.0000, -1.8890, 0.8949};
  30:.\main.c      **** 
  31:.\main.c      **** int16 value_in,value_out[2]={0,0},i=0,j=0,k=0, grader_groen, grader_roed, diff, old, counter=0; 
  32:.\main.c      **** char FirstCall = TRUE;
  33:.\main.c      **** 
  34:.\main.c      **** int16 accroed = {0};
  35:.\main.c      **** int16 accgroen = {0};
  36:.\main.c      **** int16 EMG = {0};
  37:.\main.c      **** int16 result[num_of_channels] = {0};
  38:.\main.c      **** uint8 data_ready = FALSE;
  39:.\main.c      **** 
  40:.\main.c      **** int16 mav_data_roed;
  41:.\main.c      **** int16 mav_data_groen;
  42:.\main.c      **** int16 samlet_grader;
  43:.\main.c      **** int16 low_pass_data;
  44:.\main.c      **** int16 diff_data;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 6


  45:.\main.c      **** 
  46:.\main.c      **** /***********************************Konvertering til heltal***********************************/
  47:.\main.c      **** signed int floor_and_convert(double y)
  48:.\main.c      **** {
 221              		.loc 1 48 0
 222              		.cfi_startproc
 223 0000 90B5     		push	{r4, r7, lr}
 224              		.cfi_def_cfa_offset 12
 225              		.cfi_offset 4, -12
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 83B0     		sub	sp, sp, #12
 229              		.cfi_def_cfa_offset 24
 230 0004 00AF     		add	r7, sp, #0
 231              		.cfi_def_cfa_register 7
 232 0006 3860     		str	r0, [r7]
 233 0008 7960     		str	r1, [r7, #4]
  49:.\main.c      ****    if (y > 0)
 234              		.loc 1 49 0
 235 000a 3868     		ldr	r0, [r7]
 236 000c 7968     		ldr	r1, [r7, #4]
 237 000e 0022     		mov	r2, #0
 238 0010 0023     		mov	r3, #0
 239 0012 FFF7FEFF 		bl	__aeabi_dcmpgt
 240 0016 031E     		sub	r3, r0, #0
 241 0018 0DD0     		beq	.L6
  50:.\main.c      ****       return (signed int) (y+0.5);
 242              		.loc 1 50 0
 243 001a 3868     		ldr	r0, [r7]
 244 001c 7968     		ldr	r1, [r7, #4]
 245 001e 0022     		mov	r2, #0
 246 0020 0D4B     		ldr	r3, .L7
 247 0022 FFF7FEFF 		bl	__aeabi_dadd
 248 0026 031C     		mov	r3, r0
 249 0028 0C1C     		mov	r4, r1
 250 002a 181C     		mov	r0, r3
 251 002c 211C     		mov	r1, r4
 252 002e FFF7FEFF 		bl	__aeabi_d2iz
 253 0032 031C     		mov	r3, r0
 254 0034 0CE0     		b	.L4
 255              	.L6:
  51:.\main.c      ****    else
  52:.\main.c      ****       return (signed int) (y-0.5);
 256              		.loc 1 52 0
 257 0036 3868     		ldr	r0, [r7]
 258 0038 7968     		ldr	r1, [r7, #4]
 259 003a 0022     		mov	r2, #0
 260 003c 064B     		ldr	r3, .L7
 261 003e FFF7FEFF 		bl	__aeabi_dsub
 262 0042 031C     		mov	r3, r0
 263 0044 0C1C     		mov	r4, r1
 264 0046 181C     		mov	r0, r3
 265 0048 211C     		mov	r1, r4
 266 004a FFF7FEFF 		bl	__aeabi_d2iz
 267 004e 031C     		mov	r3, r0
 268              	.L4:
  53:.\main.c      **** }
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 7


 269              		.loc 1 53 0
 270 0050 181C     		mov	r0, r3
 271 0052 BD46     		mov	sp, r7
 272 0054 03B0     		add	sp, sp, #12
 273              		@ sp needed
 274 0056 90BD     		pop	{r4, r7, pc}
 275              	.L8:
 276              		.align	2
 277              	.L7:
 278 0058 0000E03F 		.word	1071644672
 279              		.cfi_endproc
 280              	.LFE37:
 281              		.size	floor_and_convert, .-floor_and_convert
 282              		.global	__aeabi_i2d
 283              		.global	__aeabi_dmul
 284              		.section	.text.mavg_filter,"ax",%progbits
 285              		.align	2
 286              		.global	mavg_filter
 287              		.code	16
 288              		.thumb_func
 289              		.type	mavg_filter, %function
 290              	mavg_filter:
 291              	.LFB38:
  54:.\main.c      **** 
  55:.\main.c      **** /***********************************Moving average filter***********************************/
  56:.\main.c      **** signed int mavg_filter(signed int data)
  57:.\main.c      **** {
 292              		.loc 1 57 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 83B0     		sub	sp, sp, #12
 300              		.cfi_def_cfa_offset 24
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  58:.\main.c      ****    x_mavg[0] =  (double) data;      // Read received sample and perform type casts
 304              		.loc 1 58 0
 305 0008 7868     		ldr	r0, [r7, #4]
 306 000a FFF7FEFF 		bl	__aeabi_i2d
 307 000e 031C     		mov	r3, r0
 308 0010 0C1C     		mov	r4, r1
 309 0012 384A     		ldr	r2, .L15
 310 0014 1360     		str	r3, [r2]
 311 0016 5460     		str	r4, [r2, #4]
  59:.\main.c      ****    
  60:.\main.c      ****    y_mavg = 0;
 312              		.loc 1 60 0
 313 0018 374A     		ldr	r2, .L15+4
 314 001a 0023     		mov	r3, #0
 315 001c 0024     		mov	r4, #0
 316 001e 1360     		str	r3, [r2]
 317 0020 5460     		str	r4, [r2, #4]
  61:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 8


 318              		.loc 1 61 0
 319 0022 364B     		ldr	r3, .L15+8
 320 0024 0022     		mov	r2, #0
 321 0026 1A80     		strh	r2, [r3]
 322 0028 30E0     		b	.L10
 323              	.L11:
  62:.\main.c      ****    {
  63:.\main.c      ****       y_mavg += b_mavg[i]*x_mavg[i];
 324              		.loc 1 63 0 discriminator 3
 325 002a 344B     		ldr	r3, .L15+8
 326 002c 1B88     		ldrh	r3, [r3]
 327 002e 1BB2     		sxth	r3, r3
 328 0030 334A     		ldr	r2, .L15+12
 329 0032 DB00     		lsl	r3, r3, #3
 330 0034 D318     		add	r3, r2, r3
 331 0036 1968     		ldr	r1, [r3]
 332 0038 5A68     		ldr	r2, [r3, #4]
 333 003a 304B     		ldr	r3, .L15+8
 334 003c 1B88     		ldrh	r3, [r3]
 335 003e 1BB2     		sxth	r3, r3
 336 0040 2C48     		ldr	r0, .L15
 337 0042 DB00     		lsl	r3, r3, #3
 338 0044 C318     		add	r3, r0, r3
 339 0046 5C68     		ldr	r4, [r3, #4]
 340 0048 1B68     		ldr	r3, [r3]
 341 004a 081C     		mov	r0, r1
 342 004c 111C     		mov	r1, r2
 343 004e 1A1C     		mov	r2, r3
 344 0050 231C     		mov	r3, r4
 345 0052 FFF7FEFF 		bl	__aeabi_dmul
 346 0056 031C     		mov	r3, r0
 347 0058 0C1C     		mov	r4, r1
 348 005a 191C     		mov	r1, r3
 349 005c 221C     		mov	r2, r4
 350 005e 264B     		ldr	r3, .L15+4
 351 0060 5C68     		ldr	r4, [r3, #4]
 352 0062 1B68     		ldr	r3, [r3]
 353 0064 081C     		mov	r0, r1
 354 0066 111C     		mov	r1, r2
 355 0068 1A1C     		mov	r2, r3
 356 006a 231C     		mov	r3, r4
 357 006c FFF7FEFF 		bl	__aeabi_dadd
 358 0070 031C     		mov	r3, r0
 359 0072 0C1C     		mov	r4, r1
 360 0074 204A     		ldr	r2, .L15+4
 361 0076 1360     		str	r3, [r2]
 362 0078 5460     		str	r4, [r2, #4]
  61:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 363              		.loc 1 61 0 discriminator 3
 364 007a 204B     		ldr	r3, .L15+8
 365 007c 1B88     		ldrh	r3, [r3]
 366 007e 9BB2     		uxth	r3, r3
 367 0080 9BB2     		uxth	r3, r3
 368 0082 0133     		add	r3, r3, #1
 369 0084 9BB2     		uxth	r3, r3
 370 0086 9AB2     		uxth	r2, r3
 371 0088 1C4B     		ldr	r3, .L15+8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 9


 372 008a 1A80     		strh	r2, [r3]
 373              	.L10:
  61:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 374              		.loc 1 61 0 is_stmt 0 discriminator 1
 375 008c 1B4B     		ldr	r3, .L15+8
 376 008e 1B88     		ldrh	r3, [r3]
 377 0090 1BB2     		sxth	r3, r3
 378 0092 092B     		cmp	r3, #9
 379 0094 C9DD     		ble	.L11
  64:.\main.c      ****    } 
  65:.\main.c      ****    
  66:.\main.c      ****    for(i = FILTER_LENGTH_mavg-1;i >= 0;i--)         // Roll x array in order to hold old sample inp
 380              		.loc 1 66 0 is_stmt 1
 381 0096 194B     		ldr	r3, .L15+8
 382 0098 0822     		mov	r2, #8
 383 009a 1A80     		strh	r2, [r3]
 384 009c 19E0     		b	.L12
 385              	.L13:
  67:.\main.c      ****    {
  68:.\main.c      ****       x_mavg[i+1] = x_mavg[i];
 386              		.loc 1 68 0 discriminator 3
 387 009e 174B     		ldr	r3, .L15+8
 388 00a0 1B88     		ldrh	r3, [r3]
 389 00a2 1BB2     		sxth	r3, r3
 390 00a4 5A1C     		add	r2, r3, #1
 391 00a6 154B     		ldr	r3, .L15+8
 392 00a8 1B88     		ldrh	r3, [r3]
 393 00aa 1BB2     		sxth	r3, r3
 394 00ac 1149     		ldr	r1, .L15
 395 00ae DB00     		lsl	r3, r3, #3
 396 00b0 CB18     		add	r3, r1, r3
 397 00b2 5C68     		ldr	r4, [r3, #4]
 398 00b4 1B68     		ldr	r3, [r3]
 399 00b6 0F49     		ldr	r1, .L15
 400 00b8 D200     		lsl	r2, r2, #3
 401 00ba 8A18     		add	r2, r1, r2
 402 00bc 1360     		str	r3, [r2]
 403 00be 5460     		str	r4, [r2, #4]
  66:.\main.c      ****    {
 404              		.loc 1 66 0 discriminator 3
 405 00c0 0E4B     		ldr	r3, .L15+8
 406 00c2 1B88     		ldrh	r3, [r3]
 407 00c4 9BB2     		uxth	r3, r3
 408 00c6 9BB2     		uxth	r3, r3
 409 00c8 013B     		sub	r3, r3, #1
 410 00ca 9BB2     		uxth	r3, r3
 411 00cc 9AB2     		uxth	r2, r3
 412 00ce 0B4B     		ldr	r3, .L15+8
 413 00d0 1A80     		strh	r2, [r3]
 414              	.L12:
  66:.\main.c      ****    {
 415              		.loc 1 66 0 is_stmt 0 discriminator 1
 416 00d2 0A4B     		ldr	r3, .L15+8
 417 00d4 1B88     		ldrh	r3, [r3]
 418 00d6 1BB2     		sxth	r3, r3
 419 00d8 002B     		cmp	r3, #0
 420 00da E0DA     		bge	.L13
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 10


  69:.\main.c      ****    }
  70:.\main.c      ****   
  71:.\main.c      ****    return (signed int) y_mavg;
 421              		.loc 1 71 0 is_stmt 1
 422 00dc 064B     		ldr	r3, .L15+4
 423 00de 5C68     		ldr	r4, [r3, #4]
 424 00e0 1B68     		ldr	r3, [r3]
 425 00e2 181C     		mov	r0, r3
 426 00e4 211C     		mov	r1, r4
 427 00e6 FFF7FEFF 		bl	__aeabi_d2iz
 428 00ea 031C     		mov	r3, r0
  72:.\main.c      **** }
 429              		.loc 1 72 0
 430 00ec 181C     		mov	r0, r3
 431 00ee BD46     		mov	sp, r7
 432 00f0 03B0     		add	sp, sp, #12
 433              		@ sp needed
 434 00f2 90BD     		pop	{r4, r7, pc}
 435              	.L16:
 436              		.align	2
 437              	.L15:
 438 00f4 00000000 		.word	x_mavg
 439 00f8 00000000 		.word	y_mavg
 440 00fc 00000000 		.word	i
 441 0100 00000000 		.word	b_mavg
 442              		.cfi_endproc
 443              	.LFE38:
 444              		.size	mavg_filter, .-mavg_filter
 445              		.section	.text.mavg_filter2,"ax",%progbits
 446              		.align	2
 447              		.global	mavg_filter2
 448              		.code	16
 449              		.thumb_func
 450              		.type	mavg_filter2, %function
 451              	mavg_filter2:
 452              	.LFB39:
  73:.\main.c      **** 
  74:.\main.c      **** 
  75:.\main.c      **** /***********************************Moving average filter 2***********************************/
  76:.\main.c      **** signed int mavg_filter2(signed int data)
  77:.\main.c      **** {
 453              		.loc 1 77 0
 454              		.cfi_startproc
 455 0000 90B5     		push	{r4, r7, lr}
 456              		.cfi_def_cfa_offset 12
 457              		.cfi_offset 4, -12
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 83B0     		sub	sp, sp, #12
 461              		.cfi_def_cfa_offset 24
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
  78:.\main.c      ****    x2_mavg[0] =  (int16) data;                     // Read received sample and perform type casts
 465              		.loc 1 78 0
 466 0008 7B68     		ldr	r3, [r7, #4]
 467 000a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 11


 468 000c 1BB2     		sxth	r3, r3
 469 000e 181C     		mov	r0, r3
 470 0010 FFF7FEFF 		bl	__aeabi_i2d
 471 0014 031C     		mov	r3, r0
 472 0016 0C1C     		mov	r4, r1
 473 0018 384A     		ldr	r2, .L23
 474 001a 1360     		str	r3, [r2]
 475 001c 5460     		str	r4, [r2, #4]
  79:.\main.c      ****     
  80:.\main.c      ****    y2_mavg = 0;                                     // 
 476              		.loc 1 80 0
 477 001e 384A     		ldr	r2, .L23+4
 478 0020 0023     		mov	r3, #0
 479 0022 0024     		mov	r4, #0
 480 0024 1360     		str	r3, [r2]
 481 0026 5460     		str	r4, [r2, #4]
  81:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 482              		.loc 1 81 0
 483 0028 364B     		ldr	r3, .L23+8
 484 002a 0022     		mov	r2, #0
 485 002c 1A80     		strh	r2, [r3]
 486 002e 30E0     		b	.L18
 487              	.L19:
  82:.\main.c      ****    {
  83:.\main.c      ****       y2_mavg += b2_mavg[i]*x2_mavg[i];             // 
 488              		.loc 1 83 0 discriminator 3
 489 0030 344B     		ldr	r3, .L23+8
 490 0032 1B88     		ldrh	r3, [r3]
 491 0034 1BB2     		sxth	r3, r3
 492 0036 344A     		ldr	r2, .L23+12
 493 0038 DB00     		lsl	r3, r3, #3
 494 003a D318     		add	r3, r2, r3
 495 003c 1968     		ldr	r1, [r3]
 496 003e 5A68     		ldr	r2, [r3, #4]
 497 0040 304B     		ldr	r3, .L23+8
 498 0042 1B88     		ldrh	r3, [r3]
 499 0044 1BB2     		sxth	r3, r3
 500 0046 2D48     		ldr	r0, .L23
 501 0048 DB00     		lsl	r3, r3, #3
 502 004a C318     		add	r3, r0, r3
 503 004c 5C68     		ldr	r4, [r3, #4]
 504 004e 1B68     		ldr	r3, [r3]
 505 0050 081C     		mov	r0, r1
 506 0052 111C     		mov	r1, r2
 507 0054 1A1C     		mov	r2, r3
 508 0056 231C     		mov	r3, r4
 509 0058 FFF7FEFF 		bl	__aeabi_dmul
 510 005c 031C     		mov	r3, r0
 511 005e 0C1C     		mov	r4, r1
 512 0060 191C     		mov	r1, r3
 513 0062 221C     		mov	r2, r4
 514 0064 264B     		ldr	r3, .L23+4
 515 0066 5C68     		ldr	r4, [r3, #4]
 516 0068 1B68     		ldr	r3, [r3]
 517 006a 081C     		mov	r0, r1
 518 006c 111C     		mov	r1, r2
 519 006e 1A1C     		mov	r2, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 12


 520 0070 231C     		mov	r3, r4
 521 0072 FFF7FEFF 		bl	__aeabi_dadd
 522 0076 031C     		mov	r3, r0
 523 0078 0C1C     		mov	r4, r1
 524 007a 214A     		ldr	r2, .L23+4
 525 007c 1360     		str	r3, [r2]
 526 007e 5460     		str	r4, [r2, #4]
  81:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 527              		.loc 1 81 0 discriminator 3
 528 0080 204B     		ldr	r3, .L23+8
 529 0082 1B88     		ldrh	r3, [r3]
 530 0084 9BB2     		uxth	r3, r3
 531 0086 9BB2     		uxth	r3, r3
 532 0088 0133     		add	r3, r3, #1
 533 008a 9BB2     		uxth	r3, r3
 534 008c 9AB2     		uxth	r2, r3
 535 008e 1D4B     		ldr	r3, .L23+8
 536 0090 1A80     		strh	r2, [r3]
 537              	.L18:
  81:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 538              		.loc 1 81 0 is_stmt 0 discriminator 1
 539 0092 1C4B     		ldr	r3, .L23+8
 540 0094 1B88     		ldrh	r3, [r3]
 541 0096 1BB2     		sxth	r3, r3
 542 0098 092B     		cmp	r3, #9
 543 009a C9DD     		ble	.L19
  84:.\main.c      ****    } 
  85:.\main.c      ****    
  86:.\main.c      ****    for(i = FILTER_LENGTH_mavg2-1;i >= 0;i--)        // Roll x array in order to hold old sample inp
 544              		.loc 1 86 0 is_stmt 1
 545 009c 194B     		ldr	r3, .L23+8
 546 009e 0822     		mov	r2, #8
 547 00a0 1A80     		strh	r2, [r3]
 548 00a2 19E0     		b	.L20
 549              	.L21:
  87:.\main.c      ****    {
  88:.\main.c      ****       x2_mavg[i+1] = x2_mavg[i];                    // 
 550              		.loc 1 88 0 discriminator 3
 551 00a4 174B     		ldr	r3, .L23+8
 552 00a6 1B88     		ldrh	r3, [r3]
 553 00a8 1BB2     		sxth	r3, r3
 554 00aa 5A1C     		add	r2, r3, #1
 555 00ac 154B     		ldr	r3, .L23+8
 556 00ae 1B88     		ldrh	r3, [r3]
 557 00b0 1BB2     		sxth	r3, r3
 558 00b2 1249     		ldr	r1, .L23
 559 00b4 DB00     		lsl	r3, r3, #3
 560 00b6 CB18     		add	r3, r1, r3
 561 00b8 5C68     		ldr	r4, [r3, #4]
 562 00ba 1B68     		ldr	r3, [r3]
 563 00bc 0F49     		ldr	r1, .L23
 564 00be D200     		lsl	r2, r2, #3
 565 00c0 8A18     		add	r2, r1, r2
 566 00c2 1360     		str	r3, [r2]
 567 00c4 5460     		str	r4, [r2, #4]
  86:.\main.c      ****    {
 568              		.loc 1 86 0 discriminator 3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 13


 569 00c6 0F4B     		ldr	r3, .L23+8
 570 00c8 1B88     		ldrh	r3, [r3]
 571 00ca 9BB2     		uxth	r3, r3
 572 00cc 9BB2     		uxth	r3, r3
 573 00ce 013B     		sub	r3, r3, #1
 574 00d0 9BB2     		uxth	r3, r3
 575 00d2 9AB2     		uxth	r2, r3
 576 00d4 0B4B     		ldr	r3, .L23+8
 577 00d6 1A80     		strh	r2, [r3]
 578              	.L20:
  86:.\main.c      ****    {
 579              		.loc 1 86 0 is_stmt 0 discriminator 1
 580 00d8 0A4B     		ldr	r3, .L23+8
 581 00da 1B88     		ldrh	r3, [r3]
 582 00dc 1BB2     		sxth	r3, r3
 583 00de 002B     		cmp	r3, #0
 584 00e0 E0DA     		bge	.L21
  89:.\main.c      ****    }
  90:.\main.c      ****       
  91:.\main.c      ****    return (signed int) y2_mavg;               // 
 585              		.loc 1 91 0 is_stmt 1
 586 00e2 074B     		ldr	r3, .L23+4
 587 00e4 5C68     		ldr	r4, [r3, #4]
 588 00e6 1B68     		ldr	r3, [r3]
 589 00e8 181C     		mov	r0, r3
 590 00ea 211C     		mov	r1, r4
 591 00ec FFF7FEFF 		bl	__aeabi_d2iz
 592 00f0 031C     		mov	r3, r0
  92:.\main.c      **** }
 593              		.loc 1 92 0
 594 00f2 181C     		mov	r0, r3
 595 00f4 BD46     		mov	sp, r7
 596 00f6 03B0     		add	sp, sp, #12
 597              		@ sp needed
 598 00f8 90BD     		pop	{r4, r7, pc}
 599              	.L24:
 600 00fa C046     		.align	2
 601              	.L23:
 602 00fc 00000000 		.word	x2_mavg
 603 0100 00000000 		.word	y2_mavg
 604 0104 00000000 		.word	i
 605 0108 00000000 		.word	b2_mavg
 606              		.cfi_endproc
 607              	.LFE39:
 608              		.size	mavg_filter2, .-mavg_filter2
 609              		.section	.text.low_pass_filter,"ax",%progbits
 610              		.align	2
 611              		.global	low_pass_filter
 612              		.code	16
 613              		.thumb_func
 614              		.type	low_pass_filter, %function
 615              	low_pass_filter:
 616              	.LFB40:
  93:.\main.c      **** 
  94:.\main.c      **** /***********************************Lavpas filter***********************************/
  95:.\main.c      **** 
  96:.\main.c      **** int low_pass_filter(int data)
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 14


  97:.\main.c      **** {
 617              		.loc 1 97 0
 618              		.cfi_startproc
 619 0000 B0B5     		push	{r4, r5, r7, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 4, -16
 622              		.cfi_offset 5, -12
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 84B0     		sub	sp, sp, #16
 626              		.cfi_def_cfa_offset 32
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
  98:.\main.c      ****    int i;
  99:.\main.c      ****    x_low[0] =  (double) data;
 630              		.loc 1 99 0
 631 0008 7868     		ldr	r0, [r7, #4]
 632 000a FFF7FEFF 		bl	__aeabi_i2d
 633 000e 031C     		mov	r3, r0
 634 0010 0C1C     		mov	r4, r1
 635 0012 404A     		ldr	r2, .L33
 636 0014 1360     		str	r3, [r2]
 637 0016 5460     		str	r4, [r2, #4]
 100:.\main.c      ****    
 101:.\main.c      ****    y_low[0] = 0;
 638              		.loc 1 101 0
 639 0018 3F4A     		ldr	r2, .L33+4
 640 001a 0023     		mov	r3, #0
 641 001c 0024     		mov	r4, #0
 642 001e 1360     		str	r3, [r2]
 643 0020 5460     		str	r4, [r2, #4]
 102:.\main.c      ****   
 103:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_low;i++)                 // Run IIR filter for each received sample
 644              		.loc 1 103 0
 645 0022 0023     		mov	r3, #0
 646 0024 FB60     		str	r3, [r7, #12]
 647 0026 1EE0     		b	.L26
 648              	.L27:
 104:.\main.c      ****    {
 105:.\main.c      ****       y_low[0] += b_low[i]*x_low[i];
 649              		.loc 1 105 0 discriminator 3
 650 0028 3B4B     		ldr	r3, .L33+4
 651 002a 1C68     		ldr	r4, [r3]
 652 002c 5D68     		ldr	r5, [r3, #4]
 653 002e 3B4A     		ldr	r2, .L33+8
 654 0030 FB68     		ldr	r3, [r7, #12]
 655 0032 DB00     		lsl	r3, r3, #3
 656 0034 D318     		add	r3, r2, r3
 657 0036 1868     		ldr	r0, [r3]
 658 0038 5968     		ldr	r1, [r3, #4]
 659 003a 364A     		ldr	r2, .L33
 660 003c FB68     		ldr	r3, [r7, #12]
 661 003e DB00     		lsl	r3, r3, #3
 662 0040 D318     		add	r3, r2, r3
 663 0042 1A68     		ldr	r2, [r3]
 664 0044 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 15


 665 0046 FFF7FEFF 		bl	__aeabi_dmul
 666 004a 021C     		mov	r2, r0
 667 004c 0B1C     		mov	r3, r1
 668 004e 201C     		mov	r0, r4
 669 0050 291C     		mov	r1, r5
 670 0052 FFF7FEFF 		bl	__aeabi_dadd
 671 0056 031C     		mov	r3, r0
 672 0058 0C1C     		mov	r4, r1
 673 005a 2F4A     		ldr	r2, .L33+4
 674 005c 1360     		str	r3, [r2]
 675 005e 5460     		str	r4, [r2, #4]
 103:.\main.c      ****    {
 676              		.loc 1 103 0 discriminator 3
 677 0060 FB68     		ldr	r3, [r7, #12]
 678 0062 0133     		add	r3, r3, #1
 679 0064 FB60     		str	r3, [r7, #12]
 680              	.L26:
 103:.\main.c      ****    {
 681              		.loc 1 103 0 is_stmt 0 discriminator 1
 682 0066 FB68     		ldr	r3, [r7, #12]
 683 0068 022B     		cmp	r3, #2
 684 006a DDDD     		ble	.L27
 106:.\main.c      ****    } 
 107:.\main.c      ****    
 108:.\main.c      ****    for(i =1;i <= FILTER_LENGTH_low;i++)               // Roll x array in order to hold old sample i
 685              		.loc 1 108 0 is_stmt 1
 686 006c 0123     		mov	r3, #1
 687 006e FB60     		str	r3, [r7, #12]
 688 0070 1EE0     		b	.L28
 689              	.L29:
 109:.\main.c      ****    {
 110:.\main.c      ****       y_low[0] -= a_low[i]*y_low[i];
 690              		.loc 1 110 0 discriminator 3
 691 0072 294B     		ldr	r3, .L33+4
 692 0074 1C68     		ldr	r4, [r3]
 693 0076 5D68     		ldr	r5, [r3, #4]
 694 0078 294A     		ldr	r2, .L33+12
 695 007a FB68     		ldr	r3, [r7, #12]
 696 007c DB00     		lsl	r3, r3, #3
 697 007e D318     		add	r3, r2, r3
 698 0080 1868     		ldr	r0, [r3]
 699 0082 5968     		ldr	r1, [r3, #4]
 700 0084 244A     		ldr	r2, .L33+4
 701 0086 FB68     		ldr	r3, [r7, #12]
 702 0088 DB00     		lsl	r3, r3, #3
 703 008a D318     		add	r3, r2, r3
 704 008c 1A68     		ldr	r2, [r3]
 705 008e 5B68     		ldr	r3, [r3, #4]
 706 0090 FFF7FEFF 		bl	__aeabi_dmul
 707 0094 021C     		mov	r2, r0
 708 0096 0B1C     		mov	r3, r1
 709 0098 201C     		mov	r0, r4
 710 009a 291C     		mov	r1, r5
 711 009c FFF7FEFF 		bl	__aeabi_dsub
 712 00a0 031C     		mov	r3, r0
 713 00a2 0C1C     		mov	r4, r1
 714 00a4 1C4A     		ldr	r2, .L33+4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 16


 715 00a6 1360     		str	r3, [r2]
 716 00a8 5460     		str	r4, [r2, #4]
 108:.\main.c      ****    {
 717              		.loc 1 108 0 discriminator 3
 718 00aa FB68     		ldr	r3, [r7, #12]
 719 00ac 0133     		add	r3, r3, #1
 720 00ae FB60     		str	r3, [r7, #12]
 721              	.L28:
 108:.\main.c      ****    {
 722              		.loc 1 108 0 is_stmt 0 discriminator 1
 723 00b0 FB68     		ldr	r3, [r7, #12]
 724 00b2 022B     		cmp	r3, #2
 725 00b4 DDDD     		ble	.L29
 111:.\main.c      ****    }
 112:.\main.c      **** 
 113:.\main.c      ****    for(i = FILTER_LENGTH_low-1;i >= 0;i--)
 726              		.loc 1 113 0 is_stmt 1
 727 00b6 0123     		mov	r3, #1
 728 00b8 FB60     		str	r3, [r7, #12]
 729 00ba 1CE0     		b	.L30
 730              	.L31:
 114:.\main.c      ****     {
 115:.\main.c      ****        x_low[i+1]=x_low[i];
 731              		.loc 1 115 0 discriminator 3
 732 00bc FB68     		ldr	r3, [r7, #12]
 733 00be 5A1C     		add	r2, r3, #1
 734 00c0 1449     		ldr	r1, .L33
 735 00c2 FB68     		ldr	r3, [r7, #12]
 736 00c4 DB00     		lsl	r3, r3, #3
 737 00c6 CB18     		add	r3, r1, r3
 738 00c8 5C68     		ldr	r4, [r3, #4]
 739 00ca 1B68     		ldr	r3, [r3]
 740 00cc 1149     		ldr	r1, .L33
 741 00ce D200     		lsl	r2, r2, #3
 742 00d0 8A18     		add	r2, r1, r2
 743 00d2 1360     		str	r3, [r2]
 744 00d4 5460     		str	r4, [r2, #4]
 116:.\main.c      ****        y_low[i+1]=y_low[i];
 745              		.loc 1 116 0 discriminator 3
 746 00d6 FB68     		ldr	r3, [r7, #12]
 747 00d8 5A1C     		add	r2, r3, #1
 748 00da 0F49     		ldr	r1, .L33+4
 749 00dc FB68     		ldr	r3, [r7, #12]
 750 00de DB00     		lsl	r3, r3, #3
 751 00e0 CB18     		add	r3, r1, r3
 752 00e2 5C68     		ldr	r4, [r3, #4]
 753 00e4 1B68     		ldr	r3, [r3]
 754 00e6 0C49     		ldr	r1, .L33+4
 755 00e8 D200     		lsl	r2, r2, #3
 756 00ea 8A18     		add	r2, r1, r2
 757 00ec 1360     		str	r3, [r2]
 758 00ee 5460     		str	r4, [r2, #4]
 113:.\main.c      ****     {
 759              		.loc 1 113 0 discriminator 3
 760 00f0 FB68     		ldr	r3, [r7, #12]
 761 00f2 013B     		sub	r3, r3, #1
 762 00f4 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 17


 763              	.L30:
 113:.\main.c      ****     {
 764              		.loc 1 113 0 is_stmt 0 discriminator 1
 765 00f6 FB68     		ldr	r3, [r7, #12]
 766 00f8 002B     		cmp	r3, #0
 767 00fa DFDA     		bge	.L31
 117:.\main.c      ****     }
 118:.\main.c      **** 
 119:.\main.c      ****     return floor_and_convert(y_low[0]);
 768              		.loc 1 119 0 is_stmt 1
 769 00fc 064B     		ldr	r3, .L33+4
 770 00fe 5C68     		ldr	r4, [r3, #4]
 771 0100 1B68     		ldr	r3, [r3]
 772 0102 181C     		mov	r0, r3
 773 0104 211C     		mov	r1, r4
 774 0106 FFF7FEFF 		bl	floor_and_convert
 775 010a 031C     		mov	r3, r0
 120:.\main.c      **** }
 776              		.loc 1 120 0
 777 010c 181C     		mov	r0, r3
 778 010e BD46     		mov	sp, r7
 779 0110 04B0     		add	sp, sp, #16
 780              		@ sp needed
 781 0112 B0BD     		pop	{r4, r5, r7, pc}
 782              	.L34:
 783              		.align	2
 784              	.L33:
 785 0114 00000000 		.word	x_low
 786 0118 00000000 		.word	y_low
 787 011c 00000000 		.word	b_low
 788 0120 00000000 		.word	a_low
 789              		.cfi_endproc
 790              	.LFE40:
 791              		.size	low_pass_filter, .-low_pass_filter
 792              		.global	__aeabi_idiv
 793              		.section	.text.roed_grader,"ax",%progbits
 794              		.align	2
 795              		.global	roed_grader
 796              		.code	16
 797              		.thumb_func
 798              		.type	roed_grader, %function
 799              	roed_grader:
 800              	.LFB41:
 121:.\main.c      **** 
 122:.\main.c      **** 
 123:.\main.c      **** /***********************************Omregning til grader for rød**********************************
 124:.\main.c      **** int roed_grader(int data)
 125:.\main.c      **** {
 801              		.loc 1 125 0
 802              		.cfi_startproc
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 82B0     		sub	sp, sp, #8
 808              		.cfi_def_cfa_offset 16
 809 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 18


 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 126:.\main.c      ****     if ((data >= -204) && (data <= -202))
 812              		.loc 1 126 0
 813 0008 7B68     		ldr	r3, [r7, #4]
 814 000a CC33     		add	r3, r3, #204
 815 000c 10DB     		blt	.L36
 816              		.loc 1 126 0 is_stmt 0 discriminator 1
 817 000e 7B68     		ldr	r3, [r7, #4]
 818 0010 C933     		add	r3, r3, #201
 819 0012 0DDA     		bge	.L36
 127:.\main.c      ****     {
 128:.\main.c      ****         data=(0+(10-0)*(data-(-202))/(-204-(-202)));
 820              		.loc 1 128 0 is_stmt 1
 821 0014 7B68     		ldr	r3, [r7, #4]
 822 0016 CA33     		add	r3, r3, #202
 823 0018 1A1C     		mov	r2, r3
 824 001a 131C     		mov	r3, r2
 825 001c 9B00     		lsl	r3, r3, #2
 826 001e 9B18     		add	r3, r3, r2
 827 0020 5B00     		lsl	r3, r3, #1
 828 0022 00D5     		bpl	.L37
 829 0024 0133     		add	r3, r3, #1
 830              	.L37:
 831 0026 5B10     		asr	r3, r3, #1
 832 0028 5B42     		neg	r3, r3
 833 002a 7B60     		str	r3, [r7, #4]
 129:.\main.c      ****         return data; 
 834              		.loc 1 129 0
 835 002c 7B68     		ldr	r3, [r7, #4]
 836 002e 71E0     		b	.L38
 837              	.L36:
 130:.\main.c      ****     }
 131:.\main.c      ****     else if ((data >= -202) && (data <= -185))
 838              		.loc 1 131 0
 839 0030 7B68     		ldr	r3, [r7, #4]
 840 0032 CA33     		add	r3, r3, #202
 841 0034 12DB     		blt	.L39
 842              		.loc 1 131 0 is_stmt 0 discriminator 1
 843 0036 7B68     		ldr	r3, [r7, #4]
 844 0038 B833     		add	r3, r3, #184
 845 003a 0FDA     		bge	.L39
 132:.\main.c      ****     {
 133:.\main.c      ****         data=(10+(30-10)*(data-(-202))/(-185-(-202)));
 846              		.loc 1 133 0 is_stmt 1
 847 003c 7B68     		ldr	r3, [r7, #4]
 848 003e CA33     		add	r3, r3, #202
 849 0040 1A1C     		mov	r2, r3
 850 0042 131C     		mov	r3, r2
 851 0044 9B00     		lsl	r3, r3, #2
 852 0046 9B18     		add	r3, r3, r2
 853 0048 9B00     		lsl	r3, r3, #2
 854 004a 181C     		mov	r0, r3
 855 004c 1121     		mov	r1, #17
 856 004e FFF7FEFF 		bl	__aeabi_idiv
 857 0052 031C     		mov	r3, r0
 858 0054 0A33     		add	r3, r3, #10
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 19


 859 0056 7B60     		str	r3, [r7, #4]
 134:.\main.c      ****         return data;
 860              		.loc 1 134 0
 861 0058 7B68     		ldr	r3, [r7, #4]
 862 005a 5BE0     		b	.L38
 863              	.L39:
 135:.\main.c      ****     }
 136:.\main.c      ****     else if ((data >= -185) && (data <= -143))
 864              		.loc 1 136 0
 865 005c 7B68     		ldr	r3, [r7, #4]
 866 005e B933     		add	r3, r3, #185
 867 0060 12DB     		blt	.L40
 868              		.loc 1 136 0 is_stmt 0 discriminator 1
 869 0062 7B68     		ldr	r3, [r7, #4]
 870 0064 8E33     		add	r3, r3, #142
 871 0066 0FDA     		bge	.L40
 137:.\main.c      ****     {
 138:.\main.c      ****         data=(30+(50-30)*(data-(-185))/(-143-(-185)));
 872              		.loc 1 138 0 is_stmt 1
 873 0068 7B68     		ldr	r3, [r7, #4]
 874 006a B933     		add	r3, r3, #185
 875 006c 1A1C     		mov	r2, r3
 876 006e 131C     		mov	r3, r2
 877 0070 9B00     		lsl	r3, r3, #2
 878 0072 9B18     		add	r3, r3, r2
 879 0074 9B00     		lsl	r3, r3, #2
 880 0076 181C     		mov	r0, r3
 881 0078 2A21     		mov	r1, #42
 882 007a FFF7FEFF 		bl	__aeabi_idiv
 883 007e 031C     		mov	r3, r0
 884 0080 1E33     		add	r3, r3, #30
 885 0082 7B60     		str	r3, [r7, #4]
 139:.\main.c      ****         return data;
 886              		.loc 1 139 0
 887 0084 7B68     		ldr	r3, [r7, #4]
 888 0086 45E0     		b	.L38
 889              	.L40:
 140:.\main.c      ****     }
 141:.\main.c      ****     else if ((data >= -143) && (data <= -84))
 890              		.loc 1 141 0
 891 0088 7B68     		ldr	r3, [r7, #4]
 892 008a 8F33     		add	r3, r3, #143
 893 008c 12DB     		blt	.L41
 894              		.loc 1 141 0 is_stmt 0 discriminator 1
 895 008e 7B68     		ldr	r3, [r7, #4]
 896 0090 5333     		add	r3, r3, #83
 897 0092 0FDA     		bge	.L41
 142:.\main.c      ****     {
 143:.\main.c      ****         data=(50+(70-50)*(data-(-143))/(-84-(-143)));
 898              		.loc 1 143 0 is_stmt 1
 899 0094 7B68     		ldr	r3, [r7, #4]
 900 0096 8F33     		add	r3, r3, #143
 901 0098 1A1C     		mov	r2, r3
 902 009a 131C     		mov	r3, r2
 903 009c 9B00     		lsl	r3, r3, #2
 904 009e 9B18     		add	r3, r3, r2
 905 00a0 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 20


 906 00a2 181C     		mov	r0, r3
 907 00a4 3B21     		mov	r1, #59
 908 00a6 FFF7FEFF 		bl	__aeabi_idiv
 909 00aa 031C     		mov	r3, r0
 910 00ac 3233     		add	r3, r3, #50
 911 00ae 7B60     		str	r3, [r7, #4]
 144:.\main.c      ****         return data;
 912              		.loc 1 144 0
 913 00b0 7B68     		ldr	r3, [r7, #4]
 914 00b2 2FE0     		b	.L38
 915              	.L41:
 145:.\main.c      ****     }
 146:.\main.c      ****     else if ((data >= -84) && (data <= -48))
 916              		.loc 1 146 0
 917 00b4 7B68     		ldr	r3, [r7, #4]
 918 00b6 5433     		add	r3, r3, #84
 919 00b8 12DB     		blt	.L42
 920              		.loc 1 146 0 is_stmt 0 discriminator 1
 921 00ba 7B68     		ldr	r3, [r7, #4]
 922 00bc 2F33     		add	r3, r3, #47
 923 00be 0FDA     		bge	.L42
 147:.\main.c      ****     {
 148:.\main.c      ****         data=(70+(80-70)*(data-(-84))/(-48-(-84)));
 924              		.loc 1 148 0 is_stmt 1
 925 00c0 7B68     		ldr	r3, [r7, #4]
 926 00c2 5433     		add	r3, r3, #84
 927 00c4 1A1C     		mov	r2, r3
 928 00c6 131C     		mov	r3, r2
 929 00c8 9B00     		lsl	r3, r3, #2
 930 00ca 9B18     		add	r3, r3, r2
 931 00cc 5B00     		lsl	r3, r3, #1
 932 00ce 181C     		mov	r0, r3
 933 00d0 2421     		mov	r1, #36
 934 00d2 FFF7FEFF 		bl	__aeabi_idiv
 935 00d6 031C     		mov	r3, r0
 936 00d8 4633     		add	r3, r3, #70
 937 00da 7B60     		str	r3, [r7, #4]
 149:.\main.c      ****         return data;
 938              		.loc 1 149 0
 939 00dc 7B68     		ldr	r3, [r7, #4]
 940 00de 19E0     		b	.L38
 941              	.L42:
 150:.\main.c      ****     }
 151:.\main.c      ****     else if ((data >= -48) && (data <= -7))
 942              		.loc 1 151 0
 943 00e0 7B68     		ldr	r3, [r7, #4]
 944 00e2 3033     		add	r3, r3, #48
 945 00e4 12DB     		blt	.L43
 946              		.loc 1 151 0 is_stmt 0 discriminator 1
 947 00e6 7B68     		ldr	r3, [r7, #4]
 948 00e8 0633     		add	r3, r3, #6
 949 00ea 0FDA     		bge	.L43
 152:.\main.c      ****     {
 153:.\main.c      ****         data=(80+(90-80)*(data-(-48))/(-7-(-48)));
 950              		.loc 1 153 0 is_stmt 1
 951 00ec 7B68     		ldr	r3, [r7, #4]
 952 00ee 3033     		add	r3, r3, #48
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 21


 953 00f0 1A1C     		mov	r2, r3
 954 00f2 131C     		mov	r3, r2
 955 00f4 9B00     		lsl	r3, r3, #2
 956 00f6 9B18     		add	r3, r3, r2
 957 00f8 5B00     		lsl	r3, r3, #1
 958 00fa 181C     		mov	r0, r3
 959 00fc 2921     		mov	r1, #41
 960 00fe FFF7FEFF 		bl	__aeabi_idiv
 961 0102 031C     		mov	r3, r0
 962 0104 5033     		add	r3, r3, #80
 963 0106 7B60     		str	r3, [r7, #4]
 154:.\main.c      ****         return data;
 964              		.loc 1 154 0
 965 0108 7B68     		ldr	r3, [r7, #4]
 966 010a 03E0     		b	.L38
 967              	.L43:
 155:.\main.c      ****     }
 156:.\main.c      ****     
 157:.\main.c      ****     else
 158:.\main.c      ****     {
 159:.\main.c      ****         data = -200;
 968              		.loc 1 159 0
 969 010c C823     		mov	r3, #200
 970 010e 5B42     		neg	r3, r3
 971 0110 7B60     		str	r3, [r7, #4]
 160:.\main.c      ****         return data;
 972              		.loc 1 160 0
 973 0112 7B68     		ldr	r3, [r7, #4]
 974              	.L38:
 161:.\main.c      ****     }
 162:.\main.c      **** }
 975              		.loc 1 162 0
 976 0114 181C     		mov	r0, r3
 977 0116 BD46     		mov	sp, r7
 978 0118 02B0     		add	sp, sp, #8
 979              		@ sp needed
 980 011a 80BD     		pop	{r7, pc}
 981              		.cfi_endproc
 982              	.LFE41:
 983              		.size	roed_grader, .-roed_grader
 984              		.section	.text.groen_grader,"ax",%progbits
 985              		.align	2
 986              		.global	groen_grader
 987              		.code	16
 988              		.thumb_func
 989              		.type	groen_grader, %function
 990              	groen_grader:
 991              	.LFB42:
 163:.\main.c      **** 
 164:.\main.c      **** /***********************************Omregning til grader for grøn*********************************
 165:.\main.c      **** int groen_grader(int data)
 166:.\main.c      **** {
 992              		.loc 1 166 0
 993              		.cfi_startproc
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 22


 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 167:.\main.c      ****     if ((data >= -190) && (data <= -186))
 1003              		.loc 1 167 0
 1004 0008 7B68     		ldr	r3, [r7, #4]
 1005 000a BE33     		add	r3, r3, #190
 1006 000c 0FDB     		blt	.L45
 1007              		.loc 1 167 0 is_stmt 0 discriminator 1
 1008 000e 7B68     		ldr	r3, [r7, #4]
 1009 0010 B933     		add	r3, r3, #185
 1010 0012 0CDA     		bge	.L45
 168:.\main.c      ****     {
 169:.\main.c      ****         data=(0+(10-0)*(data-(-190))/(-186-(-190)));
 1011              		.loc 1 169 0 is_stmt 1
 1012 0014 7B68     		ldr	r3, [r7, #4]
 1013 0016 BE33     		add	r3, r3, #190
 1014 0018 1A1C     		mov	r2, r3
 1015 001a 131C     		mov	r3, r2
 1016 001c 9B00     		lsl	r3, r3, #2
 1017 001e 9B18     		add	r3, r3, r2
 1018 0020 5B00     		lsl	r3, r3, #1
 1019 0022 00D5     		bpl	.L46
 1020 0024 0333     		add	r3, r3, #3
 1021              	.L46:
 1022 0026 9B10     		asr	r3, r3, #2
 1023 0028 7B60     		str	r3, [r7, #4]
 170:.\main.c      ****         return data; 
 1024              		.loc 1 170 0
 1025 002a 7B68     		ldr	r3, [r7, #4]
 1026 002c 71E0     		b	.L47
 1027              	.L45:
 171:.\main.c      ****     }
 172:.\main.c      ****     else if ((data >= -186) && (data <= -163))
 1028              		.loc 1 172 0
 1029 002e 7B68     		ldr	r3, [r7, #4]
 1030 0030 BA33     		add	r3, r3, #186
 1031 0032 12DB     		blt	.L48
 1032              		.loc 1 172 0 is_stmt 0 discriminator 1
 1033 0034 7B68     		ldr	r3, [r7, #4]
 1034 0036 A233     		add	r3, r3, #162
 1035 0038 0FDA     		bge	.L48
 173:.\main.c      ****     {
 174:.\main.c      ****         data=(10+(30-10)*(data-(-186))/(-163-(-186)));
 1036              		.loc 1 174 0 is_stmt 1
 1037 003a 7B68     		ldr	r3, [r7, #4]
 1038 003c BA33     		add	r3, r3, #186
 1039 003e 1A1C     		mov	r2, r3
 1040 0040 131C     		mov	r3, r2
 1041 0042 9B00     		lsl	r3, r3, #2
 1042 0044 9B18     		add	r3, r3, r2
 1043 0046 9B00     		lsl	r3, r3, #2
 1044 0048 181C     		mov	r0, r3
 1045 004a 1721     		mov	r1, #23
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 23


 1046 004c FFF7FEFF 		bl	__aeabi_idiv
 1047 0050 031C     		mov	r3, r0
 1048 0052 0A33     		add	r3, r3, #10
 1049 0054 7B60     		str	r3, [r7, #4]
 175:.\main.c      ****         return data;
 1050              		.loc 1 175 0
 1051 0056 7B68     		ldr	r3, [r7, #4]
 1052 0058 5BE0     		b	.L47
 1053              	.L48:
 176:.\main.c      ****     }
 177:.\main.c      ****     else if ((data >= -163) && (data <= -121))
 1054              		.loc 1 177 0
 1055 005a 7B68     		ldr	r3, [r7, #4]
 1056 005c A333     		add	r3, r3, #163
 1057 005e 12DB     		blt	.L49
 1058              		.loc 1 177 0 is_stmt 0 discriminator 1
 1059 0060 7B68     		ldr	r3, [r7, #4]
 1060 0062 7833     		add	r3, r3, #120
 1061 0064 0FDA     		bge	.L49
 178:.\main.c      ****     {
 179:.\main.c      ****         data=(30+(50-30)*(data-(-163))/(-121-(-163)));
 1062              		.loc 1 179 0 is_stmt 1
 1063 0066 7B68     		ldr	r3, [r7, #4]
 1064 0068 A333     		add	r3, r3, #163
 1065 006a 1A1C     		mov	r2, r3
 1066 006c 131C     		mov	r3, r2
 1067 006e 9B00     		lsl	r3, r3, #2
 1068 0070 9B18     		add	r3, r3, r2
 1069 0072 9B00     		lsl	r3, r3, #2
 1070 0074 181C     		mov	r0, r3
 1071 0076 2A21     		mov	r1, #42
 1072 0078 FFF7FEFF 		bl	__aeabi_idiv
 1073 007c 031C     		mov	r3, r0
 1074 007e 1E33     		add	r3, r3, #30
 1075 0080 7B60     		str	r3, [r7, #4]
 180:.\main.c      ****         return data;
 1076              		.loc 1 180 0
 1077 0082 7B68     		ldr	r3, [r7, #4]
 1078 0084 45E0     		b	.L47
 1079              	.L49:
 181:.\main.c      ****     }
 182:.\main.c      ****     else if ((data >= -121) && (data <= -62))
 1080              		.loc 1 182 0
 1081 0086 7B68     		ldr	r3, [r7, #4]
 1082 0088 7933     		add	r3, r3, #121
 1083 008a 12DB     		blt	.L50
 1084              		.loc 1 182 0 is_stmt 0 discriminator 1
 1085 008c 7B68     		ldr	r3, [r7, #4]
 1086 008e 3D33     		add	r3, r3, #61
 1087 0090 0FDA     		bge	.L50
 183:.\main.c      ****     {
 184:.\main.c      ****         data=(50+(70-50)*(data-(-121))/(-62-(-121)));
 1088              		.loc 1 184 0 is_stmt 1
 1089 0092 7B68     		ldr	r3, [r7, #4]
 1090 0094 7933     		add	r3, r3, #121
 1091 0096 1A1C     		mov	r2, r3
 1092 0098 131C     		mov	r3, r2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 24


 1093 009a 9B00     		lsl	r3, r3, #2
 1094 009c 9B18     		add	r3, r3, r2
 1095 009e 9B00     		lsl	r3, r3, #2
 1096 00a0 181C     		mov	r0, r3
 1097 00a2 3B21     		mov	r1, #59
 1098 00a4 FFF7FEFF 		bl	__aeabi_idiv
 1099 00a8 031C     		mov	r3, r0
 1100 00aa 3233     		add	r3, r3, #50
 1101 00ac 7B60     		str	r3, [r7, #4]
 185:.\main.c      ****         return data;
 1102              		.loc 1 185 0
 1103 00ae 7B68     		ldr	r3, [r7, #4]
 1104 00b0 2FE0     		b	.L47
 1105              	.L50:
 186:.\main.c      ****     }
 187:.\main.c      ****     else if ((data >= -62) && (data <= -26))
 1106              		.loc 1 187 0
 1107 00b2 7B68     		ldr	r3, [r7, #4]
 1108 00b4 3E33     		add	r3, r3, #62
 1109 00b6 12DB     		blt	.L51
 1110              		.loc 1 187 0 is_stmt 0 discriminator 1
 1111 00b8 7B68     		ldr	r3, [r7, #4]
 1112 00ba 1933     		add	r3, r3, #25
 1113 00bc 0FDA     		bge	.L51
 188:.\main.c      ****     {
 189:.\main.c      ****         data=(70+(80-70)*(data-(-62))/(-26-(-62)));
 1114              		.loc 1 189 0 is_stmt 1
 1115 00be 7B68     		ldr	r3, [r7, #4]
 1116 00c0 3E33     		add	r3, r3, #62
 1117 00c2 1A1C     		mov	r2, r3
 1118 00c4 131C     		mov	r3, r2
 1119 00c6 9B00     		lsl	r3, r3, #2
 1120 00c8 9B18     		add	r3, r3, r2
 1121 00ca 5B00     		lsl	r3, r3, #1
 1122 00cc 181C     		mov	r0, r3
 1123 00ce 2421     		mov	r1, #36
 1124 00d0 FFF7FEFF 		bl	__aeabi_idiv
 1125 00d4 031C     		mov	r3, r0
 1126 00d6 4633     		add	r3, r3, #70
 1127 00d8 7B60     		str	r3, [r7, #4]
 190:.\main.c      ****         return data;
 1128              		.loc 1 190 0
 1129 00da 7B68     		ldr	r3, [r7, #4]
 1130 00dc 19E0     		b	.L47
 1131              	.L51:
 191:.\main.c      ****     }
 192:.\main.c      ****     else if ((data >= -26) && (data <=11))
 1132              		.loc 1 192 0
 1133 00de 7B68     		ldr	r3, [r7, #4]
 1134 00e0 1A33     		add	r3, r3, #26
 1135 00e2 12DB     		blt	.L52
 1136              		.loc 1 192 0 is_stmt 0 discriminator 1
 1137 00e4 7B68     		ldr	r3, [r7, #4]
 1138 00e6 0B2B     		cmp	r3, #11
 1139 00e8 0FDC     		bgt	.L52
 193:.\main.c      ****     {
 194:.\main.c      ****         data=(80+(90-80)*(data-(-26))/(11-(-26)));
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 25


 1140              		.loc 1 194 0 is_stmt 1
 1141 00ea 7B68     		ldr	r3, [r7, #4]
 1142 00ec 1A33     		add	r3, r3, #26
 1143 00ee 1A1C     		mov	r2, r3
 1144 00f0 131C     		mov	r3, r2
 1145 00f2 9B00     		lsl	r3, r3, #2
 1146 00f4 9B18     		add	r3, r3, r2
 1147 00f6 5B00     		lsl	r3, r3, #1
 1148 00f8 181C     		mov	r0, r3
 1149 00fa 2521     		mov	r1, #37
 1150 00fc FFF7FEFF 		bl	__aeabi_idiv
 1151 0100 031C     		mov	r3, r0
 1152 0102 5033     		add	r3, r3, #80
 1153 0104 7B60     		str	r3, [r7, #4]
 195:.\main.c      ****         return data;
 1154              		.loc 1 195 0
 1155 0106 7B68     		ldr	r3, [r7, #4]
 1156 0108 03E0     		b	.L47
 1157              	.L52:
 196:.\main.c      ****     }
 197:.\main.c      ****     
 198:.\main.c      ****     else
 199:.\main.c      ****     {
 200:.\main.c      ****         data = -200;
 1158              		.loc 1 200 0
 1159 010a C823     		mov	r3, #200
 1160 010c 5B42     		neg	r3, r3
 1161 010e 7B60     		str	r3, [r7, #4]
 201:.\main.c      ****         
 202:.\main.c      ****         return data;
 1162              		.loc 1 202 0
 1163 0110 7B68     		ldr	r3, [r7, #4]
 1164              	.L47:
 203:.\main.c      ****     }
 204:.\main.c      **** }
 1165              		.loc 1 204 0
 1166 0112 181C     		mov	r0, r3
 1167 0114 BD46     		mov	sp, r7
 1168 0116 02B0     		add	sp, sp, #8
 1169              		@ sp needed
 1170 0118 80BD     		pop	{r7, pc}
 1171              		.cfi_endproc
 1172              	.LFE42:
 1173              		.size	groen_grader, .-groen_grader
 1174              		.global	__aeabi_ddiv
 1175 011a C046     		.section	.text.differentiator,"ax",%progbits
 1176              		.align	2
 1177              		.global	differentiator
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	differentiator, %function
 1181              	differentiator:
 1182              	.LFB43:
 205:.\main.c      **** 
 206:.\main.c      **** /***********************************Differentiator***********************************/
 207:.\main.c      **** 
 208:.\main.c      **** signed int differentiator(signed int new)
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 26


 209:.\main.c      **** {
 1183              		.loc 1 209 0
 1184              		.cfi_startproc
 1185 0000 90B5     		push	{r4, r7, lr}
 1186              		.cfi_def_cfa_offset 12
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 83B0     		sub	sp, sp, #12
 1191              		.cfi_def_cfa_offset 24
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 210:.\main.c      ****    diff = (new - old)/0.01;
 1195              		.loc 1 210 0
 1196 0008 204B     		ldr	r3, .L57
 1197 000a 1B88     		ldrh	r3, [r3]
 1198 000c 1BB2     		sxth	r3, r3
 1199 000e 7A68     		ldr	r2, [r7, #4]
 1200 0010 D31A     		sub	r3, r2, r3
 1201 0012 181C     		mov	r0, r3
 1202 0014 FFF7FEFF 		bl	__aeabi_i2d
 1203 0018 031C     		mov	r3, r0
 1204 001a 0C1C     		mov	r4, r1
 1205 001c 181C     		mov	r0, r3
 1206 001e 211C     		mov	r1, r4
 1207 0020 1B4A     		ldr	r2, .L57+4
 1208 0022 1C4B     		ldr	r3, .L57+8
 1209 0024 FFF7FEFF 		bl	__aeabi_ddiv
 1210 0028 031C     		mov	r3, r0
 1211 002a 0C1C     		mov	r4, r1
 1212 002c 181C     		mov	r0, r3
 1213 002e 211C     		mov	r1, r4
 1214 0030 FFF7FEFF 		bl	__aeabi_d2iz
 1215 0034 031C     		mov	r3, r0
 1216 0036 9AB2     		uxth	r2, r3
 1217 0038 174B     		ldr	r3, .L57+12
 1218 003a 1A80     		strh	r2, [r3]
 211:.\main.c      ****    old = new;
 1219              		.loc 1 211 0
 1220 003c 7B68     		ldr	r3, [r7, #4]
 1221 003e 9AB2     		uxth	r2, r3
 1222 0040 124B     		ldr	r3, .L57
 1223 0042 1A80     		strh	r2, [r3]
 212:.\main.c      ****    //return diff;
 213:.\main.c      ****     if(diff > 1)        //Stigende 
 1224              		.loc 1 213 0
 1225 0044 144B     		ldr	r3, .L57+12
 1226 0046 1B88     		ldrh	r3, [r3]
 1227 0048 1BB2     		sxth	r3, r3
 1228 004a 012B     		cmp	r3, #1
 1229 004c 06DD     		ble	.L54
 214:.\main.c      ****     {
 215:.\main.c      ****         diff = 10;
 1230              		.loc 1 215 0
 1231 004e 124B     		ldr	r3, .L57+12
 1232 0050 0A22     		mov	r2, #10
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 27


 1233 0052 1A80     		strh	r2, [r3]
 216:.\main.c      ****         return diff;
 1234              		.loc 1 216 0
 1235 0054 104B     		ldr	r3, .L57+12
 1236 0056 1B88     		ldrh	r3, [r3]
 1237 0058 1BB2     		sxth	r3, r3
 1238 005a 13E0     		b	.L55
 1239              	.L54:
 217:.\main.c      ****     }
 218:.\main.c      ****     
 219:.\main.c      ****     else if (diff < 1)  //faldene 
 1240              		.loc 1 219 0
 1241 005c 0E4B     		ldr	r3, .L57+12
 1242 005e 1B88     		ldrh	r3, [r3]
 1243 0060 1BB2     		sxth	r3, r3
 1244 0062 002B     		cmp	r3, #0
 1245 0064 07DC     		bgt	.L56
 220:.\main.c      ****     {
 221:.\main.c      ****         diff = -10;
 1246              		.loc 1 221 0
 1247 0066 0C4B     		ldr	r3, .L57+12
 1248 0068 0A22     		mov	r2, #10
 1249 006a 5242     		neg	r2, r2
 1250 006c 1A80     		strh	r2, [r3]
 222:.\main.c      ****         return diff;
 1251              		.loc 1 222 0
 1252 006e 0A4B     		ldr	r3, .L57+12
 1253 0070 1B88     		ldrh	r3, [r3]
 1254 0072 1BB2     		sxth	r3, r3
 1255 0074 06E0     		b	.L55
 1256              	.L56:
 223:.\main.c      ****     }
 224:.\main.c      ****     
 225:.\main.c      ****     else
 226:.\main.c      ****     {
 227:.\main.c      ****         diff=-200;
 1257              		.loc 1 227 0
 1258 0076 084B     		ldr	r3, .L57+12
 1259 0078 C822     		mov	r2, #200
 1260 007a 5242     		neg	r2, r2
 1261 007c 1A80     		strh	r2, [r3]
 228:.\main.c      ****         return diff;
 1262              		.loc 1 228 0
 1263 007e 064B     		ldr	r3, .L57+12
 1264 0080 1B88     		ldrh	r3, [r3]
 1265 0082 1BB2     		sxth	r3, r3
 1266              	.L55:
 229:.\main.c      ****     }
 230:.\main.c      **** }
 1267              		.loc 1 230 0
 1268 0084 181C     		mov	r0, r3
 1269 0086 BD46     		mov	sp, r7
 1270 0088 03B0     		add	sp, sp, #12
 1271              		@ sp needed
 1272 008a 90BD     		pop	{r4, r7, pc}
 1273              	.L58:
 1274              		.align	2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 28


 1275              	.L57:
 1276 008c 00000000 		.word	old
 1277 0090 7B14AE47 		.word	1202590843
 1278 0094 E17A843F 		.word	1065646817
 1279 0098 00000000 		.word	diff
 1280              		.cfi_endproc
 1281              	.LFE43:
 1282              		.size	differentiator, .-differentiator
 1283              		.section	.text.ADC_interrupt,"ax",%progbits
 1284              		.align	2
 1285              		.global	ADC_interrupt
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	ADC_interrupt, %function
 1289              	ADC_interrupt:
 1290              	.LFB44:
 231:.\main.c      **** 
 232:.\main.c      **** /***********************************ISR***********************************/
 233:.\main.c      **** 
 234:.\main.c      **** CY_ISR(ADC_interrupt)
 235:.\main.c      **** {  
 1291              		.loc 1 235 0
 1292              		.cfi_startproc
 1293 0000 80B5     		push	{r7, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 236:.\main.c      ****     accroed = ADC_GetResult16(0)-1010+7;
 1299              		.loc 1 236 0
 1300 0004 0020     		mov	r0, #0
 1301 0006 FFF7FEFF 		bl	ADC_GetResult16
 1302 000a 031C     		mov	r3, r0
 1303 000c 9BB2     		uxth	r3, r3
 1304 000e 524A     		ldr	r2, .L64
 1305 0010 9446     		mov	ip, r2
 1306 0012 6344     		add	r3, r3, ip
 1307 0014 9BB2     		uxth	r3, r3
 1308 0016 9AB2     		uxth	r2, r3
 1309 0018 504B     		ldr	r3, .L64+4
 1310 001a 1A80     		strh	r2, [r3]
 237:.\main.c      ****     accgroen = ADC_GetResult16(1)-1024+52;
 1311              		.loc 1 237 0
 1312 001c 0120     		mov	r0, #1
 1313 001e FFF7FEFF 		bl	ADC_GetResult16
 1314 0022 031C     		mov	r3, r0
 1315 0024 9BB2     		uxth	r3, r3
 1316 0026 4E4A     		ldr	r2, .L64+8
 1317 0028 9446     		mov	ip, r2
 1318 002a 6344     		add	r3, r3, ip
 1319 002c 9BB2     		uxth	r3, r3
 1320 002e 9AB2     		uxth	r2, r3
 1321 0030 4C4B     		ldr	r3, .L64+12
 1322 0032 1A80     		strh	r2, [r3]
 238:.\main.c      ****     EMG = ADC_GetResult16(2);
 1323              		.loc 1 238 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 29


 1324 0034 0220     		mov	r0, #2
 1325 0036 FFF7FEFF 		bl	ADC_GetResult16
 1326 003a 031C     		mov	r3, r0
 1327 003c 1A1C     		mov	r2, r3
 1328 003e 4A4B     		ldr	r3, .L64+16
 1329 0040 1A80     		strh	r2, [r3]
 239:.\main.c      ****     
 240:.\main.c      ****     data_ready = TRUE;
 1330              		.loc 1 240 0
 1331 0042 4A4B     		ldr	r3, .L64+20
 1332 0044 0122     		mov	r2, #1
 1333 0046 1A70     		strb	r2, [r3]
 241:.\main.c      ****     
 242:.\main.c      ****     /* Databehandling */
 243:.\main.c      ****          
 244:.\main.c      ****     if(data_ready)
 1334              		.loc 1 244 0
 1335 0048 484B     		ldr	r3, .L64+20
 1336 004a 1B78     		ldrb	r3, [r3]
 1337 004c 002B     		cmp	r3, #0
 1338 004e 00D1     		bne	.LCB1018
 1339 0050 7FE0     		b	.L59	@long jump
 1340              	.LCB1018:
 245:.\main.c      ****     {   
 246:.\main.c      ****         /* Accelerometerne*/
 247:.\main.c      ****         Debug_Write(1);
 1341              		.loc 1 247 0
 1342 0052 0120     		mov	r0, #1
 1343 0054 FFF7FEFF 		bl	Debug_Write
 248:.\main.c      ****         mav_data_roed = mavg_filter(accroed);           //Moving average filter til kanal 1
 1344              		.loc 1 248 0
 1345 0058 404B     		ldr	r3, .L64+4
 1346 005a 1B88     		ldrh	r3, [r3]
 1347 005c 1BB2     		sxth	r3, r3
 1348 005e 181C     		mov	r0, r3
 1349 0060 FFF7FEFF 		bl	mavg_filter
 1350 0064 031C     		mov	r3, r0
 1351 0066 9AB2     		uxth	r2, r3
 1352 0068 414B     		ldr	r3, .L64+24
 1353 006a 1A80     		strh	r2, [r3]
 249:.\main.c      ****         Debug_Write(0);
 1354              		.loc 1 249 0
 1355 006c 0020     		mov	r0, #0
 1356 006e FFF7FEFF 		bl	Debug_Write
 250:.\main.c      ****         
 251:.\main.c      ****         grader_roed = roed_grader(mav_data_roed);       //Grader tages til det filtrede signal
 1357              		.loc 1 251 0
 1358 0072 3F4B     		ldr	r3, .L64+24
 1359 0074 1B88     		ldrh	r3, [r3]
 1360 0076 1BB2     		sxth	r3, r3
 1361 0078 181C     		mov	r0, r3
 1362 007a FFF7FEFF 		bl	roed_grader
 1363 007e 031C     		mov	r3, r0
 1364 0080 9AB2     		uxth	r2, r3
 1365 0082 3C4B     		ldr	r3, .L64+28
 1366 0084 1A80     		strh	r2, [r3]
 252:.\main.c      ****         
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 30


 253:.\main.c      ****         mav_data_groen = mavg_filter2(accgroen);        //Moving average filter til kanal 2
 1367              		.loc 1 253 0
 1368 0086 374B     		ldr	r3, .L64+12
 1369 0088 1B88     		ldrh	r3, [r3]
 1370 008a 1BB2     		sxth	r3, r3
 1371 008c 181C     		mov	r0, r3
 1372 008e FFF7FEFF 		bl	mavg_filter2
 1373 0092 031C     		mov	r3, r0
 1374 0094 9AB2     		uxth	r2, r3
 1375 0096 384B     		ldr	r3, .L64+32
 1376 0098 1A80     		strh	r2, [r3]
 254:.\main.c      ****         grader_groen = groen_grader(mav_data_groen);    //Grader tages til det filtrede signal
 1377              		.loc 1 254 0
 1378 009a 374B     		ldr	r3, .L64+32
 1379 009c 1B88     		ldrh	r3, [r3]
 1380 009e 1BB2     		sxth	r3, r3
 1381 00a0 181C     		mov	r0, r3
 1382 00a2 FFF7FEFF 		bl	groen_grader
 1383 00a6 031C     		mov	r3, r0
 1384 00a8 9AB2     		uxth	r2, r3
 1385 00aa 344B     		ldr	r3, .L64+36
 1386 00ac 1A80     		strh	r2, [r3]
 255:.\main.c      **** 
 256:.\main.c      ****         samlet_grader=grader_roed+grader_groen;         //Graderne lægges sammen, således vinklen
 1387              		.loc 1 256 0
 1388 00ae 314B     		ldr	r3, .L64+28
 1389 00b0 1B88     		ldrh	r3, [r3]
 1390 00b2 9AB2     		uxth	r2, r3
 1391 00b4 314B     		ldr	r3, .L64+36
 1392 00b6 1B88     		ldrh	r3, [r3]
 1393 00b8 9BB2     		uxth	r3, r3
 1394 00ba D318     		add	r3, r2, r3
 1395 00bc 9BB2     		uxth	r3, r3
 1396 00be 9AB2     		uxth	r2, r3
 1397 00c0 2F4B     		ldr	r3, .L64+40
 1398 00c2 1A80     		strh	r2, [r3]
 257:.\main.c      ****  
 258:.\main.c      ****         
 259:.\main.c      ****          if (samlet_grader<90)
 1399              		.loc 1 259 0
 1400 00c4 2E4B     		ldr	r3, .L64+40
 1401 00c6 1B88     		ldrh	r3, [r3]
 1402 00c8 1BB2     		sxth	r3, r3
 1403 00ca 592B     		cmp	r3, #89
 1404 00cc 05DC     		bgt	.L61
 260:.\main.c      ****         {
 261:.\main.c      ****             Pin_Green_Write(LED_OFF); 
 1405              		.loc 1 261 0
 1406 00ce 0120     		mov	r0, #1
 1407 00d0 FFF7FEFF 		bl	Pin_Green_Write
 262:.\main.c      ****             Pin_Red_Write(LED_ON);
 1408              		.loc 1 262 0
 1409 00d4 0020     		mov	r0, #0
 1410 00d6 FFF7FEFF 		bl	Pin_Red_Write
 1411              	.L61:
 263:.\main.c      ****         }
 264:.\main.c      ****         if (samlet_grader>90)
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 31


 1412              		.loc 1 264 0
 1413 00da 294B     		ldr	r3, .L64+40
 1414 00dc 1B88     		ldrh	r3, [r3]
 1415 00de 1BB2     		sxth	r3, r3
 1416 00e0 5A2B     		cmp	r3, #90
 1417 00e2 05DD     		ble	.L62
 265:.\main.c      ****         {
 266:.\main.c      ****             Pin_Red_Write(LED_OFF);
 1418              		.loc 1 266 0
 1419 00e4 0120     		mov	r0, #1
 1420 00e6 FFF7FEFF 		bl	Pin_Red_Write
 267:.\main.c      ****             Pin_Green_Write(LED_ON);
 1421              		.loc 1 267 0
 1422 00ea 0020     		mov	r0, #0
 1423 00ec FFF7FEFF 		bl	Pin_Green_Write
 1424              	.L62:
 268:.\main.c      ****         }
 269:.\main.c      ****         if (k==1)
 1425              		.loc 1 269 0
 1426 00f0 244B     		ldr	r3, .L64+44
 1427 00f2 1B88     		ldrh	r3, [r3]
 1428 00f4 1BB2     		sxth	r3, r3
 1429 00f6 012B     		cmp	r3, #1
 1430 00f8 05D1     		bne	.L63
 270:.\main.c      ****         {
 271:.\main.c      ****            Pin_Red_Write(LED_OFF);
 1431              		.loc 1 271 0
 1432 00fa 0120     		mov	r0, #1
 1433 00fc FFF7FEFF 		bl	Pin_Red_Write
 272:.\main.c      ****            Pin_Green_Write(LED_OFF);
 1434              		.loc 1 272 0
 1435 0100 0120     		mov	r0, #1
 1436 0102 FFF7FEFF 		bl	Pin_Green_Write
 1437              	.L63:
 273:.\main.c      ****         }
 274:.\main.c      ****         
 275:.\main.c      ****         /* EMG */
 276:.\main.c      ****         low_pass_data = low_pass_filter(EMG);        
 1438              		.loc 1 276 0
 1439 0106 184B     		ldr	r3, .L64+16
 1440 0108 1B88     		ldrh	r3, [r3]
 1441 010a 1BB2     		sxth	r3, r3
 1442 010c 181C     		mov	r0, r3
 1443 010e FFF7FEFF 		bl	low_pass_filter
 1444 0112 031C     		mov	r3, r0
 1445 0114 9AB2     		uxth	r2, r3
 1446 0116 1C4B     		ldr	r3, .L64+48
 1447 0118 1A80     		strh	r2, [r3]
 277:.\main.c      ****         diff_data = differentiator(low_pass_data);
 1448              		.loc 1 277 0
 1449 011a 1B4B     		ldr	r3, .L64+48
 1450 011c 1B88     		ldrh	r3, [r3]
 1451 011e 1BB2     		sxth	r3, r3
 1452 0120 181C     		mov	r0, r3
 1453 0122 FFF7FEFF 		bl	differentiator
 1454 0126 031C     		mov	r3, r0
 1455 0128 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 32


 1456 012a 184B     		ldr	r3, .L64+52
 1457 012c 1A80     		strh	r2, [r3]
 278:.\main.c      ****             
 279:.\main.c      ****         
 280:.\main.c      ****         UART_UartPutChar(samlet_grader);                //plottes tilbage i MATLAB
 1458              		.loc 1 280 0
 1459 012e 144B     		ldr	r3, .L64+40
 1460 0130 1B88     		ldrh	r3, [r3]
 1461 0132 1BB2     		sxth	r3, r3
 1462 0134 181C     		mov	r0, r3
 1463 0136 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 281:.\main.c      ****         UART_UartPutChar(samlet_grader>>8);
 1464              		.loc 1 281 0
 1465 013a 114B     		ldr	r3, .L64+40
 1466 013c 1B88     		ldrh	r3, [r3]
 1467 013e 1BB2     		sxth	r3, r3
 1468 0140 1B12     		asr	r3, r3, #8
 1469 0142 9BB2     		uxth	r3, r3
 1470 0144 1BB2     		sxth	r3, r3
 1471 0146 181C     		mov	r0, r3
 1472 0148 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 282:.\main.c      ****       
 283:.\main.c      ****        
 284:.\main.c      ****         //UART_UartPutChar(counter);             
 285:.\main.c      ****         //UART_UartPutChar(counter>>8);
 286:.\main.c      ****         
 287:.\main.c      ****         //UART_UartPutChar(diff_data);
 288:.\main.c      ****         //UART_UartPutChar(diff_data>>8);
 289:.\main.c      ****         
 290:.\main.c      ****         data_ready = FALSE;
 1473              		.loc 1 290 0
 1474 014c 074B     		ldr	r3, .L64+20
 1475 014e 0022     		mov	r2, #0
 1476 0150 1A70     		strb	r2, [r3]
 1477              	.L59:
 291:.\main.c      ****     }
 292:.\main.c      **** }
 1478              		.loc 1 292 0
 1479 0152 BD46     		mov	sp, r7
 1480              		@ sp needed
 1481 0154 80BD     		pop	{r7, pc}
 1482              	.L65:
 1483 0156 C046     		.align	2
 1484              	.L64:
 1485 0158 15FCFFFF 		.word	-1003
 1486 015c 00000000 		.word	accroed
 1487 0160 34FCFFFF 		.word	-972
 1488 0164 00000000 		.word	accgroen
 1489 0168 00000000 		.word	EMG
 1490 016c 00000000 		.word	data_ready
 1491 0170 00000000 		.word	mav_data_roed
 1492 0174 00000000 		.word	grader_roed
 1493 0178 00000000 		.word	mav_data_groen
 1494 017c 00000000 		.word	grader_groen
 1495 0180 00000000 		.word	samlet_grader
 1496 0184 00000000 		.word	k
 1497 0188 00000000 		.word	low_pass_data
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 33


 1498 018c 00000000 		.word	diff_data
 1499              		.cfi_endproc
 1500              	.LFE44:
 1501              		.size	ADC_interrupt, .-ADC_interrupt
 1502              		.section	.text.Pin_SW2_handler,"ax",%progbits
 1503              		.align	2
 1504              		.global	Pin_SW2_handler
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	Pin_SW2_handler, %function
 1508              	Pin_SW2_handler:
 1509              	.LFB45:
 293:.\main.c      **** 
 294:.\main.c      **** CY_ISR(Pin_SW2_handler)
 295:.\main.c      **** {
 1510              		.loc 1 295 0
 1511              		.cfi_startproc
 1512 0000 80B5     		push	{r7, lr}
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 00AF     		add	r7, sp, #0
 1517              		.cfi_def_cfa_register 7
 296:.\main.c      ****     
 297:.\main.c      ****     if (j==0)
 1518              		.loc 1 297 0
 1519 0004 154B     		ldr	r3, .L69
 1520 0006 1B88     		ldrh	r3, [r3]
 1521 0008 002B     		cmp	r3, #0
 1522 000a 14D1     		bne	.L67
 298:.\main.c      ****     {
 299:.\main.c      ****         k=0;
 1523              		.loc 1 299 0
 1524 000c 144B     		ldr	r3, .L69+4
 1525 000e 0022     		mov	r2, #0
 1526 0010 1A80     		strh	r2, [r3]
 300:.\main.c      ****         Pin_Green_Write(LED_ON);
 1527              		.loc 1 300 0
 1528 0012 0020     		mov	r0, #0
 1529 0014 FFF7FEFF 		bl	Pin_Green_Write
 301:.\main.c      ****         Pin_Red_Write(LED_OFF);
 1530              		.loc 1 301 0
 1531 0018 0120     		mov	r0, #1
 1532 001a FFF7FEFF 		bl	Pin_Red_Write
 302:.\main.c      ****         ADC_StartConvert();
 1533              		.loc 1 302 0
 1534 001e FFF7FEFF 		bl	ADC_StartConvert
 303:.\main.c      ****         j++; 
 1535              		.loc 1 303 0
 1536 0022 0E4B     		ldr	r3, .L69
 1537 0024 1B88     		ldrh	r3, [r3]
 1538 0026 9BB2     		uxth	r3, r3
 1539 0028 9BB2     		uxth	r3, r3
 1540 002a 0133     		add	r3, r3, #1
 1541 002c 9BB2     		uxth	r3, r3
 1542 002e 9AB2     		uxth	r2, r3
 1543 0030 0A4B     		ldr	r3, .L69
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 34


 1544 0032 1A80     		strh	r2, [r3]
 1545 0034 0DE0     		b	.L68
 1546              	.L67:
 304:.\main.c      ****     }
 305:.\main.c      ****     
 306:.\main.c      ****     else 
 307:.\main.c      ****     {
 308:.\main.c      ****         ADC_StopConvert();
 1547              		.loc 1 308 0
 1548 0036 FFF7FEFF 		bl	ADC_StopConvert
 309:.\main.c      ****         Pin_Red_Write(LED_OFF);
 1549              		.loc 1 309 0
 1550 003a 0120     		mov	r0, #1
 1551 003c FFF7FEFF 		bl	Pin_Red_Write
 310:.\main.c      ****         Pin_Green_Write(LED_OFF);
 1552              		.loc 1 310 0
 1553 0040 0120     		mov	r0, #1
 1554 0042 FFF7FEFF 		bl	Pin_Green_Write
 311:.\main.c      ****         j=0;
 1555              		.loc 1 311 0
 1556 0046 054B     		ldr	r3, .L69
 1557 0048 0022     		mov	r2, #0
 1558 004a 1A80     		strh	r2, [r3]
 312:.\main.c      ****         k=1;
 1559              		.loc 1 312 0
 1560 004c 044B     		ldr	r3, .L69+4
 1561 004e 0122     		mov	r2, #1
 1562 0050 1A80     		strh	r2, [r3]
 1563              	.L68:
 313:.\main.c      ****     }
 314:.\main.c      ****     
 315:.\main.c      ****     Pin_SW2_ClearInterrupt(); 
 1564              		.loc 1 315 0
 1565 0052 FFF7FEFF 		bl	Pin_SW2_ClearInterrupt
 316:.\main.c      **** }
 1566              		.loc 1 316 0
 1567 0056 BD46     		mov	sp, r7
 1568              		@ sp needed
 1569 0058 80BD     		pop	{r7, pc}
 1570              	.L70:
 1571 005a C046     		.align	2
 1572              	.L69:
 1573 005c 00000000 		.word	j
 1574 0060 00000000 		.word	k
 1575              		.cfi_endproc
 1576              	.LFE45:
 1577              		.size	Pin_SW2_handler, .-Pin_SW2_handler
 1578              		.section	.text.main,"ax",%progbits
 1579              		.align	2
 1580              		.global	main
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	main, %function
 1584              	main:
 1585              	.LFB46:
 317:.\main.c      **** 
 318:.\main.c      **** /***********************************Main***********************************/
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 35


 319:.\main.c      **** int main()
 320:.\main.c      **** {   
 1586              		.loc 1 320 0
 1587              		.cfi_startproc
 1588 0000 80B5     		push	{r7, lr}
 1589              		.cfi_def_cfa_offset 8
 1590              		.cfi_offset 7, -8
 1591              		.cfi_offset 14, -4
 1592 0002 00AF     		add	r7, sp, #0
 1593              		.cfi_def_cfa_register 7
 321:.\main.c      ****     Debug_Write(0);
 1594              		.loc 1 321 0
 1595 0004 0020     		mov	r0, #0
 1596 0006 FFF7FEFF 		bl	Debug_Write
 322:.\main.c      ****     pin_SW2_int_StartEx(Pin_SW2_handler);
 1597              		.loc 1 322 0
 1598 000a 0A4B     		ldr	r3, .L73
 1599 000c 181C     		mov	r0, r3
 1600 000e FFF7FEFF 		bl	pin_SW2_int_StartEx
 323:.\main.c      ****     ADC_ISR_StartEx(ADC_interrupt);
 1601              		.loc 1 323 0
 1602 0012 094B     		ldr	r3, .L73+4
 1603 0014 181C     		mov	r0, r3
 1604 0016 FFF7FEFF 		bl	ADC_ISR_StartEx
 324:.\main.c      ****     CyGlobalIntEnable;
 1605              		.loc 1 324 0
 1606              	@ 324 ".\main.c" 1
 1607 001a 62B6     		CPSIE   i
 1608              	@ 0 "" 2
 325:.\main.c      ****     UART_Start();                       /* Initialize ADC */    
 1609              		.loc 1 325 0
 1610              		.code	16
 1611 001c FFF7FEFF 		bl	UART_Start
 326:.\main.c      ****     ADC_Start();                        /* Initialize ADC */
 1612              		.loc 1 326 0
 1613 0020 FFF7FEFF 		bl	ADC_Start
 327:.\main.c      ****     ADC_IRQ_Enable();                   /* Enable ADC interrupts */   
 1614              		.loc 1 327 0
 1615 0024 FFF7FEFF 		bl	ADC_IRQ_Enable
 328:.\main.c      ****     CySysPmSleep();
 1616              		.loc 1 328 0
 1617 0028 FFF7FEFF 		bl	CySysPmSleep
 329:.\main.c      ****     return 0;  
 1618              		.loc 1 329 0
 1619 002c 0023     		mov	r3, #0
 330:.\main.c      **** }...
 1620              		.loc 1 330 0
 1621 002e 181C     		mov	r0, r3
 1622 0030 BD46     		mov	sp, r7
 1623              		@ sp needed
 1624 0032 80BD     		pop	{r7, pc}
 1625              	.L74:
 1626              		.align	2
 1627              	.L73:
 1628 0034 00000000 		.word	Pin_SW2_handler
 1629 0038 00000000 		.word	ADC_interrupt
 1630              		.cfi_endproc
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 36


 1631              	.LFE46:
 1632              		.size	main, .-main
 1633              		.text
 1634              	.Letext0:
 1635              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1636              		.section	.debug_info,"",%progbits
 1637              	.Ldebug_info0:
 1638 0000 4C040000 		.4byte	0x44c
 1639 0004 0400     		.2byte	0x4
 1640 0006 00000000 		.4byte	.Ldebug_abbrev0
 1641 000a 04       		.byte	0x4
 1642 000b 01       		.uleb128 0x1
 1643 000c 5B020000 		.4byte	.LASF53
 1644 0010 01       		.byte	0x1
 1645 0011 A1000000 		.4byte	.LASF54
 1646 0015 45000000 		.4byte	.LASF55
 1647 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1648 001d 00000000 		.4byte	0
 1649 0021 00000000 		.4byte	.Ldebug_line0
 1650 0025 02       		.uleb128 0x2
 1651 0026 01       		.byte	0x1
 1652 0027 06       		.byte	0x6
 1653 0028 95000000 		.4byte	.LASF0
 1654 002c 02       		.uleb128 0x2
 1655 002d 01       		.byte	0x1
 1656 002e 08       		.byte	0x8
 1657 002f 96010000 		.4byte	.LASF1
 1658 0033 02       		.uleb128 0x2
 1659 0034 02       		.byte	0x2
 1660 0035 05       		.byte	0x5
 1661 0036 AA010000 		.4byte	.LASF2
 1662 003a 02       		.uleb128 0x2
 1663 003b 02       		.byte	0x2
 1664 003c 07       		.byte	0x7
 1665 003d 1C010000 		.4byte	.LASF3
 1666 0041 02       		.uleb128 0x2
 1667 0042 04       		.byte	0x4
 1668 0043 05       		.byte	0x5
 1669 0044 AA000000 		.4byte	.LASF4
 1670 0048 02       		.uleb128 0x2
 1671 0049 04       		.byte	0x4
 1672 004a 07       		.byte	0x7
 1673 004b F8000000 		.4byte	.LASF5
 1674 004f 02       		.uleb128 0x2
 1675 0050 08       		.byte	0x8
 1676 0051 05       		.byte	0x5
 1677 0052 87000000 		.4byte	.LASF6
 1678 0056 02       		.uleb128 0x2
 1679 0057 08       		.byte	0x8
 1680 0058 07       		.byte	0x7
 1681 0059 29000000 		.4byte	.LASF7
 1682 005d 03       		.uleb128 0x3
 1683 005e 04       		.byte	0x4
 1684 005f 05       		.byte	0x5
 1685 0060 696E7400 		.ascii	"int\000"
 1686 0064 02       		.uleb128 0x2
 1687 0065 04       		.byte	0x4
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 37


 1688 0066 07       		.byte	0x7
 1689 0067 EB000000 		.4byte	.LASF8
 1690 006b 04       		.uleb128 0x4
 1691 006c B3000000 		.4byte	.LASF9
 1692 0070 02       		.byte	0x2
 1693 0071 3801     		.2byte	0x138
 1694 0073 2C000000 		.4byte	0x2c
 1695 0077 04       		.uleb128 0x4
 1696 0078 D1000000 		.4byte	.LASF10
 1697 007c 02       		.byte	0x2
 1698 007d 3A01     		.2byte	0x13a
 1699 007f 48000000 		.4byte	0x48
 1700 0083 04       		.uleb128 0x4
 1701 0084 47020000 		.4byte	.LASF11
 1702 0088 02       		.byte	0x2
 1703 0089 3C01     		.2byte	0x13c
 1704 008b 33000000 		.4byte	0x33
 1705 008f 02       		.uleb128 0x2
 1706 0090 04       		.byte	0x4
 1707 0091 04       		.byte	0x4
 1708 0092 86010000 		.4byte	.LASF12
 1709 0096 02       		.uleb128 0x2
 1710 0097 08       		.byte	0x8
 1711 0098 04       		.byte	0x4
 1712 0099 CA000000 		.4byte	.LASF13
 1713 009d 02       		.uleb128 0x2
 1714 009e 01       		.byte	0x1
 1715 009f 08       		.byte	0x8
 1716 00a0 E9010000 		.4byte	.LASF14
 1717 00a4 02       		.uleb128 0x2
 1718 00a5 04       		.byte	0x4
 1719 00a6 07       		.byte	0x7
 1720 00a7 3B010000 		.4byte	.LASF15
 1721 00ab 05       		.uleb128 0x5
 1722 00ac EE010000 		.4byte	.LASF16
 1723 00b0 01       		.byte	0x1
 1724 00b1 2F       		.byte	0x2f
 1725 00b2 5D000000 		.4byte	0x5d
 1726 00b6 00000000 		.4byte	.LFB37
 1727 00ba 5C000000 		.4byte	.LFE37-.LFB37
 1728 00be 01       		.uleb128 0x1
 1729 00bf 9C       		.byte	0x9c
 1730 00c0 D1000000 		.4byte	0xd1
 1731 00c4 06       		.uleb128 0x6
 1732 00c5 7900     		.ascii	"y\000"
 1733 00c7 01       		.byte	0x1
 1734 00c8 2F       		.byte	0x2f
 1735 00c9 96000000 		.4byte	0x96
 1736 00cd 02       		.uleb128 0x2
 1737 00ce 91       		.byte	0x91
 1738 00cf 68       		.sleb128 -24
 1739 00d0 00       		.byte	0
 1740 00d1 05       		.uleb128 0x5
 1741 00d2 18020000 		.4byte	.LASF17
 1742 00d6 01       		.byte	0x1
 1743 00d7 38       		.byte	0x38
 1744 00d8 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 38


 1745 00dc 00000000 		.4byte	.LFB38
 1746 00e0 04010000 		.4byte	.LFE38-.LFB38
 1747 00e4 01       		.uleb128 0x1
 1748 00e5 9C       		.byte	0x9c
 1749 00e6 F9000000 		.4byte	0xf9
 1750 00ea 07       		.uleb128 0x7
 1751 00eb 0A010000 		.4byte	.LASF18
 1752 00ef 01       		.byte	0x1
 1753 00f0 38       		.byte	0x38
 1754 00f1 5D000000 		.4byte	0x5d
 1755 00f5 02       		.uleb128 0x2
 1756 00f6 91       		.byte	0x91
 1757 00f7 6C       		.sleb128 -20
 1758 00f8 00       		.byte	0
 1759 00f9 05       		.uleb128 0x5
 1760 00fa 0F010000 		.4byte	.LASF19
 1761 00fe 01       		.byte	0x1
 1762 00ff 4C       		.byte	0x4c
 1763 0100 5D000000 		.4byte	0x5d
 1764 0104 00000000 		.4byte	.LFB39
 1765 0108 0C010000 		.4byte	.LFE39-.LFB39
 1766 010c 01       		.uleb128 0x1
 1767 010d 9C       		.byte	0x9c
 1768 010e 21010000 		.4byte	0x121
 1769 0112 07       		.uleb128 0x7
 1770 0113 0A010000 		.4byte	.LASF18
 1771 0117 01       		.byte	0x1
 1772 0118 4C       		.byte	0x4c
 1773 0119 5D000000 		.4byte	0x5d
 1774 011d 02       		.uleb128 0x2
 1775 011e 91       		.byte	0x91
 1776 011f 6C       		.sleb128 -20
 1777 0120 00       		.byte	0
 1778 0121 05       		.uleb128 0x5
 1779 0122 C9010000 		.4byte	.LASF20
 1780 0126 01       		.byte	0x1
 1781 0127 60       		.byte	0x60
 1782 0128 5D000000 		.4byte	0x5d
 1783 012c 00000000 		.4byte	.LFB40
 1784 0130 24010000 		.4byte	.LFE40-.LFB40
 1785 0134 01       		.uleb128 0x1
 1786 0135 9C       		.byte	0x9c
 1787 0136 55010000 		.4byte	0x155
 1788 013a 07       		.uleb128 0x7
 1789 013b 0A010000 		.4byte	.LASF18
 1790 013f 01       		.byte	0x1
 1791 0140 60       		.byte	0x60
 1792 0141 5D000000 		.4byte	0x5d
 1793 0145 02       		.uleb128 0x2
 1794 0146 91       		.byte	0x91
 1795 0147 64       		.sleb128 -28
 1796 0148 08       		.uleb128 0x8
 1797 0149 6900     		.ascii	"i\000"
 1798 014b 01       		.byte	0x1
 1799 014c 62       		.byte	0x62
 1800 014d 5D000000 		.4byte	0x5d
 1801 0151 02       		.uleb128 0x2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 39


 1802 0152 91       		.byte	0x91
 1803 0153 6C       		.sleb128 -20
 1804 0154 00       		.byte	0
 1805 0155 05       		.uleb128 0x5
 1806 0156 2F010000 		.4byte	.LASF21
 1807 015a 01       		.byte	0x1
 1808 015b 7C       		.byte	0x7c
 1809 015c 5D000000 		.4byte	0x5d
 1810 0160 00000000 		.4byte	.LFB41
 1811 0164 1C010000 		.4byte	.LFE41-.LFB41
 1812 0168 01       		.uleb128 0x1
 1813 0169 9C       		.byte	0x9c
 1814 016a 7D010000 		.4byte	0x17d
 1815 016e 07       		.uleb128 0x7
 1816 016f 0A010000 		.4byte	.LASF18
 1817 0173 01       		.byte	0x1
 1818 0174 7C       		.byte	0x7c
 1819 0175 5D000000 		.4byte	0x5d
 1820 0179 02       		.uleb128 0x2
 1821 017a 91       		.byte	0x91
 1822 017b 74       		.sleb128 -12
 1823 017c 00       		.byte	0
 1824 017d 05       		.uleb128 0x5
 1825 017e BC010000 		.4byte	.LASF22
 1826 0182 01       		.byte	0x1
 1827 0183 A5       		.byte	0xa5
 1828 0184 5D000000 		.4byte	0x5d
 1829 0188 00000000 		.4byte	.LFB42
 1830 018c 1A010000 		.4byte	.LFE42-.LFB42
 1831 0190 01       		.uleb128 0x1
 1832 0191 9C       		.byte	0x9c
 1833 0192 A5010000 		.4byte	0x1a5
 1834 0196 07       		.uleb128 0x7
 1835 0197 0A010000 		.4byte	.LASF18
 1836 019b 01       		.byte	0x1
 1837 019c A5       		.byte	0xa5
 1838 019d 5D000000 		.4byte	0x5d
 1839 01a1 02       		.uleb128 0x2
 1840 01a2 91       		.byte	0x91
 1841 01a3 74       		.sleb128 -12
 1842 01a4 00       		.byte	0
 1843 01a5 05       		.uleb128 0x5
 1844 01a6 E9020000 		.4byte	.LASF23
 1845 01aa 01       		.byte	0x1
 1846 01ab D0       		.byte	0xd0
 1847 01ac 5D000000 		.4byte	0x5d
 1848 01b0 00000000 		.4byte	.LFB43
 1849 01b4 9C000000 		.4byte	.LFE43-.LFB43
 1850 01b8 01       		.uleb128 0x1
 1851 01b9 9C       		.byte	0x9c
 1852 01ba CD010000 		.4byte	0x1cd
 1853 01be 06       		.uleb128 0x6
 1854 01bf 6E657700 		.ascii	"new\000"
 1855 01c3 01       		.byte	0x1
 1856 01c4 D0       		.byte	0xd0
 1857 01c5 5D000000 		.4byte	0x5d
 1858 01c9 02       		.uleb128 0x2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 40


 1859 01ca 91       		.byte	0x91
 1860 01cb 6C       		.sleb128 -20
 1861 01cc 00       		.byte	0
 1862 01cd 09       		.uleb128 0x9
 1863 01ce 24020000 		.4byte	.LASF24
 1864 01d2 01       		.byte	0x1
 1865 01d3 EA       		.byte	0xea
 1866 01d4 00000000 		.4byte	.LFB44
 1867 01d8 90010000 		.4byte	.LFE44-.LFB44
 1868 01dc 01       		.uleb128 0x1
 1869 01dd 9C       		.byte	0x9c
 1870 01de 0A       		.uleb128 0xa
 1871 01df D9010000 		.4byte	.LASF25
 1872 01e3 01       		.byte	0x1
 1873 01e4 2601     		.2byte	0x126
 1874 01e6 00000000 		.4byte	.LFB45
 1875 01ea 64000000 		.4byte	.LFE45-.LFB45
 1876 01ee 01       		.uleb128 0x1
 1877 01ef 9C       		.byte	0x9c
 1878 01f0 0B       		.uleb128 0xb
 1879 01f1 F8020000 		.4byte	.LASF26
 1880 01f5 01       		.byte	0x1
 1881 01f6 3F01     		.2byte	0x13f
 1882 01f8 5D000000 		.4byte	0x5d
 1883 01fc 00000000 		.4byte	.LFB46
 1884 0200 3C000000 		.4byte	.LFE46-.LFB46
 1885 0204 01       		.uleb128 0x1
 1886 0205 9C       		.byte	0x9c
 1887 0206 0C       		.uleb128 0xc
 1888 0207 96000000 		.4byte	0x96
 1889 020b 16020000 		.4byte	0x216
 1890 020f 0D       		.uleb128 0xd
 1891 0210 A4000000 		.4byte	0xa4
 1892 0214 09       		.byte	0x9
 1893 0215 00       		.byte	0
 1894 0216 0E       		.uleb128 0xe
 1895 0217 7F010000 		.4byte	.LASF27
 1896 021b 01       		.byte	0x1
 1897 021c 0D       		.byte	0xd
 1898 021d 06020000 		.4byte	0x206
 1899 0221 05       		.uleb128 0x5
 1900 0222 03       		.byte	0x3
 1901 0223 00000000 		.4byte	x_mavg
 1902 0227 0E       		.uleb128 0xe
 1903 0228 C3000000 		.4byte	.LASF28
 1904 022c 01       		.byte	0x1
 1905 022d 0E       		.byte	0xe
 1906 022e 96000000 		.4byte	0x96
 1907 0232 05       		.uleb128 0x5
 1908 0233 03       		.byte	0x3
 1909 0234 00000000 		.4byte	y_mavg
 1910 0238 0E       		.uleb128 0xe
 1911 0239 E4000000 		.4byte	.LASF29
 1912 023d 01       		.byte	0x1
 1913 023e 0F       		.byte	0xf
 1914 023f 06020000 		.4byte	0x206
 1915 0243 05       		.uleb128 0x5
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 41


 1916 0244 03       		.byte	0x3
 1917 0245 00000000 		.4byte	b_mavg
 1918 0249 0E       		.uleb128 0xe
 1919 024a 5E010000 		.4byte	.LASF30
 1920 024e 01       		.byte	0x1
 1921 024f 14       		.byte	0x14
 1922 0250 06020000 		.4byte	0x206
 1923 0254 05       		.uleb128 0x5
 1924 0255 03       		.byte	0x3
 1925 0256 00000000 		.4byte	x2_mavg
 1926 025a 0E       		.uleb128 0xe
 1927 025b 10000000 		.4byte	.LASF31
 1928 025f 01       		.byte	0x1
 1929 0260 15       		.byte	0x15
 1930 0261 96000000 		.4byte	0x96
 1931 0265 05       		.uleb128 0x5
 1932 0266 03       		.byte	0x3
 1933 0267 00000000 		.4byte	y2_mavg
 1934 026b 0E       		.uleb128 0xe
 1935 026c 32020000 		.4byte	.LASF32
 1936 0270 01       		.byte	0x1
 1937 0271 16       		.byte	0x16
 1938 0272 06020000 		.4byte	0x206
 1939 0276 05       		.uleb128 0x5
 1940 0277 03       		.byte	0x3
 1941 0278 00000000 		.4byte	b2_mavg
 1942 027c 0C       		.uleb128 0xc
 1943 027d 96000000 		.4byte	0x96
 1944 0281 8C020000 		.4byte	0x28c
 1945 0285 0D       		.uleb128 0xd
 1946 0286 A4000000 		.4byte	0xa4
 1947 028a 02       		.byte	0x2
 1948 028b 00       		.byte	0
 1949 028c 0E       		.uleb128 0xe
 1950 028d 0A000000 		.4byte	.LASF33
 1951 0291 01       		.byte	0x1
 1952 0292 1A       		.byte	0x1a
 1953 0293 7C020000 		.4byte	0x27c
 1954 0297 05       		.uleb128 0x5
 1955 0298 03       		.byte	0x3
 1956 0299 00000000 		.4byte	x_low
 1957 029d 0E       		.uleb128 0xe
 1958 029e A4010000 		.4byte	.LASF34
 1959 02a2 01       		.byte	0x1
 1960 02a3 1B       		.byte	0x1b
 1961 02a4 7C020000 		.4byte	0x27c
 1962 02a8 05       		.uleb128 0x5
 1963 02a9 03       		.byte	0x3
 1964 02aa 00000000 		.4byte	y_low
 1965 02ae 0E       		.uleb128 0xe
 1966 02af DE000000 		.4byte	.LASF35
 1967 02b3 01       		.byte	0x1
 1968 02b4 1C       		.byte	0x1c
 1969 02b5 7C020000 		.4byte	0x27c
 1970 02b9 05       		.uleb128 0x5
 1971 02ba 03       		.byte	0x3
 1972 02bb 00000000 		.4byte	b_low
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 42


 1973 02bf 0E       		.uleb128 0xe
 1974 02c0 D8000000 		.4byte	.LASF36
 1975 02c4 01       		.byte	0x1
 1976 02c5 1D       		.byte	0x1d
 1977 02c6 7C020000 		.4byte	0x27c
 1978 02ca 05       		.uleb128 0x5
 1979 02cb 03       		.byte	0x3
 1980 02cc 00000000 		.4byte	a_low
 1981 02d0 0E       		.uleb128 0xe
 1982 02d1 18000000 		.4byte	.LASF37
 1983 02d5 01       		.byte	0x1
 1984 02d6 1F       		.byte	0x1f
 1985 02d7 83000000 		.4byte	0x83
 1986 02db 05       		.uleb128 0x5
 1987 02dc 03       		.byte	0x3
 1988 02dd 00000000 		.4byte	value_in
 1989 02e1 0C       		.uleb128 0xc
 1990 02e2 83000000 		.4byte	0x83
 1991 02e6 F1020000 		.4byte	0x2f1
 1992 02ea 0D       		.uleb128 0xd
 1993 02eb A4000000 		.4byte	0xa4
 1994 02ef 01       		.byte	0x1
 1995 02f0 00       		.byte	0
 1996 02f1 0E       		.uleb128 0xe
 1997 02f2 B9000000 		.4byte	.LASF38
 1998 02f6 01       		.byte	0x1
 1999 02f7 1F       		.byte	0x1f
 2000 02f8 E1020000 		.4byte	0x2e1
 2001 02fc 05       		.uleb128 0x5
 2002 02fd 03       		.byte	0x3
 2003 02fe 00000000 		.4byte	value_out
 2004 0302 0F       		.uleb128 0xf
 2005 0303 6900     		.ascii	"i\000"
 2006 0305 01       		.byte	0x1
 2007 0306 1F       		.byte	0x1f
 2008 0307 83000000 		.4byte	0x83
 2009 030b 05       		.uleb128 0x5
 2010 030c 03       		.byte	0x3
 2011 030d 00000000 		.4byte	i
 2012 0311 0F       		.uleb128 0xf
 2013 0312 6A00     		.ascii	"j\000"
 2014 0314 01       		.byte	0x1
 2015 0315 1F       		.byte	0x1f
 2016 0316 83000000 		.4byte	0x83
 2017 031a 05       		.uleb128 0x5
 2018 031b 03       		.byte	0x3
 2019 031c 00000000 		.4byte	j
 2020 0320 0F       		.uleb128 0xf
 2021 0321 6B00     		.ascii	"k\000"
 2022 0323 01       		.byte	0x1
 2023 0324 1F       		.byte	0x1f
 2024 0325 83000000 		.4byte	0x83
 2025 0329 05       		.uleb128 0x5
 2026 032a 03       		.byte	0x3
 2027 032b 00000000 		.4byte	k
 2028 032f 0E       		.uleb128 0xe
 2029 0330 3A020000 		.4byte	.LASF39
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 43


 2030 0334 01       		.byte	0x1
 2031 0335 1F       		.byte	0x1f
 2032 0336 83000000 		.4byte	0x83
 2033 033a 05       		.uleb128 0x5
 2034 033b 03       		.byte	0x3
 2035 033c 00000000 		.4byte	grader_groen
 2036 0340 0E       		.uleb128 0xe
 2037 0341 52010000 		.4byte	.LASF40
 2038 0345 01       		.byte	0x1
 2039 0346 1F       		.byte	0x1f
 2040 0347 83000000 		.4byte	0x83
 2041 034b 05       		.uleb128 0x5
 2042 034c 03       		.byte	0x3
 2043 034d 00000000 		.4byte	grader_roed
 2044 0351 0E       		.uleb128 0xe
 2045 0352 40000000 		.4byte	.LASF41
 2046 0356 01       		.byte	0x1
 2047 0357 1F       		.byte	0x1f
 2048 0358 83000000 		.4byte	0x83
 2049 035c 05       		.uleb128 0x5
 2050 035d 03       		.byte	0x3
 2051 035e 00000000 		.4byte	diff
 2052 0362 0F       		.uleb128 0xf
 2053 0363 6F6C6400 		.ascii	"old\000"
 2054 0367 01       		.byte	0x1
 2055 0368 1F       		.byte	0x1f
 2056 0369 83000000 		.4byte	0x83
 2057 036d 05       		.uleb128 0x5
 2058 036e 03       		.byte	0x3
 2059 036f 00000000 		.4byte	old
 2060 0373 0E       		.uleb128 0xe
 2061 0374 B4010000 		.4byte	.LASF42
 2062 0378 01       		.byte	0x1
 2063 0379 1F       		.byte	0x1f
 2064 037a 83000000 		.4byte	0x83
 2065 037e 05       		.uleb128 0x5
 2066 037f 03       		.byte	0x3
 2067 0380 00000000 		.4byte	counter
 2068 0384 0E       		.uleb128 0xe
 2069 0385 8C010000 		.4byte	.LASF43
 2070 0389 01       		.byte	0x1
 2071 038a 20       		.byte	0x20
 2072 038b 9D000000 		.4byte	0x9d
 2073 038f 05       		.uleb128 0x5
 2074 0390 03       		.byte	0x3
 2075 0391 00000000 		.4byte	FirstCall
 2076 0395 0E       		.uleb128 0xe
 2077 0396 21000000 		.4byte	.LASF44
 2078 039a 01       		.byte	0x1
 2079 039b 22       		.byte	0x22
 2080 039c 83000000 		.4byte	0x83
 2081 03a0 05       		.uleb128 0x5
 2082 03a1 03       		.byte	0x3
 2083 03a2 00000000 		.4byte	accroed
 2084 03a6 0E       		.uleb128 0xe
 2085 03a7 0F020000 		.4byte	.LASF45
 2086 03ab 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 44


 2087 03ac 23       		.byte	0x23
 2088 03ad 83000000 		.4byte	0x83
 2089 03b1 05       		.uleb128 0x5
 2090 03b2 03       		.byte	0x3
 2091 03b3 00000000 		.4byte	accgroen
 2092 03b7 0F       		.uleb128 0xf
 2093 03b8 454D4700 		.ascii	"EMG\000"
 2094 03bc 01       		.byte	0x1
 2095 03bd 24       		.byte	0x24
 2096 03be 83000000 		.4byte	0x83
 2097 03c2 05       		.uleb128 0x5
 2098 03c3 03       		.byte	0x3
 2099 03c4 00000000 		.4byte	EMG
 2100 03c8 0C       		.uleb128 0xc
 2101 03c9 83000000 		.4byte	0x83
 2102 03cd D8030000 		.4byte	0x3d8
 2103 03d1 0D       		.uleb128 0xd
 2104 03d2 A4000000 		.4byte	0xa4
 2105 03d6 02       		.byte	0x2
 2106 03d7 00       		.byte	0
 2107 03d8 0E       		.uleb128 0xe
 2108 03d9 FD020000 		.4byte	.LASF46
 2109 03dd 01       		.byte	0x1
 2110 03de 25       		.byte	0x25
 2111 03df C8030000 		.4byte	0x3c8
 2112 03e3 05       		.uleb128 0x5
 2113 03e4 03       		.byte	0x3
 2114 03e5 00000000 		.4byte	result
 2115 03e9 0E       		.uleb128 0xe
 2116 03ea 74010000 		.4byte	.LASF47
 2117 03ee 01       		.byte	0x1
 2118 03ef 26       		.byte	0x26
 2119 03f0 6B000000 		.4byte	0x6b
 2120 03f4 05       		.uleb128 0x5
 2121 03f5 03       		.byte	0x3
 2122 03f6 00000000 		.4byte	data_ready
 2123 03fa 0E       		.uleb128 0xe
 2124 03fb 66010000 		.4byte	.LASF48
 2125 03ff 01       		.byte	0x1
 2126 0400 28       		.byte	0x28
 2127 0401 83000000 		.4byte	0x83
 2128 0405 05       		.uleb128 0x5
 2129 0406 03       		.byte	0x3
 2130 0407 00000000 		.4byte	mav_data_roed
 2131 040b 0E       		.uleb128 0xe
 2132 040c 00020000 		.4byte	.LASF49
 2133 0410 01       		.byte	0x1
 2134 0411 29       		.byte	0x29
 2135 0412 83000000 		.4byte	0x83
 2136 0416 05       		.uleb128 0x5
 2137 0417 03       		.byte	0x3
 2138 0418 00000000 		.4byte	mav_data_groen
 2139 041c 0E       		.uleb128 0xe
 2140 041d 44010000 		.4byte	.LASF50
 2141 0421 01       		.byte	0x1
 2142 0422 2A       		.byte	0x2a
 2143 0423 83000000 		.4byte	0x83
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 45


 2144 0427 05       		.uleb128 0x5
 2145 0428 03       		.byte	0x3
 2146 0429 00000000 		.4byte	samlet_grader
 2147 042d 0E       		.uleb128 0xe
 2148 042e 4D020000 		.4byte	.LASF51
 2149 0432 01       		.byte	0x1
 2150 0433 2B       		.byte	0x2b
 2151 0434 83000000 		.4byte	0x83
 2152 0438 05       		.uleb128 0x5
 2153 0439 03       		.byte	0x3
 2154 043a 00000000 		.4byte	low_pass_data
 2155 043e 0E       		.uleb128 0xe
 2156 043f 00000000 		.4byte	.LASF52
 2157 0443 01       		.byte	0x1
 2158 0444 2C       		.byte	0x2c
 2159 0445 83000000 		.4byte	0x83
 2160 0449 05       		.uleb128 0x5
 2161 044a 03       		.byte	0x3
 2162 044b 00000000 		.4byte	diff_data
 2163 044f 00       		.byte	0
 2164              		.section	.debug_abbrev,"",%progbits
 2165              	.Ldebug_abbrev0:
 2166 0000 01       		.uleb128 0x1
 2167 0001 11       		.uleb128 0x11
 2168 0002 01       		.byte	0x1
 2169 0003 25       		.uleb128 0x25
 2170 0004 0E       		.uleb128 0xe
 2171 0005 13       		.uleb128 0x13
 2172 0006 0B       		.uleb128 0xb
 2173 0007 03       		.uleb128 0x3
 2174 0008 0E       		.uleb128 0xe
 2175 0009 1B       		.uleb128 0x1b
 2176 000a 0E       		.uleb128 0xe
 2177 000b 55       		.uleb128 0x55
 2178 000c 17       		.uleb128 0x17
 2179 000d 11       		.uleb128 0x11
 2180 000e 01       		.uleb128 0x1
 2181 000f 10       		.uleb128 0x10
 2182 0010 17       		.uleb128 0x17
 2183 0011 00       		.byte	0
 2184 0012 00       		.byte	0
 2185 0013 02       		.uleb128 0x2
 2186 0014 24       		.uleb128 0x24
 2187 0015 00       		.byte	0
 2188 0016 0B       		.uleb128 0xb
 2189 0017 0B       		.uleb128 0xb
 2190 0018 3E       		.uleb128 0x3e
 2191 0019 0B       		.uleb128 0xb
 2192 001a 03       		.uleb128 0x3
 2193 001b 0E       		.uleb128 0xe
 2194 001c 00       		.byte	0
 2195 001d 00       		.byte	0
 2196 001e 03       		.uleb128 0x3
 2197 001f 24       		.uleb128 0x24
 2198 0020 00       		.byte	0
 2199 0021 0B       		.uleb128 0xb
 2200 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 46


 2201 0023 3E       		.uleb128 0x3e
 2202 0024 0B       		.uleb128 0xb
 2203 0025 03       		.uleb128 0x3
 2204 0026 08       		.uleb128 0x8
 2205 0027 00       		.byte	0
 2206 0028 00       		.byte	0
 2207 0029 04       		.uleb128 0x4
 2208 002a 16       		.uleb128 0x16
 2209 002b 00       		.byte	0
 2210 002c 03       		.uleb128 0x3
 2211 002d 0E       		.uleb128 0xe
 2212 002e 3A       		.uleb128 0x3a
 2213 002f 0B       		.uleb128 0xb
 2214 0030 3B       		.uleb128 0x3b
 2215 0031 05       		.uleb128 0x5
 2216 0032 49       		.uleb128 0x49
 2217 0033 13       		.uleb128 0x13
 2218 0034 00       		.byte	0
 2219 0035 00       		.byte	0
 2220 0036 05       		.uleb128 0x5
 2221 0037 2E       		.uleb128 0x2e
 2222 0038 01       		.byte	0x1
 2223 0039 3F       		.uleb128 0x3f
 2224 003a 19       		.uleb128 0x19
 2225 003b 03       		.uleb128 0x3
 2226 003c 0E       		.uleb128 0xe
 2227 003d 3A       		.uleb128 0x3a
 2228 003e 0B       		.uleb128 0xb
 2229 003f 3B       		.uleb128 0x3b
 2230 0040 0B       		.uleb128 0xb
 2231 0041 27       		.uleb128 0x27
 2232 0042 19       		.uleb128 0x19
 2233 0043 49       		.uleb128 0x49
 2234 0044 13       		.uleb128 0x13
 2235 0045 11       		.uleb128 0x11
 2236 0046 01       		.uleb128 0x1
 2237 0047 12       		.uleb128 0x12
 2238 0048 06       		.uleb128 0x6
 2239 0049 40       		.uleb128 0x40
 2240 004a 18       		.uleb128 0x18
 2241 004b 9642     		.uleb128 0x2116
 2242 004d 19       		.uleb128 0x19
 2243 004e 01       		.uleb128 0x1
 2244 004f 13       		.uleb128 0x13
 2245 0050 00       		.byte	0
 2246 0051 00       		.byte	0
 2247 0052 06       		.uleb128 0x6
 2248 0053 05       		.uleb128 0x5
 2249 0054 00       		.byte	0
 2250 0055 03       		.uleb128 0x3
 2251 0056 08       		.uleb128 0x8
 2252 0057 3A       		.uleb128 0x3a
 2253 0058 0B       		.uleb128 0xb
 2254 0059 3B       		.uleb128 0x3b
 2255 005a 0B       		.uleb128 0xb
 2256 005b 49       		.uleb128 0x49
 2257 005c 13       		.uleb128 0x13
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 47


 2258 005d 02       		.uleb128 0x2
 2259 005e 18       		.uleb128 0x18
 2260 005f 00       		.byte	0
 2261 0060 00       		.byte	0
 2262 0061 07       		.uleb128 0x7
 2263 0062 05       		.uleb128 0x5
 2264 0063 00       		.byte	0
 2265 0064 03       		.uleb128 0x3
 2266 0065 0E       		.uleb128 0xe
 2267 0066 3A       		.uleb128 0x3a
 2268 0067 0B       		.uleb128 0xb
 2269 0068 3B       		.uleb128 0x3b
 2270 0069 0B       		.uleb128 0xb
 2271 006a 49       		.uleb128 0x49
 2272 006b 13       		.uleb128 0x13
 2273 006c 02       		.uleb128 0x2
 2274 006d 18       		.uleb128 0x18
 2275 006e 00       		.byte	0
 2276 006f 00       		.byte	0
 2277 0070 08       		.uleb128 0x8
 2278 0071 34       		.uleb128 0x34
 2279 0072 00       		.byte	0
 2280 0073 03       		.uleb128 0x3
 2281 0074 08       		.uleb128 0x8
 2282 0075 3A       		.uleb128 0x3a
 2283 0076 0B       		.uleb128 0xb
 2284 0077 3B       		.uleb128 0x3b
 2285 0078 0B       		.uleb128 0xb
 2286 0079 49       		.uleb128 0x49
 2287 007a 13       		.uleb128 0x13
 2288 007b 02       		.uleb128 0x2
 2289 007c 18       		.uleb128 0x18
 2290 007d 00       		.byte	0
 2291 007e 00       		.byte	0
 2292 007f 09       		.uleb128 0x9
 2293 0080 2E       		.uleb128 0x2e
 2294 0081 00       		.byte	0
 2295 0082 3F       		.uleb128 0x3f
 2296 0083 19       		.uleb128 0x19
 2297 0084 03       		.uleb128 0x3
 2298 0085 0E       		.uleb128 0xe
 2299 0086 3A       		.uleb128 0x3a
 2300 0087 0B       		.uleb128 0xb
 2301 0088 3B       		.uleb128 0x3b
 2302 0089 0B       		.uleb128 0xb
 2303 008a 27       		.uleb128 0x27
 2304 008b 19       		.uleb128 0x19
 2305 008c 11       		.uleb128 0x11
 2306 008d 01       		.uleb128 0x1
 2307 008e 12       		.uleb128 0x12
 2308 008f 06       		.uleb128 0x6
 2309 0090 40       		.uleb128 0x40
 2310 0091 18       		.uleb128 0x18
 2311 0092 9642     		.uleb128 0x2116
 2312 0094 19       		.uleb128 0x19
 2313 0095 00       		.byte	0
 2314 0096 00       		.byte	0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 48


 2315 0097 0A       		.uleb128 0xa
 2316 0098 2E       		.uleb128 0x2e
 2317 0099 00       		.byte	0
 2318 009a 3F       		.uleb128 0x3f
 2319 009b 19       		.uleb128 0x19
 2320 009c 03       		.uleb128 0x3
 2321 009d 0E       		.uleb128 0xe
 2322 009e 3A       		.uleb128 0x3a
 2323 009f 0B       		.uleb128 0xb
 2324 00a0 3B       		.uleb128 0x3b
 2325 00a1 05       		.uleb128 0x5
 2326 00a2 27       		.uleb128 0x27
 2327 00a3 19       		.uleb128 0x19
 2328 00a4 11       		.uleb128 0x11
 2329 00a5 01       		.uleb128 0x1
 2330 00a6 12       		.uleb128 0x12
 2331 00a7 06       		.uleb128 0x6
 2332 00a8 40       		.uleb128 0x40
 2333 00a9 18       		.uleb128 0x18
 2334 00aa 9642     		.uleb128 0x2116
 2335 00ac 19       		.uleb128 0x19
 2336 00ad 00       		.byte	0
 2337 00ae 00       		.byte	0
 2338 00af 0B       		.uleb128 0xb
 2339 00b0 2E       		.uleb128 0x2e
 2340 00b1 00       		.byte	0
 2341 00b2 3F       		.uleb128 0x3f
 2342 00b3 19       		.uleb128 0x19
 2343 00b4 03       		.uleb128 0x3
 2344 00b5 0E       		.uleb128 0xe
 2345 00b6 3A       		.uleb128 0x3a
 2346 00b7 0B       		.uleb128 0xb
 2347 00b8 3B       		.uleb128 0x3b
 2348 00b9 05       		.uleb128 0x5
 2349 00ba 49       		.uleb128 0x49
 2350 00bb 13       		.uleb128 0x13
 2351 00bc 11       		.uleb128 0x11
 2352 00bd 01       		.uleb128 0x1
 2353 00be 12       		.uleb128 0x12
 2354 00bf 06       		.uleb128 0x6
 2355 00c0 40       		.uleb128 0x40
 2356 00c1 18       		.uleb128 0x18
 2357 00c2 9642     		.uleb128 0x2116
 2358 00c4 19       		.uleb128 0x19
 2359 00c5 00       		.byte	0
 2360 00c6 00       		.byte	0
 2361 00c7 0C       		.uleb128 0xc
 2362 00c8 01       		.uleb128 0x1
 2363 00c9 01       		.byte	0x1
 2364 00ca 49       		.uleb128 0x49
 2365 00cb 13       		.uleb128 0x13
 2366 00cc 01       		.uleb128 0x1
 2367 00cd 13       		.uleb128 0x13
 2368 00ce 00       		.byte	0
 2369 00cf 00       		.byte	0
 2370 00d0 0D       		.uleb128 0xd
 2371 00d1 21       		.uleb128 0x21
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 49


 2372 00d2 00       		.byte	0
 2373 00d3 49       		.uleb128 0x49
 2374 00d4 13       		.uleb128 0x13
 2375 00d5 2F       		.uleb128 0x2f
 2376 00d6 0B       		.uleb128 0xb
 2377 00d7 00       		.byte	0
 2378 00d8 00       		.byte	0
 2379 00d9 0E       		.uleb128 0xe
 2380 00da 34       		.uleb128 0x34
 2381 00db 00       		.byte	0
 2382 00dc 03       		.uleb128 0x3
 2383 00dd 0E       		.uleb128 0xe
 2384 00de 3A       		.uleb128 0x3a
 2385 00df 0B       		.uleb128 0xb
 2386 00e0 3B       		.uleb128 0x3b
 2387 00e1 0B       		.uleb128 0xb
 2388 00e2 49       		.uleb128 0x49
 2389 00e3 13       		.uleb128 0x13
 2390 00e4 3F       		.uleb128 0x3f
 2391 00e5 19       		.uleb128 0x19
 2392 00e6 02       		.uleb128 0x2
 2393 00e7 18       		.uleb128 0x18
 2394 00e8 00       		.byte	0
 2395 00e9 00       		.byte	0
 2396 00ea 0F       		.uleb128 0xf
 2397 00eb 34       		.uleb128 0x34
 2398 00ec 00       		.byte	0
 2399 00ed 03       		.uleb128 0x3
 2400 00ee 08       		.uleb128 0x8
 2401 00ef 3A       		.uleb128 0x3a
 2402 00f0 0B       		.uleb128 0xb
 2403 00f1 3B       		.uleb128 0x3b
 2404 00f2 0B       		.uleb128 0xb
 2405 00f3 49       		.uleb128 0x49
 2406 00f4 13       		.uleb128 0x13
 2407 00f5 3F       		.uleb128 0x3f
 2408 00f6 19       		.uleb128 0x19
 2409 00f7 02       		.uleb128 0x2
 2410 00f8 18       		.uleb128 0x18
 2411 00f9 00       		.byte	0
 2412 00fa 00       		.byte	0
 2413 00fb 00       		.byte	0
 2414              		.section	.debug_aranges,"",%progbits
 2415 0000 64000000 		.4byte	0x64
 2416 0004 0200     		.2byte	0x2
 2417 0006 00000000 		.4byte	.Ldebug_info0
 2418 000a 04       		.byte	0x4
 2419 000b 00       		.byte	0
 2420 000c 0000     		.2byte	0
 2421 000e 0000     		.2byte	0
 2422 0010 00000000 		.4byte	.LFB37
 2423 0014 5C000000 		.4byte	.LFE37-.LFB37
 2424 0018 00000000 		.4byte	.LFB38
 2425 001c 04010000 		.4byte	.LFE38-.LFB38
 2426 0020 00000000 		.4byte	.LFB39
 2427 0024 0C010000 		.4byte	.LFE39-.LFB39
 2428 0028 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 50


 2429 002c 24010000 		.4byte	.LFE40-.LFB40
 2430 0030 00000000 		.4byte	.LFB41
 2431 0034 1C010000 		.4byte	.LFE41-.LFB41
 2432 0038 00000000 		.4byte	.LFB42
 2433 003c 1A010000 		.4byte	.LFE42-.LFB42
 2434 0040 00000000 		.4byte	.LFB43
 2435 0044 9C000000 		.4byte	.LFE43-.LFB43
 2436 0048 00000000 		.4byte	.LFB44
 2437 004c 90010000 		.4byte	.LFE44-.LFB44
 2438 0050 00000000 		.4byte	.LFB45
 2439 0054 64000000 		.4byte	.LFE45-.LFB45
 2440 0058 00000000 		.4byte	.LFB46
 2441 005c 3C000000 		.4byte	.LFE46-.LFB46
 2442 0060 00000000 		.4byte	0
 2443 0064 00000000 		.4byte	0
 2444              		.section	.debug_ranges,"",%progbits
 2445              	.Ldebug_ranges0:
 2446 0000 00000000 		.4byte	.LFB37
 2447 0004 5C000000 		.4byte	.LFE37
 2448 0008 00000000 		.4byte	.LFB38
 2449 000c 04010000 		.4byte	.LFE38
 2450 0010 00000000 		.4byte	.LFB39
 2451 0014 0C010000 		.4byte	.LFE39
 2452 0018 00000000 		.4byte	.LFB40
 2453 001c 24010000 		.4byte	.LFE40
 2454 0020 00000000 		.4byte	.LFB41
 2455 0024 1C010000 		.4byte	.LFE41
 2456 0028 00000000 		.4byte	.LFB42
 2457 002c 1A010000 		.4byte	.LFE42
 2458 0030 00000000 		.4byte	.LFB43
 2459 0034 9C000000 		.4byte	.LFE43
 2460 0038 00000000 		.4byte	.LFB44
 2461 003c 90010000 		.4byte	.LFE44
 2462 0040 00000000 		.4byte	.LFB45
 2463 0044 64000000 		.4byte	.LFE45
 2464 0048 00000000 		.4byte	.LFB46
 2465 004c 3C000000 		.4byte	.LFE46
 2466 0050 00000000 		.4byte	0
 2467 0054 00000000 		.4byte	0
 2468              		.section	.debug_line,"",%progbits
 2469              	.Ldebug_line0:
 2470 0000 3E020000 		.section	.debug_str,"MS",%progbits,1
 2470      02004300 
 2470      00000201 
 2470      FB0E0D00 
 2470      01010101 
 2471              	.LASF52:
 2472 0000 64696666 		.ascii	"diff_data\000"
 2472      5F646174 
 2472      6100
 2473              	.LASF33:
 2474 000a 785F6C6F 		.ascii	"x_low\000"
 2474      7700
 2475              	.LASF31:
 2476 0010 79325F6D 		.ascii	"y2_mavg\000"
 2476      61766700 
 2477              	.LASF37:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 51


 2478 0018 76616C75 		.ascii	"value_in\000"
 2478      655F696E 
 2478      00
 2479              	.LASF44:
 2480 0021 61636372 		.ascii	"accroed\000"
 2480      6F656400 
 2481              	.LASF7:
 2482 0029 6C6F6E67 		.ascii	"long long unsigned int\000"
 2482      206C6F6E 
 2482      6720756E 
 2482      7369676E 
 2482      65642069 
 2483              	.LASF41:
 2484 0040 64696666 		.ascii	"diff\000"
 2484      00
 2485              	.LASF55:
 2486 0045 433A5C55 		.ascii	"C:\\Users\\Linette Helena\\Desktop\\ny\\ADC_filtre_"
 2486      73657273 
 2486      5C4C696E 
 2486      65747465 
 2486      2048656C 
 2487 0073 73616D6C 		.ascii	"samlet_grader.cydsn\000"
 2487      65745F67 
 2487      72616465 
 2487      722E6379 
 2487      64736E00 
 2488              	.LASF6:
 2489 0087 6C6F6E67 		.ascii	"long long int\000"
 2489      206C6F6E 
 2489      6720696E 
 2489      7400
 2490              	.LASF0:
 2491 0095 7369676E 		.ascii	"signed char\000"
 2491      65642063 
 2491      68617200 
 2492              	.LASF54:
 2493 00a1 2E5C6D61 		.ascii	".\\main.c\000"
 2493      696E2E63 
 2493      00
 2494              	.LASF4:
 2495 00aa 6C6F6E67 		.ascii	"long int\000"
 2495      20696E74 
 2495      00
 2496              	.LASF9:
 2497 00b3 75696E74 		.ascii	"uint8\000"
 2497      3800
 2498              	.LASF38:
 2499 00b9 76616C75 		.ascii	"value_out\000"
 2499      655F6F75 
 2499      7400
 2500              	.LASF28:
 2501 00c3 795F6D61 		.ascii	"y_mavg\000"
 2501      766700
 2502              	.LASF13:
 2503 00ca 646F7562 		.ascii	"double\000"
 2503      6C6500
 2504              	.LASF10:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 52


 2505 00d1 75696E74 		.ascii	"uint32\000"
 2505      333200
 2506              	.LASF36:
 2507 00d8 615F6C6F 		.ascii	"a_low\000"
 2507      7700
 2508              	.LASF35:
 2509 00de 625F6C6F 		.ascii	"b_low\000"
 2509      7700
 2510              	.LASF29:
 2511 00e4 625F6D61 		.ascii	"b_mavg\000"
 2511      766700
 2512              	.LASF8:
 2513 00eb 756E7369 		.ascii	"unsigned int\000"
 2513      676E6564 
 2513      20696E74 
 2513      00
 2514              	.LASF5:
 2515 00f8 6C6F6E67 		.ascii	"long unsigned int\000"
 2515      20756E73 
 2515      69676E65 
 2515      6420696E 
 2515      7400
 2516              	.LASF18:
 2517 010a 64617461 		.ascii	"data\000"
 2517      00
 2518              	.LASF19:
 2519 010f 6D617667 		.ascii	"mavg_filter2\000"
 2519      5F66696C 
 2519      74657232 
 2519      00
 2520              	.LASF3:
 2521 011c 73686F72 		.ascii	"short unsigned int\000"
 2521      7420756E 
 2521      7369676E 
 2521      65642069 
 2521      6E7400
 2522              	.LASF21:
 2523 012f 726F6564 		.ascii	"roed_grader\000"
 2523      5F677261 
 2523      64657200 
 2524              	.LASF15:
 2525 013b 73697A65 		.ascii	"sizetype\000"
 2525      74797065 
 2525      00
 2526              	.LASF50:
 2527 0144 73616D6C 		.ascii	"samlet_grader\000"
 2527      65745F67 
 2527      72616465 
 2527      7200
 2528              	.LASF40:
 2529 0152 67726164 		.ascii	"grader_roed\000"
 2529      65725F72 
 2529      6F656400 
 2530              	.LASF30:
 2531 015e 78325F6D 		.ascii	"x2_mavg\000"
 2531      61766700 
 2532              	.LASF48:
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 53


 2533 0166 6D61765F 		.ascii	"mav_data_roed\000"
 2533      64617461 
 2533      5F726F65 
 2533      6400
 2534              	.LASF47:
 2535 0174 64617461 		.ascii	"data_ready\000"
 2535      5F726561 
 2535      647900
 2536              	.LASF27:
 2537 017f 785F6D61 		.ascii	"x_mavg\000"
 2537      766700
 2538              	.LASF12:
 2539 0186 666C6F61 		.ascii	"float\000"
 2539      7400
 2540              	.LASF43:
 2541 018c 46697273 		.ascii	"FirstCall\000"
 2541      7443616C 
 2541      6C00
 2542              	.LASF1:
 2543 0196 756E7369 		.ascii	"unsigned char\000"
 2543      676E6564 
 2543      20636861 
 2543      7200
 2544              	.LASF34:
 2545 01a4 795F6C6F 		.ascii	"y_low\000"
 2545      7700
 2546              	.LASF2:
 2547 01aa 73686F72 		.ascii	"short int\000"
 2547      7420696E 
 2547      7400
 2548              	.LASF42:
 2549 01b4 636F756E 		.ascii	"counter\000"
 2549      74657200 
 2550              	.LASF22:
 2551 01bc 67726F65 		.ascii	"groen_grader\000"
 2551      6E5F6772 
 2551      61646572 
 2551      00
 2552              	.LASF20:
 2553 01c9 6C6F775F 		.ascii	"low_pass_filter\000"
 2553      70617373 
 2553      5F66696C 
 2553      74657200 
 2554              	.LASF25:
 2555 01d9 50696E5F 		.ascii	"Pin_SW2_handler\000"
 2555      5357325F 
 2555      68616E64 
 2555      6C657200 
 2556              	.LASF14:
 2557 01e9 63686172 		.ascii	"char\000"
 2557      00
 2558              	.LASF16:
 2559 01ee 666C6F6F 		.ascii	"floor_and_convert\000"
 2559      725F616E 
 2559      645F636F 
 2559      6E766572 
 2559      7400
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 54


 2560              	.LASF49:
 2561 0200 6D61765F 		.ascii	"mav_data_groen\000"
 2561      64617461 
 2561      5F67726F 
 2561      656E00
 2562              	.LASF45:
 2563 020f 61636367 		.ascii	"accgroen\000"
 2563      726F656E 
 2563      00
 2564              	.LASF17:
 2565 0218 6D617667 		.ascii	"mavg_filter\000"
 2565      5F66696C 
 2565      74657200 
 2566              	.LASF24:
 2567 0224 4144435F 		.ascii	"ADC_interrupt\000"
 2567      696E7465 
 2567      72727570 
 2567      7400
 2568              	.LASF32:
 2569 0232 62325F6D 		.ascii	"b2_mavg\000"
 2569      61766700 
 2570              	.LASF39:
 2571 023a 67726164 		.ascii	"grader_groen\000"
 2571      65725F67 
 2571      726F656E 
 2571      00
 2572              	.LASF11:
 2573 0247 696E7431 		.ascii	"int16\000"
 2573      3600
 2574              	.LASF51:
 2575 024d 6C6F775F 		.ascii	"low_pass_data\000"
 2575      70617373 
 2575      5F646174 
 2575      6100
 2576              	.LASF53:
 2577 025b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2577      4320342E 
 2577      392E3320 
 2577      32303135 
 2577      30333033 
 2578 028e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2578      20726576 
 2578      6973696F 
 2578      6E203232 
 2578      31323230 
 2579 02c1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2579      66756E63 
 2579      74696F6E 
 2579      2D736563 
 2579      74696F6E 
 2580              	.LASF23:
 2581 02e9 64696666 		.ascii	"differentiator\000"
 2581      6572656E 
 2581      74696174 
 2581      6F7200
 2582              	.LASF26:
 2583 02f8 6D61696E 		.ascii	"main\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccmZdqlC.s 			page 55


 2583      00
 2584              	.LASF46:
 2585 02fd 72657375 		.ascii	"result\000"
 2585      6C7400
 2586              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
