ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	x_mavg
  18              		.bss
  19              		.align	3
  20              		.type	x_mavg, %object
  21              		.size	x_mavg, 80
  22              	x_mavg:
  23 0000 00000000 		.space	80
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	y_mavg
  25              		.align	3
  26              		.type	y_mavg, %object
  27              		.size	y_mavg, 8
  28              	y_mavg:
  29 0050 00000000 		.space	8
  29      00000000 
  30              		.global	b_mavg
  31              		.data
  32              		.align	3
  33              		.type	b_mavg, %object
  34              		.size	b_mavg, 80
  35              	b_mavg:
  36 0000 9A999999 		.word	-1717986918
  37 0004 9999B93F 		.word	1069128089
  38 0008 9A999999 		.word	-1717986918
  39 000c 9999B93F 		.word	1069128089
  40 0010 9A999999 		.word	-1717986918
  41 0014 9999B93F 		.word	1069128089
  42 0018 9A999999 		.word	-1717986918
  43 001c 9999B93F 		.word	1069128089
  44 0020 9A999999 		.word	-1717986918
  45 0024 9999B93F 		.word	1069128089
  46 0028 9A999999 		.word	-1717986918
  47 002c 9999B93F 		.word	1069128089
  48 0030 9A999999 		.word	-1717986918
  49 0034 9999B93F 		.word	1069128089
  50 0038 9A999999 		.word	-1717986918
  51 003c 9999B93F 		.word	1069128089
  52 0040 9A999999 		.word	-1717986918
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 2


  53 0044 9999B93F 		.word	1069128089
  54 0048 9A999999 		.word	-1717986918
  55 004c 9999B93F 		.word	1069128089
  56              		.global	x2_mavg
  57              		.bss
  58              		.align	3
  59              		.type	x2_mavg, %object
  60              		.size	x2_mavg, 80
  61              	x2_mavg:
  62 0058 00000000 		.space	80
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.global	y2_mavg
  64              		.align	3
  65              		.type	y2_mavg, %object
  66              		.size	y2_mavg, 8
  67              	y2_mavg:
  68 00a8 00000000 		.space	8
  68      00000000 
  69              		.global	b2_mavg
  70              		.data
  71              		.align	3
  72              		.type	b2_mavg, %object
  73              		.size	b2_mavg, 80
  74              	b2_mavg:
  75 0050 9A999999 		.word	-1717986918
  76 0054 9999B93F 		.word	1069128089
  77 0058 9A999999 		.word	-1717986918
  78 005c 9999B93F 		.word	1069128089
  79 0060 9A999999 		.word	-1717986918
  80 0064 9999B93F 		.word	1069128089
  81 0068 9A999999 		.word	-1717986918
  82 006c 9999B93F 		.word	1069128089
  83 0070 9A999999 		.word	-1717986918
  84 0074 9999B93F 		.word	1069128089
  85 0078 9A999999 		.word	-1717986918
  86 007c 9999B93F 		.word	1069128089
  87 0080 9A999999 		.word	-1717986918
  88 0084 9999B93F 		.word	1069128089
  89 0088 9A999999 		.word	-1717986918
  90 008c 9999B93F 		.word	1069128089
  91 0090 9A999999 		.word	-1717986918
  92 0094 9999B93F 		.word	1069128089
  93 0098 9A999999 		.word	-1717986918
  94 009c 9999B93F 		.word	1069128089
  95              		.global	x_low
  96              		.bss
  97              		.align	3
  98              		.type	x_low, %object
  99              		.size	x_low, 24
 100              	x_low:
 101 00b0 00000000 		.space	24
 101      00000000 
 101      00000000 
 101      00000000 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 3


 101      00000000 
 102              		.global	y_low
 103              		.align	3
 104              		.type	y_low, %object
 105              		.size	y_low, 24
 106              	y_low:
 107 00c8 00000000 		.space	24
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	b_low
 109              		.data
 110              		.align	3
 111              		.type	b_low, %object
 112              		.size	b_low, 24
 113              	b_low:
 114 00a0 FA7E6ABC 		.word	-1133871366
 115 00a4 7493583F 		.word	1062769524
 116 00a8 E09C11A5 		.word	-1525572384
 117 00ac BDC1673F 		.word	1063764413
 118 00b0 FA7E6ABC 		.word	-1133871366
 119 00b4 7493583F 		.word	1062769524
 120              		.global	a_low
 121              		.align	3
 122              		.type	a_low, %object
 123              		.size	a_low, 24
 124              	a_low:
 125 00b8 00000000 		.word	0
 126 00bc 0000F03F 		.word	1072693248
 127 00c0 D34D6210 		.word	274877907
 128 00c4 5839FEBF 		.word	-1073858216
 129 00c8 C2172653 		.word	1395005378
 130 00cc 05A3EC3F 		.word	1072472837
 131              		.global	current_byte
 132              		.bss
 133              		.type	current_byte, %object
 134              		.size	current_byte, 1
 135              	current_byte:
 136 00e0 00       		.space	1
 137              		.comm	value_in,2,2
 138              		.global	value_out
 139 00e1 000000   		.align	2
 140              		.type	value_out, %object
 141              		.size	value_out, 4
 142              	value_out:
 143 00e4 00000000 		.space	4
 144              		.global	i
 145              		.align	1
 146              		.type	i, %object
 147              		.size	i, 2
 148              	i:
 149 00e8 0000     		.space	2
 150              		.global	j
 151              		.align	1
 152              		.type	j, %object
 153              		.size	j, 2
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 4


 154              	j:
 155 00ea 0000     		.space	2
 156              		.global	k
 157              		.align	1
 158              		.type	k, %object
 159              		.size	k, 2
 160              	k:
 161 00ec 0000     		.space	2
 162              		.comm	grader_groen,2,2
 163              		.comm	grader_roed,2,2
 164              		.comm	diff,2,2
 165              		.comm	old,2,2
 166              		.global	counter
 167              		.align	1
 168              		.type	counter, %object
 169              		.size	counter, 2
 170              	counter:
 171 00ee 0000     		.space	2
 172              		.global	FirstCall
 173              		.data
 174              		.type	FirstCall, %object
 175              		.size	FirstCall, 1
 176              	FirstCall:
 177 00d0 01       		.byte	1
 178              		.global	accroed
 179 00d1 00000000 		.bss
 179      000000
 180              		.align	1
 181              		.type	accroed, %object
 182              		.size	accroed, 2
 183              	accroed:
 184 00f0 0000     		.space	2
 185              		.global	accgroen
 186              		.align	1
 187              		.type	accgroen, %object
 188              		.size	accgroen, 2
 189              	accgroen:
 190 00f2 0000     		.space	2
 191              		.global	EMG
 192              		.align	1
 193              		.type	EMG, %object
 194              		.size	EMG, 2
 195              	EMG:
 196 00f4 0000     		.space	2
 197              		.global	result
 198 00f6 0000     		.align	2
 199              		.type	result, %object
 200              		.size	result, 6
 201              	result:
 202 00f8 00000000 		.space	6
 202      0000
 203              		.global	data_ready
 204              		.type	data_ready, %object
 205              		.size	data_ready, 1
 206              	data_ready:
 207 00fe 00       		.space	1
 208              		.comm	mav_data_roed,2,2
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 5


 209              		.comm	mav_data_groen,2,2
 210              		.comm	samlet_grader,2,2
 211              		.comm	low_pass_data,2,2
 212              		.comm	diff_data,2,2
 213              		.global	__aeabi_dcmpgt
 214              		.global	__aeabi_dadd
 215              		.global	__aeabi_d2iz
 216              		.global	__aeabi_dsub
 217 00ff 00       		.section	.text.floor_and_convert,"ax",%progbits
 218              		.align	2
 219              		.global	floor_and_convert
 220              		.code	16
 221              		.thumb_func
 222              		.type	floor_and_convert, %function
 223              	floor_and_convert:
 224              	.LFB37:
 225              		.file 1 ".\\main.c"
   1:.\main.c      **** #include <project.h>
   2:.\main.c      **** #include <my_defines.h>
   3:.\main.c      **** #include <stdlib.h>
   4:.\main.c      **** 
   5:.\main.c      **** #define LOWBYTE 0                                   // Used to toggle between HIGH byte and LOW byt
   6:.\main.c      **** #define HIGHBYTE 1                                  // Used to toggle between HIGH byte and LOW byt
   7:.\main.c      **** #define FALSE 0
   8:.\main.c      **** #define TRUE 1
   9:.\main.c      **** 
  10:.\main.c      **** /* Moving average filter */ 
  11:.\main.c      **** #define FILTER_LENGTH_mavg 9
  12:.\main.c      **** //int y[2] = {0,0};
  13:.\main.c      **** double x_mavg[FILTER_LENGTH_mavg+1] = {0,0,0,0,0,0,0,0,0,0};
  14:.\main.c      **** double y_mavg = 0;
  15:.\main.c      **** double b_mavg[FILTER_LENGTH_mavg+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  16:.\main.c      **** 
  17:.\main.c      **** /* Moving average filter 2 */
  18:.\main.c      **** #define FILTER_LENGTH_mavg2 9
  19:.\main.c      **** //int y2[2] = {0,0};
  20:.\main.c      **** double x2_mavg[FILTER_LENGTH_mavg2+1] = {0,0,0,0,0,0,0,0,0,0};
  21:.\main.c      **** double y2_mavg = 0;
  22:.\main.c      **** double b2_mavg[FILTER_LENGTH_mavg2+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  23:.\main.c      **** 
  24:.\main.c      **** 
  25:.\main.c      **** #define FILTER_LENGTH_low 2
  26:.\main.c      **** double x_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  27:.\main.c      **** double y_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  28:.\main.c      **** double b_low[FILTER_LENGTH_low+1] = {0.0015, 0.0029, 0.0015};
  29:.\main.c      **** double a_low[FILTER_LENGTH_low+1] = {1.0000, -1.8890, 0.8949};
  30:.\main.c      **** 
  31:.\main.c      **** char current_byte = LOWBYTE;                        // Receive LOW byte first as default
  32:.\main.c      **** int16 value_in,value_out[2]={0,0},i=0,j=0,k=0, grader_groen, grader_roed, diff, old, counter=0; 
  33:.\main.c      **** char FirstCall = TRUE;
  34:.\main.c      **** 
  35:.\main.c      **** int16 accroed = {0};
  36:.\main.c      **** int16 accgroen = {0};
  37:.\main.c      **** int16 EMG = {0};
  38:.\main.c      **** int16 result[num_of_channels] = {0};
  39:.\main.c      **** uint8 data_ready = FALSE;
  40:.\main.c      **** 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 6


  41:.\main.c      **** int16 mav_data_roed;
  42:.\main.c      **** int16 mav_data_groen;
  43:.\main.c      **** int16 samlet_grader;
  44:.\main.c      **** int16 low_pass_data;
  45:.\main.c      **** int16 diff_data;
  46:.\main.c      **** 
  47:.\main.c      **** #define StartMeasuring Control_Reg_1_Write(1);
  48:.\main.c      **** #define StopMeasuring Control_Reg_1_Write(0);
  49:.\main.c      **** 
  50:.\main.c      **** /***********************************Konvertering til heltal***********************************/
  51:.\main.c      **** signed int floor_and_convert(double y)
  52:.\main.c      **** {
 226              		.loc 1 52 0
 227              		.cfi_startproc
 228 0000 90B5     		push	{r4, r7, lr}
 229              		.cfi_def_cfa_offset 12
 230              		.cfi_offset 4, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 83B0     		sub	sp, sp, #12
 234              		.cfi_def_cfa_offset 24
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 3860     		str	r0, [r7]
 238 0008 7960     		str	r1, [r7, #4]
  53:.\main.c      ****    if (y > 0)
 239              		.loc 1 53 0
 240 000a 3868     		ldr	r0, [r7]
 241 000c 7968     		ldr	r1, [r7, #4]
 242 000e 0022     		mov	r2, #0
 243 0010 0023     		mov	r3, #0
 244 0012 FFF7FEFF 		bl	__aeabi_dcmpgt
 245 0016 031E     		sub	r3, r0, #0
 246 0018 0DD0     		beq	.L6
  54:.\main.c      ****       return (signed int) (y+0.5);
 247              		.loc 1 54 0
 248 001a 3868     		ldr	r0, [r7]
 249 001c 7968     		ldr	r1, [r7, #4]
 250 001e 0022     		mov	r2, #0
 251 0020 0D4B     		ldr	r3, .L7
 252 0022 FFF7FEFF 		bl	__aeabi_dadd
 253 0026 031C     		mov	r3, r0
 254 0028 0C1C     		mov	r4, r1
 255 002a 181C     		mov	r0, r3
 256 002c 211C     		mov	r1, r4
 257 002e FFF7FEFF 		bl	__aeabi_d2iz
 258 0032 031C     		mov	r3, r0
 259 0034 0CE0     		b	.L4
 260              	.L6:
  55:.\main.c      ****    else
  56:.\main.c      ****       return (signed int) (y-0.5);
 261              		.loc 1 56 0
 262 0036 3868     		ldr	r0, [r7]
 263 0038 7968     		ldr	r1, [r7, #4]
 264 003a 0022     		mov	r2, #0
 265 003c 064B     		ldr	r3, .L7
 266 003e FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 7


 267 0042 031C     		mov	r3, r0
 268 0044 0C1C     		mov	r4, r1
 269 0046 181C     		mov	r0, r3
 270 0048 211C     		mov	r1, r4
 271 004a FFF7FEFF 		bl	__aeabi_d2iz
 272 004e 031C     		mov	r3, r0
 273              	.L4:
  57:.\main.c      **** }
 274              		.loc 1 57 0
 275 0050 181C     		mov	r0, r3
 276 0052 BD46     		mov	sp, r7
 277 0054 03B0     		add	sp, sp, #12
 278              		@ sp needed
 279 0056 90BD     		pop	{r4, r7, pc}
 280              	.L8:
 281              		.align	2
 282              	.L7:
 283 0058 0000E03F 		.word	1071644672
 284              		.cfi_endproc
 285              	.LFE37:
 286              		.size	floor_and_convert, .-floor_and_convert
 287              		.global	__aeabi_i2d
 288              		.global	__aeabi_dmul
 289              		.section	.text.mavg_filter,"ax",%progbits
 290              		.align	2
 291              		.global	mavg_filter
 292              		.code	16
 293              		.thumb_func
 294              		.type	mavg_filter, %function
 295              	mavg_filter:
 296              	.LFB38:
  58:.\main.c      **** 
  59:.\main.c      **** /***********************************Moving average filter***********************************/
  60:.\main.c      **** signed int mavg_filter(signed int data)
  61:.\main.c      **** {
 297              		.loc 1 61 0
 298              		.cfi_startproc
 299 0000 90B5     		push	{r4, r7, lr}
 300              		.cfi_def_cfa_offset 12
 301              		.cfi_offset 4, -12
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 83B0     		sub	sp, sp, #12
 305              		.cfi_def_cfa_offset 24
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
  62:.\main.c      ****    x_mavg[0] =  (double) data;      // Read received sample and perform type casts
 309              		.loc 1 62 0
 310 0008 7868     		ldr	r0, [r7, #4]
 311 000a FFF7FEFF 		bl	__aeabi_i2d
 312 000e 031C     		mov	r3, r0
 313 0010 0C1C     		mov	r4, r1
 314 0012 384A     		ldr	r2, .L15
 315 0014 1360     		str	r3, [r2]
 316 0016 5460     		str	r4, [r2, #4]
  63:.\main.c      ****    
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 8


  64:.\main.c      ****    y_mavg = 0;
 317              		.loc 1 64 0
 318 0018 374A     		ldr	r2, .L15+4
 319 001a 0023     		mov	r3, #0
 320 001c 0024     		mov	r4, #0
 321 001e 1360     		str	r3, [r2]
 322 0020 5460     		str	r4, [r2, #4]
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 323              		.loc 1 65 0
 324 0022 364B     		ldr	r3, .L15+8
 325 0024 0022     		mov	r2, #0
 326 0026 1A80     		strh	r2, [r3]
 327 0028 30E0     		b	.L10
 328              	.L11:
  66:.\main.c      ****    {
  67:.\main.c      ****       y_mavg += b_mavg[i]*x_mavg[i];
 329              		.loc 1 67 0 discriminator 3
 330 002a 344B     		ldr	r3, .L15+8
 331 002c 1B88     		ldrh	r3, [r3]
 332 002e 1BB2     		sxth	r3, r3
 333 0030 334A     		ldr	r2, .L15+12
 334 0032 DB00     		lsl	r3, r3, #3
 335 0034 D318     		add	r3, r2, r3
 336 0036 1968     		ldr	r1, [r3]
 337 0038 5A68     		ldr	r2, [r3, #4]
 338 003a 304B     		ldr	r3, .L15+8
 339 003c 1B88     		ldrh	r3, [r3]
 340 003e 1BB2     		sxth	r3, r3
 341 0040 2C48     		ldr	r0, .L15
 342 0042 DB00     		lsl	r3, r3, #3
 343 0044 C318     		add	r3, r0, r3
 344 0046 5C68     		ldr	r4, [r3, #4]
 345 0048 1B68     		ldr	r3, [r3]
 346 004a 081C     		mov	r0, r1
 347 004c 111C     		mov	r1, r2
 348 004e 1A1C     		mov	r2, r3
 349 0050 231C     		mov	r3, r4
 350 0052 FFF7FEFF 		bl	__aeabi_dmul
 351 0056 031C     		mov	r3, r0
 352 0058 0C1C     		mov	r4, r1
 353 005a 191C     		mov	r1, r3
 354 005c 221C     		mov	r2, r4
 355 005e 264B     		ldr	r3, .L15+4
 356 0060 5C68     		ldr	r4, [r3, #4]
 357 0062 1B68     		ldr	r3, [r3]
 358 0064 081C     		mov	r0, r1
 359 0066 111C     		mov	r1, r2
 360 0068 1A1C     		mov	r2, r3
 361 006a 231C     		mov	r3, r4
 362 006c FFF7FEFF 		bl	__aeabi_dadd
 363 0070 031C     		mov	r3, r0
 364 0072 0C1C     		mov	r4, r1
 365 0074 204A     		ldr	r2, .L15+4
 366 0076 1360     		str	r3, [r2]
 367 0078 5460     		str	r4, [r2, #4]
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 368              		.loc 1 65 0 discriminator 3
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 9


 369 007a 204B     		ldr	r3, .L15+8
 370 007c 1B88     		ldrh	r3, [r3]
 371 007e 9BB2     		uxth	r3, r3
 372 0080 9BB2     		uxth	r3, r3
 373 0082 0133     		add	r3, r3, #1
 374 0084 9BB2     		uxth	r3, r3
 375 0086 9AB2     		uxth	r2, r3
 376 0088 1C4B     		ldr	r3, .L15+8
 377 008a 1A80     		strh	r2, [r3]
 378              	.L10:
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 379              		.loc 1 65 0 is_stmt 0 discriminator 1
 380 008c 1B4B     		ldr	r3, .L15+8
 381 008e 1B88     		ldrh	r3, [r3]
 382 0090 1BB2     		sxth	r3, r3
 383 0092 092B     		cmp	r3, #9
 384 0094 C9DD     		ble	.L11
  68:.\main.c      ****    } 
  69:.\main.c      ****    
  70:.\main.c      ****    for(i = FILTER_LENGTH_mavg-1;i >= 0;i--)         // Roll x array in order to hold old sample inp
 385              		.loc 1 70 0 is_stmt 1
 386 0096 194B     		ldr	r3, .L15+8
 387 0098 0822     		mov	r2, #8
 388 009a 1A80     		strh	r2, [r3]
 389 009c 19E0     		b	.L12
 390              	.L13:
  71:.\main.c      ****    {
  72:.\main.c      ****       x_mavg[i+1] = x_mavg[i];
 391              		.loc 1 72 0 discriminator 3
 392 009e 174B     		ldr	r3, .L15+8
 393 00a0 1B88     		ldrh	r3, [r3]
 394 00a2 1BB2     		sxth	r3, r3
 395 00a4 5A1C     		add	r2, r3, #1
 396 00a6 154B     		ldr	r3, .L15+8
 397 00a8 1B88     		ldrh	r3, [r3]
 398 00aa 1BB2     		sxth	r3, r3
 399 00ac 1149     		ldr	r1, .L15
 400 00ae DB00     		lsl	r3, r3, #3
 401 00b0 CB18     		add	r3, r1, r3
 402 00b2 5C68     		ldr	r4, [r3, #4]
 403 00b4 1B68     		ldr	r3, [r3]
 404 00b6 0F49     		ldr	r1, .L15
 405 00b8 D200     		lsl	r2, r2, #3
 406 00ba 8A18     		add	r2, r1, r2
 407 00bc 1360     		str	r3, [r2]
 408 00be 5460     		str	r4, [r2, #4]
  70:.\main.c      ****    {
 409              		.loc 1 70 0 discriminator 3
 410 00c0 0E4B     		ldr	r3, .L15+8
 411 00c2 1B88     		ldrh	r3, [r3]
 412 00c4 9BB2     		uxth	r3, r3
 413 00c6 9BB2     		uxth	r3, r3
 414 00c8 013B     		sub	r3, r3, #1
 415 00ca 9BB2     		uxth	r3, r3
 416 00cc 9AB2     		uxth	r2, r3
 417 00ce 0B4B     		ldr	r3, .L15+8
 418 00d0 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 10


 419              	.L12:
  70:.\main.c      ****    {
 420              		.loc 1 70 0 is_stmt 0 discriminator 1
 421 00d2 0A4B     		ldr	r3, .L15+8
 422 00d4 1B88     		ldrh	r3, [r3]
 423 00d6 1BB2     		sxth	r3, r3
 424 00d8 002B     		cmp	r3, #0
 425 00da E0DA     		bge	.L13
  73:.\main.c      ****    }
  74:.\main.c      ****   
  75:.\main.c      ****    return (signed int) y_mavg;
 426              		.loc 1 75 0 is_stmt 1
 427 00dc 064B     		ldr	r3, .L15+4
 428 00de 5C68     		ldr	r4, [r3, #4]
 429 00e0 1B68     		ldr	r3, [r3]
 430 00e2 181C     		mov	r0, r3
 431 00e4 211C     		mov	r1, r4
 432 00e6 FFF7FEFF 		bl	__aeabi_d2iz
 433 00ea 031C     		mov	r3, r0
  76:.\main.c      **** }
 434              		.loc 1 76 0
 435 00ec 181C     		mov	r0, r3
 436 00ee BD46     		mov	sp, r7
 437 00f0 03B0     		add	sp, sp, #12
 438              		@ sp needed
 439 00f2 90BD     		pop	{r4, r7, pc}
 440              	.L16:
 441              		.align	2
 442              	.L15:
 443 00f4 00000000 		.word	x_mavg
 444 00f8 00000000 		.word	y_mavg
 445 00fc 00000000 		.word	i
 446 0100 00000000 		.word	b_mavg
 447              		.cfi_endproc
 448              	.LFE38:
 449              		.size	mavg_filter, .-mavg_filter
 450              		.section	.text.mavg_filter2,"ax",%progbits
 451              		.align	2
 452              		.global	mavg_filter2
 453              		.code	16
 454              		.thumb_func
 455              		.type	mavg_filter2, %function
 456              	mavg_filter2:
 457              	.LFB39:
  77:.\main.c      **** 
  78:.\main.c      **** 
  79:.\main.c      **** /***********************************Moving average filter 2***********************************/
  80:.\main.c      **** signed int mavg_filter2(signed int data)
  81:.\main.c      **** {
 458              		.loc 1 81 0
 459              		.cfi_startproc
 460 0000 90B5     		push	{r4, r7, lr}
 461              		.cfi_def_cfa_offset 12
 462              		.cfi_offset 4, -12
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 11


 466              		.cfi_def_cfa_offset 24
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
  82:.\main.c      ****    x2_mavg[0] =  (int16) data;                     // Read received sample and perform type casts
 470              		.loc 1 82 0
 471 0008 7B68     		ldr	r3, [r7, #4]
 472 000a 9BB2     		uxth	r3, r3
 473 000c 1BB2     		sxth	r3, r3
 474 000e 181C     		mov	r0, r3
 475 0010 FFF7FEFF 		bl	__aeabi_i2d
 476 0014 031C     		mov	r3, r0
 477 0016 0C1C     		mov	r4, r1
 478 0018 384A     		ldr	r2, .L23
 479 001a 1360     		str	r3, [r2]
 480 001c 5460     		str	r4, [r2, #4]
  83:.\main.c      ****     
  84:.\main.c      ****    y2_mavg = 0;                                     // 
 481              		.loc 1 84 0
 482 001e 384A     		ldr	r2, .L23+4
 483 0020 0023     		mov	r3, #0
 484 0022 0024     		mov	r4, #0
 485 0024 1360     		str	r3, [r2]
 486 0026 5460     		str	r4, [r2, #4]
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 487              		.loc 1 85 0
 488 0028 364B     		ldr	r3, .L23+8
 489 002a 0022     		mov	r2, #0
 490 002c 1A80     		strh	r2, [r3]
 491 002e 30E0     		b	.L18
 492              	.L19:
  86:.\main.c      ****    {
  87:.\main.c      ****       y2_mavg += b2_mavg[i]*x2_mavg[i];             // 
 493              		.loc 1 87 0 discriminator 3
 494 0030 344B     		ldr	r3, .L23+8
 495 0032 1B88     		ldrh	r3, [r3]
 496 0034 1BB2     		sxth	r3, r3
 497 0036 344A     		ldr	r2, .L23+12
 498 0038 DB00     		lsl	r3, r3, #3
 499 003a D318     		add	r3, r2, r3
 500 003c 1968     		ldr	r1, [r3]
 501 003e 5A68     		ldr	r2, [r3, #4]
 502 0040 304B     		ldr	r3, .L23+8
 503 0042 1B88     		ldrh	r3, [r3]
 504 0044 1BB2     		sxth	r3, r3
 505 0046 2D48     		ldr	r0, .L23
 506 0048 DB00     		lsl	r3, r3, #3
 507 004a C318     		add	r3, r0, r3
 508 004c 5C68     		ldr	r4, [r3, #4]
 509 004e 1B68     		ldr	r3, [r3]
 510 0050 081C     		mov	r0, r1
 511 0052 111C     		mov	r1, r2
 512 0054 1A1C     		mov	r2, r3
 513 0056 231C     		mov	r3, r4
 514 0058 FFF7FEFF 		bl	__aeabi_dmul
 515 005c 031C     		mov	r3, r0
 516 005e 0C1C     		mov	r4, r1
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 12


 517 0060 191C     		mov	r1, r3
 518 0062 221C     		mov	r2, r4
 519 0064 264B     		ldr	r3, .L23+4
 520 0066 5C68     		ldr	r4, [r3, #4]
 521 0068 1B68     		ldr	r3, [r3]
 522 006a 081C     		mov	r0, r1
 523 006c 111C     		mov	r1, r2
 524 006e 1A1C     		mov	r2, r3
 525 0070 231C     		mov	r3, r4
 526 0072 FFF7FEFF 		bl	__aeabi_dadd
 527 0076 031C     		mov	r3, r0
 528 0078 0C1C     		mov	r4, r1
 529 007a 214A     		ldr	r2, .L23+4
 530 007c 1360     		str	r3, [r2]
 531 007e 5460     		str	r4, [r2, #4]
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 532              		.loc 1 85 0 discriminator 3
 533 0080 204B     		ldr	r3, .L23+8
 534 0082 1B88     		ldrh	r3, [r3]
 535 0084 9BB2     		uxth	r3, r3
 536 0086 9BB2     		uxth	r3, r3
 537 0088 0133     		add	r3, r3, #1
 538 008a 9BB2     		uxth	r3, r3
 539 008c 9AB2     		uxth	r2, r3
 540 008e 1D4B     		ldr	r3, .L23+8
 541 0090 1A80     		strh	r2, [r3]
 542              	.L18:
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 543              		.loc 1 85 0 is_stmt 0 discriminator 1
 544 0092 1C4B     		ldr	r3, .L23+8
 545 0094 1B88     		ldrh	r3, [r3]
 546 0096 1BB2     		sxth	r3, r3
 547 0098 092B     		cmp	r3, #9
 548 009a C9DD     		ble	.L19
  88:.\main.c      ****    } 
  89:.\main.c      ****    
  90:.\main.c      ****    for(i = FILTER_LENGTH_mavg2-1;i >= 0;i--)        // Roll x array in order to hold old sample inp
 549              		.loc 1 90 0 is_stmt 1
 550 009c 194B     		ldr	r3, .L23+8
 551 009e 0822     		mov	r2, #8
 552 00a0 1A80     		strh	r2, [r3]
 553 00a2 19E0     		b	.L20
 554              	.L21:
  91:.\main.c      ****    {
  92:.\main.c      ****       x2_mavg[i+1] = x2_mavg[i];                    // 
 555              		.loc 1 92 0 discriminator 3
 556 00a4 174B     		ldr	r3, .L23+8
 557 00a6 1B88     		ldrh	r3, [r3]
 558 00a8 1BB2     		sxth	r3, r3
 559 00aa 5A1C     		add	r2, r3, #1
 560 00ac 154B     		ldr	r3, .L23+8
 561 00ae 1B88     		ldrh	r3, [r3]
 562 00b0 1BB2     		sxth	r3, r3
 563 00b2 1249     		ldr	r1, .L23
 564 00b4 DB00     		lsl	r3, r3, #3
 565 00b6 CB18     		add	r3, r1, r3
 566 00b8 5C68     		ldr	r4, [r3, #4]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 13


 567 00ba 1B68     		ldr	r3, [r3]
 568 00bc 0F49     		ldr	r1, .L23
 569 00be D200     		lsl	r2, r2, #3
 570 00c0 8A18     		add	r2, r1, r2
 571 00c2 1360     		str	r3, [r2]
 572 00c4 5460     		str	r4, [r2, #4]
  90:.\main.c      ****    {
 573              		.loc 1 90 0 discriminator 3
 574 00c6 0F4B     		ldr	r3, .L23+8
 575 00c8 1B88     		ldrh	r3, [r3]
 576 00ca 9BB2     		uxth	r3, r3
 577 00cc 9BB2     		uxth	r3, r3
 578 00ce 013B     		sub	r3, r3, #1
 579 00d0 9BB2     		uxth	r3, r3
 580 00d2 9AB2     		uxth	r2, r3
 581 00d4 0B4B     		ldr	r3, .L23+8
 582 00d6 1A80     		strh	r2, [r3]
 583              	.L20:
  90:.\main.c      ****    {
 584              		.loc 1 90 0 is_stmt 0 discriminator 1
 585 00d8 0A4B     		ldr	r3, .L23+8
 586 00da 1B88     		ldrh	r3, [r3]
 587 00dc 1BB2     		sxth	r3, r3
 588 00de 002B     		cmp	r3, #0
 589 00e0 E0DA     		bge	.L21
  93:.\main.c      ****    }
  94:.\main.c      ****       
  95:.\main.c      ****    return (signed int) y2_mavg;               // 
 590              		.loc 1 95 0 is_stmt 1
 591 00e2 074B     		ldr	r3, .L23+4
 592 00e4 5C68     		ldr	r4, [r3, #4]
 593 00e6 1B68     		ldr	r3, [r3]
 594 00e8 181C     		mov	r0, r3
 595 00ea 211C     		mov	r1, r4
 596 00ec FFF7FEFF 		bl	__aeabi_d2iz
 597 00f0 031C     		mov	r3, r0
  96:.\main.c      **** }
 598              		.loc 1 96 0
 599 00f2 181C     		mov	r0, r3
 600 00f4 BD46     		mov	sp, r7
 601 00f6 03B0     		add	sp, sp, #12
 602              		@ sp needed
 603 00f8 90BD     		pop	{r4, r7, pc}
 604              	.L24:
 605 00fa C046     		.align	2
 606              	.L23:
 607 00fc 00000000 		.word	x2_mavg
 608 0100 00000000 		.word	y2_mavg
 609 0104 00000000 		.word	i
 610 0108 00000000 		.word	b2_mavg
 611              		.cfi_endproc
 612              	.LFE39:
 613              		.size	mavg_filter2, .-mavg_filter2
 614              		.section	.text.low_pass_filter,"ax",%progbits
 615              		.align	2
 616              		.global	low_pass_filter
 617              		.code	16
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 14


 618              		.thumb_func
 619              		.type	low_pass_filter, %function
 620              	low_pass_filter:
 621              	.LFB40:
  97:.\main.c      **** 
  98:.\main.c      **** /***********************************Lavpas filter***********************************/
  99:.\main.c      **** 
 100:.\main.c      **** int low_pass_filter(int data)
 101:.\main.c      **** {
 622              		.loc 1 101 0
 623              		.cfi_startproc
 624 0000 B0B5     		push	{r4, r5, r7, lr}
 625              		.cfi_def_cfa_offset 16
 626              		.cfi_offset 4, -16
 627              		.cfi_offset 5, -12
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 84B0     		sub	sp, sp, #16
 631              		.cfi_def_cfa_offset 32
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 102:.\main.c      ****    int i;
 103:.\main.c      ****    x_low[0] =  (double) data;
 635              		.loc 1 103 0
 636 0008 7868     		ldr	r0, [r7, #4]
 637 000a FFF7FEFF 		bl	__aeabi_i2d
 638 000e 031C     		mov	r3, r0
 639 0010 0C1C     		mov	r4, r1
 640 0012 404A     		ldr	r2, .L33
 641 0014 1360     		str	r3, [r2]
 642 0016 5460     		str	r4, [r2, #4]
 104:.\main.c      ****    
 105:.\main.c      ****    y_low[0] = 0;
 643              		.loc 1 105 0
 644 0018 3F4A     		ldr	r2, .L33+4
 645 001a 0023     		mov	r3, #0
 646 001c 0024     		mov	r4, #0
 647 001e 1360     		str	r3, [r2]
 648 0020 5460     		str	r4, [r2, #4]
 106:.\main.c      ****   
 107:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_low;i++)                 // Run IIR filter for each received sample
 649              		.loc 1 107 0
 650 0022 0023     		mov	r3, #0
 651 0024 FB60     		str	r3, [r7, #12]
 652 0026 1EE0     		b	.L26
 653              	.L27:
 108:.\main.c      ****    {
 109:.\main.c      ****       y_low[0] += b_low[i]*x_low[i];
 654              		.loc 1 109 0 discriminator 3
 655 0028 3B4B     		ldr	r3, .L33+4
 656 002a 1C68     		ldr	r4, [r3]
 657 002c 5D68     		ldr	r5, [r3, #4]
 658 002e 3B4A     		ldr	r2, .L33+8
 659 0030 FB68     		ldr	r3, [r7, #12]
 660 0032 DB00     		lsl	r3, r3, #3
 661 0034 D318     		add	r3, r2, r3
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 15


 662 0036 1868     		ldr	r0, [r3]
 663 0038 5968     		ldr	r1, [r3, #4]
 664 003a 364A     		ldr	r2, .L33
 665 003c FB68     		ldr	r3, [r7, #12]
 666 003e DB00     		lsl	r3, r3, #3
 667 0040 D318     		add	r3, r2, r3
 668 0042 1A68     		ldr	r2, [r3]
 669 0044 5B68     		ldr	r3, [r3, #4]
 670 0046 FFF7FEFF 		bl	__aeabi_dmul
 671 004a 021C     		mov	r2, r0
 672 004c 0B1C     		mov	r3, r1
 673 004e 201C     		mov	r0, r4
 674 0050 291C     		mov	r1, r5
 675 0052 FFF7FEFF 		bl	__aeabi_dadd
 676 0056 031C     		mov	r3, r0
 677 0058 0C1C     		mov	r4, r1
 678 005a 2F4A     		ldr	r2, .L33+4
 679 005c 1360     		str	r3, [r2]
 680 005e 5460     		str	r4, [r2, #4]
 107:.\main.c      ****    {
 681              		.loc 1 107 0 discriminator 3
 682 0060 FB68     		ldr	r3, [r7, #12]
 683 0062 0133     		add	r3, r3, #1
 684 0064 FB60     		str	r3, [r7, #12]
 685              	.L26:
 107:.\main.c      ****    {
 686              		.loc 1 107 0 is_stmt 0 discriminator 1
 687 0066 FB68     		ldr	r3, [r7, #12]
 688 0068 022B     		cmp	r3, #2
 689 006a DDDD     		ble	.L27
 110:.\main.c      ****    } 
 111:.\main.c      ****    
 112:.\main.c      ****    for(i =1;i <= FILTER_LENGTH_low;i++)               // Roll x array in order to hold old sample i
 690              		.loc 1 112 0 is_stmt 1
 691 006c 0123     		mov	r3, #1
 692 006e FB60     		str	r3, [r7, #12]
 693 0070 1EE0     		b	.L28
 694              	.L29:
 113:.\main.c      ****    {
 114:.\main.c      ****       y_low[0] -= a_low[i]*y_low[i];
 695              		.loc 1 114 0 discriminator 3
 696 0072 294B     		ldr	r3, .L33+4
 697 0074 1C68     		ldr	r4, [r3]
 698 0076 5D68     		ldr	r5, [r3, #4]
 699 0078 294A     		ldr	r2, .L33+12
 700 007a FB68     		ldr	r3, [r7, #12]
 701 007c DB00     		lsl	r3, r3, #3
 702 007e D318     		add	r3, r2, r3
 703 0080 1868     		ldr	r0, [r3]
 704 0082 5968     		ldr	r1, [r3, #4]
 705 0084 244A     		ldr	r2, .L33+4
 706 0086 FB68     		ldr	r3, [r7, #12]
 707 0088 DB00     		lsl	r3, r3, #3
 708 008a D318     		add	r3, r2, r3
 709 008c 1A68     		ldr	r2, [r3]
 710 008e 5B68     		ldr	r3, [r3, #4]
 711 0090 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 16


 712 0094 021C     		mov	r2, r0
 713 0096 0B1C     		mov	r3, r1
 714 0098 201C     		mov	r0, r4
 715 009a 291C     		mov	r1, r5
 716 009c FFF7FEFF 		bl	__aeabi_dsub
 717 00a0 031C     		mov	r3, r0
 718 00a2 0C1C     		mov	r4, r1
 719 00a4 1C4A     		ldr	r2, .L33+4
 720 00a6 1360     		str	r3, [r2]
 721 00a8 5460     		str	r4, [r2, #4]
 112:.\main.c      ****    {
 722              		.loc 1 112 0 discriminator 3
 723 00aa FB68     		ldr	r3, [r7, #12]
 724 00ac 0133     		add	r3, r3, #1
 725 00ae FB60     		str	r3, [r7, #12]
 726              	.L28:
 112:.\main.c      ****    {
 727              		.loc 1 112 0 is_stmt 0 discriminator 1
 728 00b0 FB68     		ldr	r3, [r7, #12]
 729 00b2 022B     		cmp	r3, #2
 730 00b4 DDDD     		ble	.L29
 115:.\main.c      ****    }
 116:.\main.c      **** 
 117:.\main.c      ****    for(i = FILTER_LENGTH_low-1;i >= 0;i--)
 731              		.loc 1 117 0 is_stmt 1
 732 00b6 0123     		mov	r3, #1
 733 00b8 FB60     		str	r3, [r7, #12]
 734 00ba 1CE0     		b	.L30
 735              	.L31:
 118:.\main.c      ****     {
 119:.\main.c      ****        x_low[i+1]=x_low[i];
 736              		.loc 1 119 0 discriminator 3
 737 00bc FB68     		ldr	r3, [r7, #12]
 738 00be 5A1C     		add	r2, r3, #1
 739 00c0 1449     		ldr	r1, .L33
 740 00c2 FB68     		ldr	r3, [r7, #12]
 741 00c4 DB00     		lsl	r3, r3, #3
 742 00c6 CB18     		add	r3, r1, r3
 743 00c8 5C68     		ldr	r4, [r3, #4]
 744 00ca 1B68     		ldr	r3, [r3]
 745 00cc 1149     		ldr	r1, .L33
 746 00ce D200     		lsl	r2, r2, #3
 747 00d0 8A18     		add	r2, r1, r2
 748 00d2 1360     		str	r3, [r2]
 749 00d4 5460     		str	r4, [r2, #4]
 120:.\main.c      ****        y_low[i+1]=y_low[i];
 750              		.loc 1 120 0 discriminator 3
 751 00d6 FB68     		ldr	r3, [r7, #12]
 752 00d8 5A1C     		add	r2, r3, #1
 753 00da 0F49     		ldr	r1, .L33+4
 754 00dc FB68     		ldr	r3, [r7, #12]
 755 00de DB00     		lsl	r3, r3, #3
 756 00e0 CB18     		add	r3, r1, r3
 757 00e2 5C68     		ldr	r4, [r3, #4]
 758 00e4 1B68     		ldr	r3, [r3]
 759 00e6 0C49     		ldr	r1, .L33+4
 760 00e8 D200     		lsl	r2, r2, #3
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 17


 761 00ea 8A18     		add	r2, r1, r2
 762 00ec 1360     		str	r3, [r2]
 763 00ee 5460     		str	r4, [r2, #4]
 117:.\main.c      ****     {
 764              		.loc 1 117 0 discriminator 3
 765 00f0 FB68     		ldr	r3, [r7, #12]
 766 00f2 013B     		sub	r3, r3, #1
 767 00f4 FB60     		str	r3, [r7, #12]
 768              	.L30:
 117:.\main.c      ****     {
 769              		.loc 1 117 0 is_stmt 0 discriminator 1
 770 00f6 FB68     		ldr	r3, [r7, #12]
 771 00f8 002B     		cmp	r3, #0
 772 00fa DFDA     		bge	.L31
 121:.\main.c      ****     }
 122:.\main.c      **** 
 123:.\main.c      ****     return floor_and_convert(y_low[0]);
 773              		.loc 1 123 0 is_stmt 1
 774 00fc 064B     		ldr	r3, .L33+4
 775 00fe 5C68     		ldr	r4, [r3, #4]
 776 0100 1B68     		ldr	r3, [r3]
 777 0102 181C     		mov	r0, r3
 778 0104 211C     		mov	r1, r4
 779 0106 FFF7FEFF 		bl	floor_and_convert
 780 010a 031C     		mov	r3, r0
 124:.\main.c      **** }
 781              		.loc 1 124 0
 782 010c 181C     		mov	r0, r3
 783 010e BD46     		mov	sp, r7
 784 0110 04B0     		add	sp, sp, #16
 785              		@ sp needed
 786 0112 B0BD     		pop	{r4, r5, r7, pc}
 787              	.L34:
 788              		.align	2
 789              	.L33:
 790 0114 00000000 		.word	x_low
 791 0118 00000000 		.word	y_low
 792 011c 00000000 		.word	b_low
 793 0120 00000000 		.word	a_low
 794              		.cfi_endproc
 795              	.LFE40:
 796              		.size	low_pass_filter, .-low_pass_filter
 797              		.global	__aeabi_idiv
 798              		.section	.text.roed_grader,"ax",%progbits
 799              		.align	2
 800              		.global	roed_grader
 801              		.code	16
 802              		.thumb_func
 803              		.type	roed_grader, %function
 804              	roed_grader:
 805              	.LFB41:
 125:.\main.c      **** 
 126:.\main.c      **** 
 127:.\main.c      **** /***********************************Omregning til grader for rød**********************************
 128:.\main.c      **** int roed_grader(int data)
 129:.\main.c      **** {
 806              		.loc 1 129 0
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 18


 807              		.cfi_startproc
 808 0000 80B5     		push	{r7, lr}
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 82B0     		sub	sp, sp, #8
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 130:.\main.c      ****     if ((data >= -204) && (data <= -202))
 817              		.loc 1 130 0
 818 0008 7B68     		ldr	r3, [r7, #4]
 819 000a CC33     		add	r3, r3, #204
 820 000c 10DB     		blt	.L36
 821              		.loc 1 130 0 is_stmt 0 discriminator 1
 822 000e 7B68     		ldr	r3, [r7, #4]
 823 0010 C933     		add	r3, r3, #201
 824 0012 0DDA     		bge	.L36
 131:.\main.c      ****     {
 132:.\main.c      ****         data=(0+(10-0)*(data-(-202))/(-204-(-202)));
 825              		.loc 1 132 0 is_stmt 1
 826 0014 7B68     		ldr	r3, [r7, #4]
 827 0016 CA33     		add	r3, r3, #202
 828 0018 1A1C     		mov	r2, r3
 829 001a 131C     		mov	r3, r2
 830 001c 9B00     		lsl	r3, r3, #2
 831 001e 9B18     		add	r3, r3, r2
 832 0020 5B00     		lsl	r3, r3, #1
 833 0022 00D5     		bpl	.L37
 834 0024 0133     		add	r3, r3, #1
 835              	.L37:
 836 0026 5B10     		asr	r3, r3, #1
 837 0028 5B42     		neg	r3, r3
 838 002a 7B60     		str	r3, [r7, #4]
 133:.\main.c      ****         return data; 
 839              		.loc 1 133 0
 840 002c 7B68     		ldr	r3, [r7, #4]
 841 002e 71E0     		b	.L38
 842              	.L36:
 134:.\main.c      ****     }
 135:.\main.c      ****     else if ((data >= -202) && (data <= -185))
 843              		.loc 1 135 0
 844 0030 7B68     		ldr	r3, [r7, #4]
 845 0032 CA33     		add	r3, r3, #202
 846 0034 12DB     		blt	.L39
 847              		.loc 1 135 0 is_stmt 0 discriminator 1
 848 0036 7B68     		ldr	r3, [r7, #4]
 849 0038 B833     		add	r3, r3, #184
 850 003a 0FDA     		bge	.L39
 136:.\main.c      ****     {
 137:.\main.c      ****         data=(10+(30-10)*(data-(-202))/(-185-(-202)));
 851              		.loc 1 137 0 is_stmt 1
 852 003c 7B68     		ldr	r3, [r7, #4]
 853 003e CA33     		add	r3, r3, #202
 854 0040 1A1C     		mov	r2, r3
 855 0042 131C     		mov	r3, r2
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 19


 856 0044 9B00     		lsl	r3, r3, #2
 857 0046 9B18     		add	r3, r3, r2
 858 0048 9B00     		lsl	r3, r3, #2
 859 004a 181C     		mov	r0, r3
 860 004c 1121     		mov	r1, #17
 861 004e FFF7FEFF 		bl	__aeabi_idiv
 862 0052 031C     		mov	r3, r0
 863 0054 0A33     		add	r3, r3, #10
 864 0056 7B60     		str	r3, [r7, #4]
 138:.\main.c      ****         return data;
 865              		.loc 1 138 0
 866 0058 7B68     		ldr	r3, [r7, #4]
 867 005a 5BE0     		b	.L38
 868              	.L39:
 139:.\main.c      ****     }
 140:.\main.c      ****     else if ((data >= -185) && (data <= -143))
 869              		.loc 1 140 0
 870 005c 7B68     		ldr	r3, [r7, #4]
 871 005e B933     		add	r3, r3, #185
 872 0060 12DB     		blt	.L40
 873              		.loc 1 140 0 is_stmt 0 discriminator 1
 874 0062 7B68     		ldr	r3, [r7, #4]
 875 0064 8E33     		add	r3, r3, #142
 876 0066 0FDA     		bge	.L40
 141:.\main.c      ****     {
 142:.\main.c      ****         data=(30+(50-30)*(data-(-185))/(-143-(-185)));
 877              		.loc 1 142 0 is_stmt 1
 878 0068 7B68     		ldr	r3, [r7, #4]
 879 006a B933     		add	r3, r3, #185
 880 006c 1A1C     		mov	r2, r3
 881 006e 131C     		mov	r3, r2
 882 0070 9B00     		lsl	r3, r3, #2
 883 0072 9B18     		add	r3, r3, r2
 884 0074 9B00     		lsl	r3, r3, #2
 885 0076 181C     		mov	r0, r3
 886 0078 2A21     		mov	r1, #42
 887 007a FFF7FEFF 		bl	__aeabi_idiv
 888 007e 031C     		mov	r3, r0
 889 0080 1E33     		add	r3, r3, #30
 890 0082 7B60     		str	r3, [r7, #4]
 143:.\main.c      ****         return data;
 891              		.loc 1 143 0
 892 0084 7B68     		ldr	r3, [r7, #4]
 893 0086 45E0     		b	.L38
 894              	.L40:
 144:.\main.c      ****     }
 145:.\main.c      ****     else if ((data >= -143) && (data <= -84))
 895              		.loc 1 145 0
 896 0088 7B68     		ldr	r3, [r7, #4]
 897 008a 8F33     		add	r3, r3, #143
 898 008c 12DB     		blt	.L41
 899              		.loc 1 145 0 is_stmt 0 discriminator 1
 900 008e 7B68     		ldr	r3, [r7, #4]
 901 0090 5333     		add	r3, r3, #83
 902 0092 0FDA     		bge	.L41
 146:.\main.c      ****     {
 147:.\main.c      ****         data=(50+(70-50)*(data-(-143))/(-84-(-143)));
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 20


 903              		.loc 1 147 0 is_stmt 1
 904 0094 7B68     		ldr	r3, [r7, #4]
 905 0096 8F33     		add	r3, r3, #143
 906 0098 1A1C     		mov	r2, r3
 907 009a 131C     		mov	r3, r2
 908 009c 9B00     		lsl	r3, r3, #2
 909 009e 9B18     		add	r3, r3, r2
 910 00a0 9B00     		lsl	r3, r3, #2
 911 00a2 181C     		mov	r0, r3
 912 00a4 3B21     		mov	r1, #59
 913 00a6 FFF7FEFF 		bl	__aeabi_idiv
 914 00aa 031C     		mov	r3, r0
 915 00ac 3233     		add	r3, r3, #50
 916 00ae 7B60     		str	r3, [r7, #4]
 148:.\main.c      ****         return data;
 917              		.loc 1 148 0
 918 00b0 7B68     		ldr	r3, [r7, #4]
 919 00b2 2FE0     		b	.L38
 920              	.L41:
 149:.\main.c      ****     }
 150:.\main.c      ****     else if ((data >= -84) && (data <= -48))
 921              		.loc 1 150 0
 922 00b4 7B68     		ldr	r3, [r7, #4]
 923 00b6 5433     		add	r3, r3, #84
 924 00b8 12DB     		blt	.L42
 925              		.loc 1 150 0 is_stmt 0 discriminator 1
 926 00ba 7B68     		ldr	r3, [r7, #4]
 927 00bc 2F33     		add	r3, r3, #47
 928 00be 0FDA     		bge	.L42
 151:.\main.c      ****     {
 152:.\main.c      ****         data=(70+(80-70)*(data-(-84))/(-48-(-84)));
 929              		.loc 1 152 0 is_stmt 1
 930 00c0 7B68     		ldr	r3, [r7, #4]
 931 00c2 5433     		add	r3, r3, #84
 932 00c4 1A1C     		mov	r2, r3
 933 00c6 131C     		mov	r3, r2
 934 00c8 9B00     		lsl	r3, r3, #2
 935 00ca 9B18     		add	r3, r3, r2
 936 00cc 5B00     		lsl	r3, r3, #1
 937 00ce 181C     		mov	r0, r3
 938 00d0 2421     		mov	r1, #36
 939 00d2 FFF7FEFF 		bl	__aeabi_idiv
 940 00d6 031C     		mov	r3, r0
 941 00d8 4633     		add	r3, r3, #70
 942 00da 7B60     		str	r3, [r7, #4]
 153:.\main.c      ****         return data;
 943              		.loc 1 153 0
 944 00dc 7B68     		ldr	r3, [r7, #4]
 945 00de 19E0     		b	.L38
 946              	.L42:
 154:.\main.c      ****     }
 155:.\main.c      ****     else if ((data >= -48) && (data <= -7))
 947              		.loc 1 155 0
 948 00e0 7B68     		ldr	r3, [r7, #4]
 949 00e2 3033     		add	r3, r3, #48
 950 00e4 12DB     		blt	.L43
 951              		.loc 1 155 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 21


 952 00e6 7B68     		ldr	r3, [r7, #4]
 953 00e8 0633     		add	r3, r3, #6
 954 00ea 0FDA     		bge	.L43
 156:.\main.c      ****     {
 157:.\main.c      ****         data=(80+(90-80)*(data-(-48))/(-7-(-48)));
 955              		.loc 1 157 0 is_stmt 1
 956 00ec 7B68     		ldr	r3, [r7, #4]
 957 00ee 3033     		add	r3, r3, #48
 958 00f0 1A1C     		mov	r2, r3
 959 00f2 131C     		mov	r3, r2
 960 00f4 9B00     		lsl	r3, r3, #2
 961 00f6 9B18     		add	r3, r3, r2
 962 00f8 5B00     		lsl	r3, r3, #1
 963 00fa 181C     		mov	r0, r3
 964 00fc 2921     		mov	r1, #41
 965 00fe FFF7FEFF 		bl	__aeabi_idiv
 966 0102 031C     		mov	r3, r0
 967 0104 5033     		add	r3, r3, #80
 968 0106 7B60     		str	r3, [r7, #4]
 158:.\main.c      ****         return data;
 969              		.loc 1 158 0
 970 0108 7B68     		ldr	r3, [r7, #4]
 971 010a 03E0     		b	.L38
 972              	.L43:
 159:.\main.c      ****     }
 160:.\main.c      ****     
 161:.\main.c      ****     else
 162:.\main.c      ****     {
 163:.\main.c      ****         data = -200;
 973              		.loc 1 163 0
 974 010c C823     		mov	r3, #200
 975 010e 5B42     		neg	r3, r3
 976 0110 7B60     		str	r3, [r7, #4]
 164:.\main.c      ****         return data;
 977              		.loc 1 164 0
 978 0112 7B68     		ldr	r3, [r7, #4]
 979              	.L38:
 165:.\main.c      ****     }
 166:.\main.c      **** }
 980              		.loc 1 166 0
 981 0114 181C     		mov	r0, r3
 982 0116 BD46     		mov	sp, r7
 983 0118 02B0     		add	sp, sp, #8
 984              		@ sp needed
 985 011a 80BD     		pop	{r7, pc}
 986              		.cfi_endproc
 987              	.LFE41:
 988              		.size	roed_grader, .-roed_grader
 989              		.section	.text.groen_grader,"ax",%progbits
 990              		.align	2
 991              		.global	groen_grader
 992              		.code	16
 993              		.thumb_func
 994              		.type	groen_grader, %function
 995              	groen_grader:
 996              	.LFB42:
 167:.\main.c      **** 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 22


 168:.\main.c      **** /***********************************Omregning til grader for grøn*********************************
 169:.\main.c      **** int groen_grader(int data)
 170:.\main.c      **** {
 997              		.loc 1 170 0
 998              		.cfi_startproc
 999 0000 80B5     		push	{r7, lr}
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 7, -8
 1002              		.cfi_offset 14, -4
 1003 0002 82B0     		sub	sp, sp, #8
 1004              		.cfi_def_cfa_offset 16
 1005 0004 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 171:.\main.c      ****     if ((data >= -190) && (data <= -186))
 1008              		.loc 1 171 0
 1009 0008 7B68     		ldr	r3, [r7, #4]
 1010 000a BE33     		add	r3, r3, #190
 1011 000c 0FDB     		blt	.L45
 1012              		.loc 1 171 0 is_stmt 0 discriminator 1
 1013 000e 7B68     		ldr	r3, [r7, #4]
 1014 0010 B933     		add	r3, r3, #185
 1015 0012 0CDA     		bge	.L45
 172:.\main.c      ****     {
 173:.\main.c      ****         data=(0+(10-0)*(data-(-190))/(-186-(-190)));
 1016              		.loc 1 173 0 is_stmt 1
 1017 0014 7B68     		ldr	r3, [r7, #4]
 1018 0016 BE33     		add	r3, r3, #190
 1019 0018 1A1C     		mov	r2, r3
 1020 001a 131C     		mov	r3, r2
 1021 001c 9B00     		lsl	r3, r3, #2
 1022 001e 9B18     		add	r3, r3, r2
 1023 0020 5B00     		lsl	r3, r3, #1
 1024 0022 00D5     		bpl	.L46
 1025 0024 0333     		add	r3, r3, #3
 1026              	.L46:
 1027 0026 9B10     		asr	r3, r3, #2
 1028 0028 7B60     		str	r3, [r7, #4]
 174:.\main.c      ****         return data; 
 1029              		.loc 1 174 0
 1030 002a 7B68     		ldr	r3, [r7, #4]
 1031 002c 71E0     		b	.L47
 1032              	.L45:
 175:.\main.c      ****     }
 176:.\main.c      ****     else if ((data >= -186) && (data <= -163))
 1033              		.loc 1 176 0
 1034 002e 7B68     		ldr	r3, [r7, #4]
 1035 0030 BA33     		add	r3, r3, #186
 1036 0032 12DB     		blt	.L48
 1037              		.loc 1 176 0 is_stmt 0 discriminator 1
 1038 0034 7B68     		ldr	r3, [r7, #4]
 1039 0036 A233     		add	r3, r3, #162
 1040 0038 0FDA     		bge	.L48
 177:.\main.c      ****     {
 178:.\main.c      ****         data=(10+(30-10)*(data-(-186))/(-163-(-186)));
 1041              		.loc 1 178 0 is_stmt 1
 1042 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 23


 1043 003c BA33     		add	r3, r3, #186
 1044 003e 1A1C     		mov	r2, r3
 1045 0040 131C     		mov	r3, r2
 1046 0042 9B00     		lsl	r3, r3, #2
 1047 0044 9B18     		add	r3, r3, r2
 1048 0046 9B00     		lsl	r3, r3, #2
 1049 0048 181C     		mov	r0, r3
 1050 004a 1721     		mov	r1, #23
 1051 004c FFF7FEFF 		bl	__aeabi_idiv
 1052 0050 031C     		mov	r3, r0
 1053 0052 0A33     		add	r3, r3, #10
 1054 0054 7B60     		str	r3, [r7, #4]
 179:.\main.c      ****         return data;
 1055              		.loc 1 179 0
 1056 0056 7B68     		ldr	r3, [r7, #4]
 1057 0058 5BE0     		b	.L47
 1058              	.L48:
 180:.\main.c      ****     }
 181:.\main.c      ****     else if ((data >= -163) && (data <= -121))
 1059              		.loc 1 181 0
 1060 005a 7B68     		ldr	r3, [r7, #4]
 1061 005c A333     		add	r3, r3, #163
 1062 005e 12DB     		blt	.L49
 1063              		.loc 1 181 0 is_stmt 0 discriminator 1
 1064 0060 7B68     		ldr	r3, [r7, #4]
 1065 0062 7833     		add	r3, r3, #120
 1066 0064 0FDA     		bge	.L49
 182:.\main.c      ****     {
 183:.\main.c      ****         data=(30+(50-30)*(data-(-163))/(-121-(-163)));
 1067              		.loc 1 183 0 is_stmt 1
 1068 0066 7B68     		ldr	r3, [r7, #4]
 1069 0068 A333     		add	r3, r3, #163
 1070 006a 1A1C     		mov	r2, r3
 1071 006c 131C     		mov	r3, r2
 1072 006e 9B00     		lsl	r3, r3, #2
 1073 0070 9B18     		add	r3, r3, r2
 1074 0072 9B00     		lsl	r3, r3, #2
 1075 0074 181C     		mov	r0, r3
 1076 0076 2A21     		mov	r1, #42
 1077 0078 FFF7FEFF 		bl	__aeabi_idiv
 1078 007c 031C     		mov	r3, r0
 1079 007e 1E33     		add	r3, r3, #30
 1080 0080 7B60     		str	r3, [r7, #4]
 184:.\main.c      ****         return data;
 1081              		.loc 1 184 0
 1082 0082 7B68     		ldr	r3, [r7, #4]
 1083 0084 45E0     		b	.L47
 1084              	.L49:
 185:.\main.c      ****     }
 186:.\main.c      ****     else if ((data >= -121) && (data <= -62))
 1085              		.loc 1 186 0
 1086 0086 7B68     		ldr	r3, [r7, #4]
 1087 0088 7933     		add	r3, r3, #121
 1088 008a 12DB     		blt	.L50
 1089              		.loc 1 186 0 is_stmt 0 discriminator 1
 1090 008c 7B68     		ldr	r3, [r7, #4]
 1091 008e 3D33     		add	r3, r3, #61
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 24


 1092 0090 0FDA     		bge	.L50
 187:.\main.c      ****     {
 188:.\main.c      ****         data=(50+(70-50)*(data-(-121))/(-62-(-121)));
 1093              		.loc 1 188 0 is_stmt 1
 1094 0092 7B68     		ldr	r3, [r7, #4]
 1095 0094 7933     		add	r3, r3, #121
 1096 0096 1A1C     		mov	r2, r3
 1097 0098 131C     		mov	r3, r2
 1098 009a 9B00     		lsl	r3, r3, #2
 1099 009c 9B18     		add	r3, r3, r2
 1100 009e 9B00     		lsl	r3, r3, #2
 1101 00a0 181C     		mov	r0, r3
 1102 00a2 3B21     		mov	r1, #59
 1103 00a4 FFF7FEFF 		bl	__aeabi_idiv
 1104 00a8 031C     		mov	r3, r0
 1105 00aa 3233     		add	r3, r3, #50
 1106 00ac 7B60     		str	r3, [r7, #4]
 189:.\main.c      ****         return data;
 1107              		.loc 1 189 0
 1108 00ae 7B68     		ldr	r3, [r7, #4]
 1109 00b0 2FE0     		b	.L47
 1110              	.L50:
 190:.\main.c      ****     }
 191:.\main.c      ****     else if ((data >= -62) && (data <= -26))
 1111              		.loc 1 191 0
 1112 00b2 7B68     		ldr	r3, [r7, #4]
 1113 00b4 3E33     		add	r3, r3, #62
 1114 00b6 12DB     		blt	.L51
 1115              		.loc 1 191 0 is_stmt 0 discriminator 1
 1116 00b8 7B68     		ldr	r3, [r7, #4]
 1117 00ba 1933     		add	r3, r3, #25
 1118 00bc 0FDA     		bge	.L51
 192:.\main.c      ****     {
 193:.\main.c      ****         data=(70+(80-70)*(data-(-62))/(-26-(-62)));
 1119              		.loc 1 193 0 is_stmt 1
 1120 00be 7B68     		ldr	r3, [r7, #4]
 1121 00c0 3E33     		add	r3, r3, #62
 1122 00c2 1A1C     		mov	r2, r3
 1123 00c4 131C     		mov	r3, r2
 1124 00c6 9B00     		lsl	r3, r3, #2
 1125 00c8 9B18     		add	r3, r3, r2
 1126 00ca 5B00     		lsl	r3, r3, #1
 1127 00cc 181C     		mov	r0, r3
 1128 00ce 2421     		mov	r1, #36
 1129 00d0 FFF7FEFF 		bl	__aeabi_idiv
 1130 00d4 031C     		mov	r3, r0
 1131 00d6 4633     		add	r3, r3, #70
 1132 00d8 7B60     		str	r3, [r7, #4]
 194:.\main.c      ****         return data;
 1133              		.loc 1 194 0
 1134 00da 7B68     		ldr	r3, [r7, #4]
 1135 00dc 19E0     		b	.L47
 1136              	.L51:
 195:.\main.c      ****     }
 196:.\main.c      ****     else if ((data >= -26) && (data <=11))
 1137              		.loc 1 196 0
 1138 00de 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 25


 1139 00e0 1A33     		add	r3, r3, #26
 1140 00e2 12DB     		blt	.L52
 1141              		.loc 1 196 0 is_stmt 0 discriminator 1
 1142 00e4 7B68     		ldr	r3, [r7, #4]
 1143 00e6 0B2B     		cmp	r3, #11
 1144 00e8 0FDC     		bgt	.L52
 197:.\main.c      ****     {
 198:.\main.c      ****         data=(80+(90-80)*(data-(-26))/(11-(-26)));
 1145              		.loc 1 198 0 is_stmt 1
 1146 00ea 7B68     		ldr	r3, [r7, #4]
 1147 00ec 1A33     		add	r3, r3, #26
 1148 00ee 1A1C     		mov	r2, r3
 1149 00f0 131C     		mov	r3, r2
 1150 00f2 9B00     		lsl	r3, r3, #2
 1151 00f4 9B18     		add	r3, r3, r2
 1152 00f6 5B00     		lsl	r3, r3, #1
 1153 00f8 181C     		mov	r0, r3
 1154 00fa 2521     		mov	r1, #37
 1155 00fc FFF7FEFF 		bl	__aeabi_idiv
 1156 0100 031C     		mov	r3, r0
 1157 0102 5033     		add	r3, r3, #80
 1158 0104 7B60     		str	r3, [r7, #4]
 199:.\main.c      ****         return data;
 1159              		.loc 1 199 0
 1160 0106 7B68     		ldr	r3, [r7, #4]
 1161 0108 03E0     		b	.L47
 1162              	.L52:
 200:.\main.c      ****     }
 201:.\main.c      ****     
 202:.\main.c      ****     else
 203:.\main.c      ****     {
 204:.\main.c      ****         data = -200;
 1163              		.loc 1 204 0
 1164 010a C823     		mov	r3, #200
 1165 010c 5B42     		neg	r3, r3
 1166 010e 7B60     		str	r3, [r7, #4]
 205:.\main.c      ****         
 206:.\main.c      ****         return data;
 1167              		.loc 1 206 0
 1168 0110 7B68     		ldr	r3, [r7, #4]
 1169              	.L47:
 207:.\main.c      ****     }
 208:.\main.c      **** }
 1170              		.loc 1 208 0
 1171 0112 181C     		mov	r0, r3
 1172 0114 BD46     		mov	sp, r7
 1173 0116 02B0     		add	sp, sp, #8
 1174              		@ sp needed
 1175 0118 80BD     		pop	{r7, pc}
 1176              		.cfi_endproc
 1177              	.LFE42:
 1178              		.size	groen_grader, .-groen_grader
 1179              		.global	__aeabi_ddiv
 1180 011a C046     		.section	.text.differentiator,"ax",%progbits
 1181              		.align	2
 1182              		.global	differentiator
 1183              		.code	16
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 26


 1184              		.thumb_func
 1185              		.type	differentiator, %function
 1186              	differentiator:
 1187              	.LFB43:
 209:.\main.c      **** 
 210:.\main.c      **** /***********************************Differentiator***********************************/
 211:.\main.c      **** 
 212:.\main.c      **** signed int differentiator(signed int new)
 213:.\main.c      **** {
 1188              		.loc 1 213 0
 1189              		.cfi_startproc
 1190 0000 90B5     		push	{r4, r7, lr}
 1191              		.cfi_def_cfa_offset 12
 1192              		.cfi_offset 4, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 83B0     		sub	sp, sp, #12
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 1199 0006 7860     		str	r0, [r7, #4]
 214:.\main.c      ****    diff = (new - old)/0.01;
 1200              		.loc 1 214 0
 1201 0008 204B     		ldr	r3, .L57
 1202 000a 1B88     		ldrh	r3, [r3]
 1203 000c 1BB2     		sxth	r3, r3
 1204 000e 7A68     		ldr	r2, [r7, #4]
 1205 0010 D31A     		sub	r3, r2, r3
 1206 0012 181C     		mov	r0, r3
 1207 0014 FFF7FEFF 		bl	__aeabi_i2d
 1208 0018 031C     		mov	r3, r0
 1209 001a 0C1C     		mov	r4, r1
 1210 001c 181C     		mov	r0, r3
 1211 001e 211C     		mov	r1, r4
 1212 0020 1B4A     		ldr	r2, .L57+4
 1213 0022 1C4B     		ldr	r3, .L57+8
 1214 0024 FFF7FEFF 		bl	__aeabi_ddiv
 1215 0028 031C     		mov	r3, r0
 1216 002a 0C1C     		mov	r4, r1
 1217 002c 181C     		mov	r0, r3
 1218 002e 211C     		mov	r1, r4
 1219 0030 FFF7FEFF 		bl	__aeabi_d2iz
 1220 0034 031C     		mov	r3, r0
 1221 0036 9AB2     		uxth	r2, r3
 1222 0038 174B     		ldr	r3, .L57+12
 1223 003a 1A80     		strh	r2, [r3]
 215:.\main.c      ****    old = new;
 1224              		.loc 1 215 0
 1225 003c 7B68     		ldr	r3, [r7, #4]
 1226 003e 9AB2     		uxth	r2, r3
 1227 0040 124B     		ldr	r3, .L57
 1228 0042 1A80     		strh	r2, [r3]
 216:.\main.c      ****    //return diff;
 217:.\main.c      ****     if(diff > 1)        //Stigende 
 1229              		.loc 1 217 0
 1230 0044 144B     		ldr	r3, .L57+12
 1231 0046 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 27


 1232 0048 1BB2     		sxth	r3, r3
 1233 004a 012B     		cmp	r3, #1
 1234 004c 06DD     		ble	.L54
 218:.\main.c      ****     {
 219:.\main.c      ****         diff = 10;
 1235              		.loc 1 219 0
 1236 004e 124B     		ldr	r3, .L57+12
 1237 0050 0A22     		mov	r2, #10
 1238 0052 1A80     		strh	r2, [r3]
 220:.\main.c      ****         return diff;
 1239              		.loc 1 220 0
 1240 0054 104B     		ldr	r3, .L57+12
 1241 0056 1B88     		ldrh	r3, [r3]
 1242 0058 1BB2     		sxth	r3, r3
 1243 005a 13E0     		b	.L55
 1244              	.L54:
 221:.\main.c      ****     }
 222:.\main.c      ****     
 223:.\main.c      ****     else if (diff < 1)  //faldene 
 1245              		.loc 1 223 0
 1246 005c 0E4B     		ldr	r3, .L57+12
 1247 005e 1B88     		ldrh	r3, [r3]
 1248 0060 1BB2     		sxth	r3, r3
 1249 0062 002B     		cmp	r3, #0
 1250 0064 07DC     		bgt	.L56
 224:.\main.c      ****     {
 225:.\main.c      ****         diff = -10;
 1251              		.loc 1 225 0
 1252 0066 0C4B     		ldr	r3, .L57+12
 1253 0068 0A22     		mov	r2, #10
 1254 006a 5242     		neg	r2, r2
 1255 006c 1A80     		strh	r2, [r3]
 226:.\main.c      ****         return diff;
 1256              		.loc 1 226 0
 1257 006e 0A4B     		ldr	r3, .L57+12
 1258 0070 1B88     		ldrh	r3, [r3]
 1259 0072 1BB2     		sxth	r3, r3
 1260 0074 06E0     		b	.L55
 1261              	.L56:
 227:.\main.c      ****     }
 228:.\main.c      ****     
 229:.\main.c      ****     else
 230:.\main.c      ****     {
 231:.\main.c      ****         diff=-200;
 1262              		.loc 1 231 0
 1263 0076 084B     		ldr	r3, .L57+12
 1264 0078 C822     		mov	r2, #200
 1265 007a 5242     		neg	r2, r2
 1266 007c 1A80     		strh	r2, [r3]
 232:.\main.c      ****         return diff;
 1267              		.loc 1 232 0
 1268 007e 064B     		ldr	r3, .L57+12
 1269 0080 1B88     		ldrh	r3, [r3]
 1270 0082 1BB2     		sxth	r3, r3
 1271              	.L55:
 233:.\main.c      ****     }
 234:.\main.c      **** }
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 28


 1272              		.loc 1 234 0
 1273 0084 181C     		mov	r0, r3
 1274 0086 BD46     		mov	sp, r7
 1275 0088 03B0     		add	sp, sp, #12
 1276              		@ sp needed
 1277 008a 90BD     		pop	{r4, r7, pc}
 1278              	.L58:
 1279              		.align	2
 1280              	.L57:
 1281 008c 00000000 		.word	old
 1282 0090 7B14AE47 		.word	1202590843
 1283 0094 E17A843F 		.word	1065646817
 1284 0098 00000000 		.word	diff
 1285              		.cfi_endproc
 1286              	.LFE43:
 1287              		.size	differentiator, .-differentiator
 1288              		.section	.text.ADC_interrupt,"ax",%progbits
 1289              		.align	2
 1290              		.global	ADC_interrupt
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	ADC_interrupt, %function
 1294              	ADC_interrupt:
 1295              	.LFB44:
 235:.\main.c      **** 
 236:.\main.c      **** /***********************************ISR***********************************/
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR(ADC_interrupt)
 239:.\main.c      **** {  
 1296              		.loc 1 239 0
 1297              		.cfi_startproc
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 00AF     		add	r7, sp, #0
 1303              		.cfi_def_cfa_register 7
 240:.\main.c      ****     accroed = ADC_GetResult16(0)-1010+7;
 1304              		.loc 1 240 0
 1305 0004 0020     		mov	r0, #0
 1306 0006 FFF7FEFF 		bl	ADC_GetResult16
 1307 000a 031C     		mov	r3, r0
 1308 000c 9BB2     		uxth	r3, r3
 1309 000e 414A     		ldr	r2, .L61
 1310 0010 9446     		mov	ip, r2
 1311 0012 6344     		add	r3, r3, ip
 1312 0014 9BB2     		uxth	r3, r3
 1313 0016 9AB2     		uxth	r2, r3
 1314 0018 3F4B     		ldr	r3, .L61+4
 1315 001a 1A80     		strh	r2, [r3]
 241:.\main.c      ****     accgroen = ADC_GetResult16(1)-1024+52;
 1316              		.loc 1 241 0
 1317 001c 0120     		mov	r0, #1
 1318 001e FFF7FEFF 		bl	ADC_GetResult16
 1319 0022 031C     		mov	r3, r0
 1320 0024 9BB2     		uxth	r3, r3
 1321 0026 3D4A     		ldr	r2, .L61+8
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 29


 1322 0028 9446     		mov	ip, r2
 1323 002a 6344     		add	r3, r3, ip
 1324 002c 9BB2     		uxth	r3, r3
 1325 002e 9AB2     		uxth	r2, r3
 1326 0030 3B4B     		ldr	r3, .L61+12
 1327 0032 1A80     		strh	r2, [r3]
 242:.\main.c      ****     EMG = ADC_GetResult16(2);
 1328              		.loc 1 242 0
 1329 0034 0220     		mov	r0, #2
 1330 0036 FFF7FEFF 		bl	ADC_GetResult16
 1331 003a 031C     		mov	r3, r0
 1332 003c 1A1C     		mov	r2, r3
 1333 003e 394B     		ldr	r3, .L61+16
 1334 0040 1A80     		strh	r2, [r3]
 243:.\main.c      ****     
 244:.\main.c      ****     data_ready = TRUE;
 1335              		.loc 1 244 0
 1336 0042 394B     		ldr	r3, .L61+20
 1337 0044 0122     		mov	r2, #1
 1338 0046 1A70     		strb	r2, [r3]
 245:.\main.c      ****     
 246:.\main.c      ****     /* Databehandling */
 247:.\main.c      ****          
 248:.\main.c      ****     if(data_ready)
 1339              		.loc 1 248 0
 1340 0048 374B     		ldr	r3, .L61+20
 1341 004a 1B78     		ldrb	r3, [r3]
 1342 004c 002B     		cmp	r3, #0
 1343 004e 5ED0     		beq	.L59
 249:.\main.c      ****     {   
 250:.\main.c      ****         /* Accelerometerne*/
 251:.\main.c      ****         StartMeasuring
 1344              		.loc 1 251 0
 1345 0050 0120     		mov	r0, #1
 1346 0052 FFF7FEFF 		bl	Control_Reg_1_Write
 252:.\main.c      ****         mav_data_roed = mavg_filter(accroed);           //Moving average filter til kanal 1
 1347              		.loc 1 252 0
 1348 0056 304B     		ldr	r3, .L61+4
 1349 0058 1B88     		ldrh	r3, [r3]
 1350 005a 1BB2     		sxth	r3, r3
 1351 005c 181C     		mov	r0, r3
 1352 005e FFF7FEFF 		bl	mavg_filter
 1353 0062 031C     		mov	r3, r0
 1354 0064 9AB2     		uxth	r2, r3
 1355 0066 314B     		ldr	r3, .L61+24
 1356 0068 1A80     		strh	r2, [r3]
 253:.\main.c      ****         grader_roed = roed_grader(mav_data_roed);       //Grader tages til det filtrede signal
 1357              		.loc 1 253 0
 1358 006a 304B     		ldr	r3, .L61+24
 1359 006c 1B88     		ldrh	r3, [r3]
 1360 006e 1BB2     		sxth	r3, r3
 1361 0070 181C     		mov	r0, r3
 1362 0072 FFF7FEFF 		bl	roed_grader
 1363 0076 031C     		mov	r3, r0
 1364 0078 9AB2     		uxth	r2, r3
 1365 007a 2D4B     		ldr	r3, .L61+28
 1366 007c 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 30


 254:.\main.c      ****         
 255:.\main.c      ****         mav_data_groen = mavg_filter2(accgroen);        //Moving average filter til kanal 2
 1367              		.loc 1 255 0
 1368 007e 284B     		ldr	r3, .L61+12
 1369 0080 1B88     		ldrh	r3, [r3]
 1370 0082 1BB2     		sxth	r3, r3
 1371 0084 181C     		mov	r0, r3
 1372 0086 FFF7FEFF 		bl	mavg_filter2
 1373 008a 031C     		mov	r3, r0
 1374 008c 9AB2     		uxth	r2, r3
 1375 008e 294B     		ldr	r3, .L61+32
 1376 0090 1A80     		strh	r2, [r3]
 256:.\main.c      ****         grader_groen = groen_grader(mav_data_groen);    //Grader tages til det filtrede signal
 1377              		.loc 1 256 0
 1378 0092 284B     		ldr	r3, .L61+32
 1379 0094 1B88     		ldrh	r3, [r3]
 1380 0096 1BB2     		sxth	r3, r3
 1381 0098 181C     		mov	r0, r3
 1382 009a FFF7FEFF 		bl	groen_grader
 1383 009e 031C     		mov	r3, r0
 1384 00a0 9AB2     		uxth	r2, r3
 1385 00a2 254B     		ldr	r3, .L61+36
 1386 00a4 1A80     		strh	r2, [r3]
 257:.\main.c      **** 
 258:.\main.c      ****         samlet_grader=grader_roed+grader_groen;         //Graderne lægges sammen, således vinklen
 1387              		.loc 1 258 0
 1388 00a6 224B     		ldr	r3, .L61+28
 1389 00a8 1B88     		ldrh	r3, [r3]
 1390 00aa 9AB2     		uxth	r2, r3
 1391 00ac 224B     		ldr	r3, .L61+36
 1392 00ae 1B88     		ldrh	r3, [r3]
 1393 00b0 9BB2     		uxth	r3, r3
 1394 00b2 D318     		add	r3, r2, r3
 1395 00b4 9BB2     		uxth	r3, r3
 1396 00b6 9AB2     		uxth	r2, r3
 1397 00b8 204B     		ldr	r3, .L61+40
 1398 00ba 1A80     		strh	r2, [r3]
 259:.\main.c      ****         StopMeasuring
 1399              		.loc 1 259 0
 1400 00bc 0020     		mov	r0, #0
 1401 00be FFF7FEFF 		bl	Control_Reg_1_Write
 260:.\main.c      ****         
 261:.\main.c      ****         /* EMG */
 262:.\main.c      ****         low_pass_data = low_pass_filter(EMG);        
 1402              		.loc 1 262 0
 1403 00c2 184B     		ldr	r3, .L61+16
 1404 00c4 1B88     		ldrh	r3, [r3]
 1405 00c6 1BB2     		sxth	r3, r3
 1406 00c8 181C     		mov	r0, r3
 1407 00ca FFF7FEFF 		bl	low_pass_filter
 1408 00ce 031C     		mov	r3, r0
 1409 00d0 9AB2     		uxth	r2, r3
 1410 00d2 1B4B     		ldr	r3, .L61+44
 1411 00d4 1A80     		strh	r2, [r3]
 263:.\main.c      ****         diff_data = differentiator(low_pass_data);
 1412              		.loc 1 263 0
 1413 00d6 1A4B     		ldr	r3, .L61+44
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 31


 1414 00d8 1B88     		ldrh	r3, [r3]
 1415 00da 1BB2     		sxth	r3, r3
 1416 00dc 181C     		mov	r0, r3
 1417 00de FFF7FEFF 		bl	differentiator
 1418 00e2 031C     		mov	r3, r0
 1419 00e4 9AB2     		uxth	r2, r3
 1420 00e6 174B     		ldr	r3, .L61+48
 1421 00e8 1A80     		strh	r2, [r3]
 264:.\main.c      ****             
 265:.\main.c      ****         
 266:.\main.c      ****         UART_UartPutChar(samlet_grader);                //plottes tilbage i MATLAB
 1422              		.loc 1 266 0
 1423 00ea 144B     		ldr	r3, .L61+40
 1424 00ec 1B88     		ldrh	r3, [r3]
 1425 00ee 1BB2     		sxth	r3, r3
 1426 00f0 181C     		mov	r0, r3
 1427 00f2 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 267:.\main.c      ****         UART_UartPutChar(samlet_grader>>8);
 1428              		.loc 1 267 0
 1429 00f6 114B     		ldr	r3, .L61+40
 1430 00f8 1B88     		ldrh	r3, [r3]
 1431 00fa 1BB2     		sxth	r3, r3
 1432 00fc 1B12     		asr	r3, r3, #8
 1433 00fe 9BB2     		uxth	r3, r3
 1434 0100 1BB2     		sxth	r3, r3
 1435 0102 181C     		mov	r0, r3
 1436 0104 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 268:.\main.c      ****       
 269:.\main.c      ****        
 270:.\main.c      ****         //UART_UartPutChar(counter);             
 271:.\main.c      ****         //UART_UartPutChar(counter>>8);
 272:.\main.c      ****         
 273:.\main.c      ****         //UART_UartPutChar(diff_data);
 274:.\main.c      ****         //UART_UartPutChar(diff_data>>8);
 275:.\main.c      ****         
 276:.\main.c      ****         data_ready = FALSE;
 1437              		.loc 1 276 0
 1438 0108 074B     		ldr	r3, .L61+20
 1439 010a 0022     		mov	r2, #0
 1440 010c 1A70     		strb	r2, [r3]
 1441              	.L59:
 277:.\main.c      ****     }
 278:.\main.c      **** }
 1442              		.loc 1 278 0
 1443 010e BD46     		mov	sp, r7
 1444              		@ sp needed
 1445 0110 80BD     		pop	{r7, pc}
 1446              	.L62:
 1447 0112 C046     		.align	2
 1448              	.L61:
 1449 0114 15FCFFFF 		.word	-1003
 1450 0118 00000000 		.word	accroed
 1451 011c 34FCFFFF 		.word	-972
 1452 0120 00000000 		.word	accgroen
 1453 0124 00000000 		.word	EMG
 1454 0128 00000000 		.word	data_ready
 1455 012c 00000000 		.word	mav_data_roed
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 32


 1456 0130 00000000 		.word	grader_roed
 1457 0134 00000000 		.word	mav_data_groen
 1458 0138 00000000 		.word	grader_groen
 1459 013c 00000000 		.word	samlet_grader
 1460 0140 00000000 		.word	low_pass_data
 1461 0144 00000000 		.word	diff_data
 1462              		.cfi_endproc
 1463              	.LFE44:
 1464              		.size	ADC_interrupt, .-ADC_interrupt
 1465              		.section	.text.Pin_SW2_handler,"ax",%progbits
 1466              		.align	2
 1467              		.global	Pin_SW2_handler
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	Pin_SW2_handler, %function
 1471              	Pin_SW2_handler:
 1472              	.LFB45:
 279:.\main.c      **** 
 280:.\main.c      **** CY_ISR(Pin_SW2_handler)
 281:.\main.c      **** {
 1473              		.loc 1 281 0
 1474              		.cfi_startproc
 1475 0000 80B5     		push	{r7, lr}
 1476              		.cfi_def_cfa_offset 8
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 282:.\main.c      ****     
 283:.\main.c      ****     if (j==0)
 1481              		.loc 1 283 0
 1482 0004 104B     		ldr	r3, .L66
 1483 0006 1B88     		ldrh	r3, [r3]
 1484 0008 002B     		cmp	r3, #0
 1485 000a 0BD1     		bne	.L64
 284:.\main.c      ****     {
 285:.\main.c      ****         ADC_StartConvert();
 1486              		.loc 1 285 0
 1487 000c FFF7FEFF 		bl	ADC_StartConvert
 286:.\main.c      ****         j++;
 1488              		.loc 1 286 0
 1489 0010 0D4B     		ldr	r3, .L66
 1490 0012 1B88     		ldrh	r3, [r3]
 1491 0014 9BB2     		uxth	r3, r3
 1492 0016 9BB2     		uxth	r3, r3
 1493 0018 0133     		add	r3, r3, #1
 1494 001a 9BB2     		uxth	r3, r3
 1495 001c 9AB2     		uxth	r2, r3
 1496 001e 0A4B     		ldr	r3, .L66
 1497 0020 1A80     		strh	r2, [r3]
 1498 0022 04E0     		b	.L65
 1499              	.L64:
 287:.\main.c      ****     }
 288:.\main.c      ****     
 289:.\main.c      ****     else 
 290:.\main.c      ****     {
 291:.\main.c      ****         ADC_StopConvert();
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 33


 1500              		.loc 1 291 0
 1501 0024 FFF7FEFF 		bl	ADC_StopConvert
 292:.\main.c      ****         j=0;
 1502              		.loc 1 292 0
 1503 0028 074B     		ldr	r3, .L66
 1504 002a 0022     		mov	r2, #0
 1505 002c 1A80     		strh	r2, [r3]
 1506              	.L65:
 293:.\main.c      ****     }
 294:.\main.c      ****     Pin_Green_Write(~ Pin_Green_Read());
 1507              		.loc 1 294 0
 1508 002e FFF7FEFF 		bl	Pin_Green_Read
 1509 0032 031C     		mov	r3, r0
 1510 0034 DB43     		mvn	r3, r3
 1511 0036 DBB2     		uxtb	r3, r3
 1512 0038 181C     		mov	r0, r3
 1513 003a FFF7FEFF 		bl	Pin_Green_Write
 295:.\main.c      ****     Pin_SW2_ClearInterrupt();
 1514              		.loc 1 295 0
 1515 003e FFF7FEFF 		bl	Pin_SW2_ClearInterrupt
 296:.\main.c      **** }
 1516              		.loc 1 296 0
 1517 0042 BD46     		mov	sp, r7
 1518              		@ sp needed
 1519 0044 80BD     		pop	{r7, pc}
 1520              	.L67:
 1521 0046 C046     		.align	2
 1522              	.L66:
 1523 0048 00000000 		.word	j
 1524              		.cfi_endproc
 1525              	.LFE45:
 1526              		.size	Pin_SW2_handler, .-Pin_SW2_handler
 1527              		.section	.text.Timer_interrupt,"ax",%progbits
 1528              		.align	2
 1529              		.global	Timer_interrupt
 1530              		.code	16
 1531              		.thumb_func
 1532              		.type	Timer_interrupt, %function
 1533              	Timer_interrupt:
 1534              	.LFB46:
 297:.\main.c      **** 
 298:.\main.c      **** CY_ISR(Timer_interrupt)
 299:.\main.c      **** {
 1535              		.loc 1 299 0
 1536              		.cfi_startproc
 1537 0000 80B5     		push	{r7, lr}
 1538              		.cfi_def_cfa_offset 8
 1539              		.cfi_offset 7, -8
 1540              		.cfi_offset 14, -4
 1541 0002 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 300:.\main.c      ****     counter=Timer_1_ReadCapture();
 1543              		.loc 1 300 0
 1544 0004 FFF7FEFF 		bl	Timer_1_ReadCapture
 1545 0008 031C     		mov	r3, r0
 1546 000a 9AB2     		uxth	r2, r3
 1547 000c 014B     		ldr	r3, .L69
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 34


 1548 000e 1A80     		strh	r2, [r3]
 301:.\main.c      **** }
 1549              		.loc 1 301 0
 1550 0010 BD46     		mov	sp, r7
 1551              		@ sp needed
 1552 0012 80BD     		pop	{r7, pc}
 1553              	.L70:
 1554              		.align	2
 1555              	.L69:
 1556 0014 00000000 		.word	counter
 1557              		.cfi_endproc
 1558              	.LFE46:
 1559              		.size	Timer_interrupt, .-Timer_interrupt
 1560              		.section	.text.main,"ax",%progbits
 1561              		.align	2
 1562              		.global	main
 1563              		.code	16
 1564              		.thumb_func
 1565              		.type	main, %function
 1566              	main:
 1567              	.LFB47:
 302:.\main.c      **** 
 303:.\main.c      **** /***********************************Main***********************************/
 304:.\main.c      **** int main()
 305:.\main.c      **** {   
 1568              		.loc 1 305 0
 1569              		.cfi_startproc
 1570 0000 80B5     		push	{r7, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 7, -8
 1573              		.cfi_offset 14, -4
 1574 0002 00AF     		add	r7, sp, #0
 1575              		.cfi_def_cfa_register 7
 306:.\main.c      ****     pin_SW2_int_StartEx(Pin_SW2_handler);
 1576              		.loc 1 306 0
 1577 0004 124B     		ldr	r3, .L73
 1578 0006 181C     		mov	r0, r3
 1579 0008 FFF7FEFF 		bl	pin_SW2_int_StartEx
 307:.\main.c      ****     ADC_ISR_StartEx(ADC_interrupt);
 1580              		.loc 1 307 0
 1581 000c 114B     		ldr	r3, .L73+4
 1582 000e 181C     		mov	r0, r3
 1583 0010 FFF7FEFF 		bl	ADC_ISR_StartEx
 308:.\main.c      ****     Timer_ISR_StartEx(Timer_interrupt);
 1584              		.loc 1 308 0
 1585 0014 104B     		ldr	r3, .L73+8
 1586 0016 181C     		mov	r0, r3
 1587 0018 FFF7FEFF 		bl	Timer_ISR_StartEx
 309:.\main.c      ****     CyGlobalIntEnable;
 1588              		.loc 1 309 0
 1589              	@ 309 ".\main.c" 1
 1590 001c 62B6     		CPSIE   i
 1591              	@ 0 "" 2
 310:.\main.c      ****     UART_Start();                       /* Initialize ADC */    
 1592              		.loc 1 310 0
 1593              		.code	16
 1594 001e FFF7FEFF 		bl	UART_Start
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 35


 311:.\main.c      ****     ADC_Start();                        /* Initialize ADC */
 1595              		.loc 1 311 0
 1596 0022 FFF7FEFF 		bl	ADC_Start
 312:.\main.c      ****     Timer_1_Start();
 1597              		.loc 1 312 0
 1598 0026 FFF7FEFF 		bl	Timer_1_Start
 313:.\main.c      ****     Timer_ISR_Enable();
 1599              		.loc 1 313 0
 1600 002a FFF7FEFF 		bl	Timer_ISR_Enable
 314:.\main.c      ****     ADC_IRQ_Enable();                   /* Enable ADC interrupts */   
 1601              		.loc 1 314 0
 1602 002e FFF7FEFF 		bl	ADC_IRQ_Enable
 315:.\main.c      ****     UART_UartPutChar('A');
 1603              		.loc 1 315 0
 1604 0032 4120     		mov	r0, #65
 1605 0034 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 316:.\main.c      ****     UART_UartPutChar('B');
 1606              		.loc 1 316 0
 1607 0038 4220     		mov	r0, #66
 1608 003a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 317:.\main.c      ****     UART_UartPutChar('C');
 1609              		.loc 1 317 0
 1610 003e 4320     		mov	r0, #67
 1611 0040 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 318:.\main.c      ****     CySysPmSleep();
 1612              		.loc 1 318 0
 1613 0044 FFF7FEFF 		bl	CySysPmSleep
 319:.\main.c      ****     return 0;
 1614              		.loc 1 319 0
 1615 0048 0023     		mov	r3, #0
 320:.\main.c      ****    
 321:.\main.c      **** }...
 1616              		.loc 1 321 0
 1617 004a 181C     		mov	r0, r3
 1618 004c BD46     		mov	sp, r7
 1619              		@ sp needed
 1620 004e 80BD     		pop	{r7, pc}
 1621              	.L74:
 1622              		.align	2
 1623              	.L73:
 1624 0050 00000000 		.word	Pin_SW2_handler
 1625 0054 00000000 		.word	ADC_interrupt
 1626 0058 00000000 		.word	Timer_interrupt
 1627              		.cfi_endproc
 1628              	.LFE47:
 1629              		.size	main, .-main
 1630              		.text
 1631              	.Letext0:
 1632              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1633              		.section	.debug_info,"",%progbits
 1634              	.Ldebug_info0:
 1635 0000 6F040000 		.4byte	0x46f
 1636 0004 0400     		.2byte	0x4
 1637 0006 00000000 		.4byte	.Ldebug_abbrev0
 1638 000a 04       		.byte	0x4
 1639 000b 01       		.uleb128 0x1
 1640 000c 6C020000 		.4byte	.LASF55
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 36


 1641 0010 01       		.byte	0x1
 1642 0011 66000000 		.4byte	.LASF56
 1643 0015 0D020000 		.4byte	.LASF57
 1644 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1645 001d 00000000 		.4byte	0
 1646 0021 00000000 		.4byte	.Ldebug_line0
 1647 0025 02       		.uleb128 0x2
 1648 0026 01       		.byte	0x1
 1649 0027 06       		.byte	0x6
 1650 0028 5A000000 		.4byte	.LASF0
 1651 002c 02       		.uleb128 0x2
 1652 002d 01       		.byte	0x1
 1653 002e 08       		.byte	0x8
 1654 002f 6F010000 		.4byte	.LASF1
 1655 0033 02       		.uleb128 0x2
 1656 0034 02       		.byte	0x2
 1657 0035 05       		.byte	0x5
 1658 0036 93010000 		.4byte	.LASF2
 1659 003a 02       		.uleb128 0x2
 1660 003b 02       		.byte	0x2
 1661 003c 07       		.byte	0x7
 1662 003d E1000000 		.4byte	.LASF3
 1663 0041 02       		.uleb128 0x2
 1664 0042 04       		.byte	0x4
 1665 0043 05       		.byte	0x5
 1666 0044 6F000000 		.4byte	.LASF4
 1667 0048 02       		.uleb128 0x2
 1668 0049 04       		.byte	0x4
 1669 004a 07       		.byte	0x7
 1670 004b BD000000 		.4byte	.LASF5
 1671 004f 02       		.uleb128 0x2
 1672 0050 08       		.byte	0x8
 1673 0051 05       		.byte	0x5
 1674 0052 4C000000 		.4byte	.LASF6
 1675 0056 02       		.uleb128 0x2
 1676 0057 08       		.byte	0x8
 1677 0058 07       		.byte	0x7
 1678 0059 29000000 		.4byte	.LASF7
 1679 005d 03       		.uleb128 0x3
 1680 005e 04       		.byte	0x4
 1681 005f 05       		.byte	0x5
 1682 0060 696E7400 		.ascii	"int\000"
 1683 0064 02       		.uleb128 0x2
 1684 0065 04       		.byte	0x4
 1685 0066 07       		.byte	0x7
 1686 0067 B0000000 		.4byte	.LASF8
 1687 006b 04       		.uleb128 0x4
 1688 006c 78000000 		.4byte	.LASF9
 1689 0070 02       		.byte	0x2
 1690 0071 3801     		.2byte	0x138
 1691 0073 2C000000 		.4byte	0x2c
 1692 0077 04       		.uleb128 0x4
 1693 0078 96000000 		.4byte	.LASF10
 1694 007c 02       		.byte	0x2
 1695 007d 3A01     		.2byte	0x13a
 1696 007f 48000000 		.4byte	0x48
 1697 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 37


 1698 0084 58020000 		.4byte	.LASF11
 1699 0088 02       		.byte	0x2
 1700 0089 3C01     		.2byte	0x13c
 1701 008b 33000000 		.4byte	0x33
 1702 008f 02       		.uleb128 0x2
 1703 0090 04       		.byte	0x4
 1704 0091 04       		.byte	0x4
 1705 0092 5F010000 		.4byte	.LASF12
 1706 0096 02       		.uleb128 0x2
 1707 0097 08       		.byte	0x8
 1708 0098 04       		.byte	0x4
 1709 0099 8F000000 		.4byte	.LASF13
 1710 009d 02       		.uleb128 0x2
 1711 009e 01       		.byte	0x1
 1712 009f 08       		.byte	0x8
 1713 00a0 D2010000 		.4byte	.LASF14
 1714 00a4 02       		.uleb128 0x2
 1715 00a5 04       		.byte	0x4
 1716 00a6 07       		.byte	0x7
 1717 00a7 0D010000 		.4byte	.LASF15
 1718 00ab 05       		.uleb128 0x5
 1719 00ac D7010000 		.4byte	.LASF16
 1720 00b0 01       		.byte	0x1
 1721 00b1 33       		.byte	0x33
 1722 00b2 5D000000 		.4byte	0x5d
 1723 00b6 00000000 		.4byte	.LFB37
 1724 00ba 5C000000 		.4byte	.LFE37-.LFB37
 1725 00be 01       		.uleb128 0x1
 1726 00bf 9C       		.byte	0x9c
 1727 00c0 D1000000 		.4byte	0xd1
 1728 00c4 06       		.uleb128 0x6
 1729 00c5 7900     		.ascii	"y\000"
 1730 00c7 01       		.byte	0x1
 1731 00c8 33       		.byte	0x33
 1732 00c9 96000000 		.4byte	0x96
 1733 00cd 02       		.uleb128 0x2
 1734 00ce 91       		.byte	0x91
 1735 00cf 68       		.sleb128 -24
 1736 00d0 00       		.byte	0
 1737 00d1 05       		.uleb128 0x5
 1738 00d2 01020000 		.4byte	.LASF17
 1739 00d6 01       		.byte	0x1
 1740 00d7 3C       		.byte	0x3c
 1741 00d8 5D000000 		.4byte	0x5d
 1742 00dc 00000000 		.4byte	.LFB38
 1743 00e0 04010000 		.4byte	.LFE38-.LFB38
 1744 00e4 01       		.uleb128 0x1
 1745 00e5 9C       		.byte	0x9c
 1746 00e6 F9000000 		.4byte	0xf9
 1747 00ea 07       		.uleb128 0x7
 1748 00eb CF000000 		.4byte	.LASF18
 1749 00ef 01       		.byte	0x1
 1750 00f0 3C       		.byte	0x3c
 1751 00f1 5D000000 		.4byte	0x5d
 1752 00f5 02       		.uleb128 0x2
 1753 00f6 91       		.byte	0x91
 1754 00f7 6C       		.sleb128 -20
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 38


 1755 00f8 00       		.byte	0
 1756 00f9 05       		.uleb128 0x5
 1757 00fa D4000000 		.4byte	.LASF19
 1758 00fe 01       		.byte	0x1
 1759 00ff 50       		.byte	0x50
 1760 0100 5D000000 		.4byte	0x5d
 1761 0104 00000000 		.4byte	.LFB39
 1762 0108 0C010000 		.4byte	.LFE39-.LFB39
 1763 010c 01       		.uleb128 0x1
 1764 010d 9C       		.byte	0x9c
 1765 010e 21010000 		.4byte	0x121
 1766 0112 07       		.uleb128 0x7
 1767 0113 CF000000 		.4byte	.LASF18
 1768 0117 01       		.byte	0x1
 1769 0118 50       		.byte	0x50
 1770 0119 5D000000 		.4byte	0x5d
 1771 011d 02       		.uleb128 0x2
 1772 011e 91       		.byte	0x91
 1773 011f 6C       		.sleb128 -20
 1774 0120 00       		.byte	0
 1775 0121 05       		.uleb128 0x5
 1776 0122 B2010000 		.4byte	.LASF20
 1777 0126 01       		.byte	0x1
 1778 0127 64       		.byte	0x64
 1779 0128 5D000000 		.4byte	0x5d
 1780 012c 00000000 		.4byte	.LFB40
 1781 0130 24010000 		.4byte	.LFE40-.LFB40
 1782 0134 01       		.uleb128 0x1
 1783 0135 9C       		.byte	0x9c
 1784 0136 55010000 		.4byte	0x155
 1785 013a 07       		.uleb128 0x7
 1786 013b CF000000 		.4byte	.LASF18
 1787 013f 01       		.byte	0x1
 1788 0140 64       		.byte	0x64
 1789 0141 5D000000 		.4byte	0x5d
 1790 0145 02       		.uleb128 0x2
 1791 0146 91       		.byte	0x91
 1792 0147 64       		.sleb128 -28
 1793 0148 08       		.uleb128 0x8
 1794 0149 6900     		.ascii	"i\000"
 1795 014b 01       		.byte	0x1
 1796 014c 66       		.byte	0x66
 1797 014d 5D000000 		.4byte	0x5d
 1798 0151 02       		.uleb128 0x2
 1799 0152 91       		.byte	0x91
 1800 0153 6C       		.sleb128 -20
 1801 0154 00       		.byte	0
 1802 0155 05       		.uleb128 0x5
 1803 0156 F4000000 		.4byte	.LASF21
 1804 015a 01       		.byte	0x1
 1805 015b 80       		.byte	0x80
 1806 015c 5D000000 		.4byte	0x5d
 1807 0160 00000000 		.4byte	.LFB41
 1808 0164 1C010000 		.4byte	.LFE41-.LFB41
 1809 0168 01       		.uleb128 0x1
 1810 0169 9C       		.byte	0x9c
 1811 016a 7D010000 		.4byte	0x17d
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 39


 1812 016e 07       		.uleb128 0x7
 1813 016f CF000000 		.4byte	.LASF18
 1814 0173 01       		.byte	0x1
 1815 0174 80       		.byte	0x80
 1816 0175 5D000000 		.4byte	0x5d
 1817 0179 02       		.uleb128 0x2
 1818 017a 91       		.byte	0x91
 1819 017b 74       		.sleb128 -12
 1820 017c 00       		.byte	0
 1821 017d 05       		.uleb128 0x5
 1822 017e A5010000 		.4byte	.LASF22
 1823 0182 01       		.byte	0x1
 1824 0183 A9       		.byte	0xa9
 1825 0184 5D000000 		.4byte	0x5d
 1826 0188 00000000 		.4byte	.LFB42
 1827 018c 1A010000 		.4byte	.LFE42-.LFB42
 1828 0190 01       		.uleb128 0x1
 1829 0191 9C       		.byte	0x9c
 1830 0192 A5010000 		.4byte	0x1a5
 1831 0196 07       		.uleb128 0x7
 1832 0197 CF000000 		.4byte	.LASF18
 1833 019b 01       		.byte	0x1
 1834 019c A9       		.byte	0xa9
 1835 019d 5D000000 		.4byte	0x5d
 1836 01a1 02       		.uleb128 0x2
 1837 01a2 91       		.byte	0x91
 1838 01a3 74       		.sleb128 -12
 1839 01a4 00       		.byte	0
 1840 01a5 05       		.uleb128 0x5
 1841 01a6 FA020000 		.4byte	.LASF23
 1842 01aa 01       		.byte	0x1
 1843 01ab D4       		.byte	0xd4
 1844 01ac 5D000000 		.4byte	0x5d
 1845 01b0 00000000 		.4byte	.LFB43
 1846 01b4 9C000000 		.4byte	.LFE43-.LFB43
 1847 01b8 01       		.uleb128 0x1
 1848 01b9 9C       		.byte	0x9c
 1849 01ba CD010000 		.4byte	0x1cd
 1850 01be 06       		.uleb128 0x6
 1851 01bf 6E657700 		.ascii	"new\000"
 1852 01c3 01       		.byte	0x1
 1853 01c4 D4       		.byte	0xd4
 1854 01c5 5D000000 		.4byte	0x5d
 1855 01c9 02       		.uleb128 0x2
 1856 01ca 91       		.byte	0x91
 1857 01cb 6C       		.sleb128 -20
 1858 01cc 00       		.byte	0
 1859 01cd 09       		.uleb128 0x9
 1860 01ce 38010000 		.4byte	.LASF24
 1861 01d2 01       		.byte	0x1
 1862 01d3 EE       		.byte	0xee
 1863 01d4 00000000 		.4byte	.LFB44
 1864 01d8 48010000 		.4byte	.LFE44-.LFB44
 1865 01dc 01       		.uleb128 0x1
 1866 01dd 9C       		.byte	0x9c
 1867 01de 0A       		.uleb128 0xa
 1868 01df C2010000 		.4byte	.LASF25
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 40


 1869 01e3 01       		.byte	0x1
 1870 01e4 1801     		.2byte	0x118
 1871 01e6 00000000 		.4byte	.LFB45
 1872 01ea 4C000000 		.4byte	.LFE45-.LFB45
 1873 01ee 01       		.uleb128 0x1
 1874 01ef 9C       		.byte	0x9c
 1875 01f0 0A       		.uleb128 0xa
 1876 01f1 7D010000 		.4byte	.LASF26
 1877 01f5 01       		.byte	0x1
 1878 01f6 2A01     		.2byte	0x12a
 1879 01f8 00000000 		.4byte	.LFB46
 1880 01fc 18000000 		.4byte	.LFE46-.LFB46
 1881 0200 01       		.uleb128 0x1
 1882 0201 9C       		.byte	0x9c
 1883 0202 0B       		.uleb128 0xb
 1884 0203 09030000 		.4byte	.LASF27
 1885 0207 01       		.byte	0x1
 1886 0208 3001     		.2byte	0x130
 1887 020a 5D000000 		.4byte	0x5d
 1888 020e 00000000 		.4byte	.LFB47
 1889 0212 5C000000 		.4byte	.LFE47-.LFB47
 1890 0216 01       		.uleb128 0x1
 1891 0217 9C       		.byte	0x9c
 1892 0218 0C       		.uleb128 0xc
 1893 0219 96000000 		.4byte	0x96
 1894 021d 28020000 		.4byte	0x228
 1895 0221 0D       		.uleb128 0xd
 1896 0222 A4000000 		.4byte	0xa4
 1897 0226 09       		.byte	0x9
 1898 0227 00       		.byte	0
 1899 0228 0E       		.uleb128 0xe
 1900 0229 45000000 		.4byte	.LASF28
 1901 022d 01       		.byte	0x1
 1902 022e 0D       		.byte	0xd
 1903 022f 18020000 		.4byte	0x218
 1904 0233 05       		.uleb128 0x5
 1905 0234 03       		.byte	0x3
 1906 0235 00000000 		.4byte	x_mavg
 1907 0239 0E       		.uleb128 0xe
 1908 023a 88000000 		.4byte	.LASF29
 1909 023e 01       		.byte	0x1
 1910 023f 0E       		.byte	0xe
 1911 0240 96000000 		.4byte	0x96
 1912 0244 05       		.uleb128 0x5
 1913 0245 03       		.byte	0x3
 1914 0246 00000000 		.4byte	y_mavg
 1915 024a 0E       		.uleb128 0xe
 1916 024b A9000000 		.4byte	.LASF30
 1917 024f 01       		.byte	0x1
 1918 0250 0F       		.byte	0xf
 1919 0251 18020000 		.4byte	0x218
 1920 0255 05       		.uleb128 0x5
 1921 0256 03       		.byte	0x3
 1922 0257 00000000 		.4byte	b_mavg
 1923 025b 0E       		.uleb128 0xe
 1924 025c 30010000 		.4byte	.LASF31
 1925 0260 01       		.byte	0x1
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 41


 1926 0261 14       		.byte	0x14
 1927 0262 18020000 		.4byte	0x218
 1928 0266 05       		.uleb128 0x5
 1929 0267 03       		.byte	0x3
 1930 0268 00000000 		.4byte	x2_mavg
 1931 026c 0E       		.uleb128 0xe
 1932 026d 10000000 		.4byte	.LASF32
 1933 0271 01       		.byte	0x1
 1934 0272 15       		.byte	0x15
 1935 0273 96000000 		.4byte	0x96
 1936 0277 05       		.uleb128 0x5
 1937 0278 03       		.byte	0x3
 1938 0279 00000000 		.4byte	y2_mavg
 1939 027d 0E       		.uleb128 0xe
 1940 027e 43020000 		.4byte	.LASF33
 1941 0282 01       		.byte	0x1
 1942 0283 16       		.byte	0x16
 1943 0284 18020000 		.4byte	0x218
 1944 0288 05       		.uleb128 0x5
 1945 0289 03       		.byte	0x3
 1946 028a 00000000 		.4byte	b2_mavg
 1947 028e 0C       		.uleb128 0xc
 1948 028f 96000000 		.4byte	0x96
 1949 0293 9E020000 		.4byte	0x29e
 1950 0297 0D       		.uleb128 0xd
 1951 0298 A4000000 		.4byte	0xa4
 1952 029c 02       		.byte	0x2
 1953 029d 00       		.byte	0
 1954 029e 0E       		.uleb128 0xe
 1955 029f 0A000000 		.4byte	.LASF34
 1956 02a3 01       		.byte	0x1
 1957 02a4 1A       		.byte	0x1a
 1958 02a5 8E020000 		.4byte	0x28e
 1959 02a9 05       		.uleb128 0x5
 1960 02aa 03       		.byte	0x3
 1961 02ab 00000000 		.4byte	x_low
 1962 02af 0E       		.uleb128 0xe
 1963 02b0 8D010000 		.4byte	.LASF35
 1964 02b4 01       		.byte	0x1
 1965 02b5 1B       		.byte	0x1b
 1966 02b6 8E020000 		.4byte	0x28e
 1967 02ba 05       		.uleb128 0x5
 1968 02bb 03       		.byte	0x3
 1969 02bc 00000000 		.4byte	y_low
 1970 02c0 0E       		.uleb128 0xe
 1971 02c1 A3000000 		.4byte	.LASF36
 1972 02c5 01       		.byte	0x1
 1973 02c6 1C       		.byte	0x1c
 1974 02c7 8E020000 		.4byte	0x28e
 1975 02cb 05       		.uleb128 0x5
 1976 02cc 03       		.byte	0x3
 1977 02cd 00000000 		.4byte	b_low
 1978 02d1 0E       		.uleb128 0xe
 1979 02d2 9D000000 		.4byte	.LASF37
 1980 02d6 01       		.byte	0x1
 1981 02d7 1D       		.byte	0x1d
 1982 02d8 8E020000 		.4byte	0x28e
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 42


 1983 02dc 05       		.uleb128 0x5
 1984 02dd 03       		.byte	0x3
 1985 02de 00000000 		.4byte	a_low
 1986 02e2 0E       		.uleb128 0xe
 1987 02e3 00010000 		.4byte	.LASF38
 1988 02e7 01       		.byte	0x1
 1989 02e8 1F       		.byte	0x1f
 1990 02e9 9D000000 		.4byte	0x9d
 1991 02ed 05       		.uleb128 0x5
 1992 02ee 03       		.byte	0x3
 1993 02ef 00000000 		.4byte	current_byte
 1994 02f3 0E       		.uleb128 0xe
 1995 02f4 18000000 		.4byte	.LASF39
 1996 02f8 01       		.byte	0x1
 1997 02f9 20       		.byte	0x20
 1998 02fa 83000000 		.4byte	0x83
 1999 02fe 05       		.uleb128 0x5
 2000 02ff 03       		.byte	0x3
 2001 0300 00000000 		.4byte	value_in
 2002 0304 0C       		.uleb128 0xc
 2003 0305 83000000 		.4byte	0x83
 2004 0309 14030000 		.4byte	0x314
 2005 030d 0D       		.uleb128 0xd
 2006 030e A4000000 		.4byte	0xa4
 2007 0312 01       		.byte	0x1
 2008 0313 00       		.byte	0
 2009 0314 0E       		.uleb128 0xe
 2010 0315 7E000000 		.4byte	.LASF40
 2011 0319 01       		.byte	0x1
 2012 031a 20       		.byte	0x20
 2013 031b 04030000 		.4byte	0x304
 2014 031f 05       		.uleb128 0x5
 2015 0320 03       		.byte	0x3
 2016 0321 00000000 		.4byte	value_out
 2017 0325 0F       		.uleb128 0xf
 2018 0326 6900     		.ascii	"i\000"
 2019 0328 01       		.byte	0x1
 2020 0329 20       		.byte	0x20
 2021 032a 83000000 		.4byte	0x83
 2022 032e 05       		.uleb128 0x5
 2023 032f 03       		.byte	0x3
 2024 0330 00000000 		.4byte	i
 2025 0334 0F       		.uleb128 0xf
 2026 0335 6A00     		.ascii	"j\000"
 2027 0337 01       		.byte	0x1
 2028 0338 20       		.byte	0x20
 2029 0339 83000000 		.4byte	0x83
 2030 033d 05       		.uleb128 0x5
 2031 033e 03       		.byte	0x3
 2032 033f 00000000 		.4byte	j
 2033 0343 0F       		.uleb128 0xf
 2034 0344 6B00     		.ascii	"k\000"
 2035 0346 01       		.byte	0x1
 2036 0347 20       		.byte	0x20
 2037 0348 83000000 		.4byte	0x83
 2038 034c 05       		.uleb128 0x5
 2039 034d 03       		.byte	0x3
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 43


 2040 034e 00000000 		.4byte	k
 2041 0352 0E       		.uleb128 0xe
 2042 0353 4B020000 		.4byte	.LASF41
 2043 0357 01       		.byte	0x1
 2044 0358 20       		.byte	0x20
 2045 0359 83000000 		.4byte	0x83
 2046 035d 05       		.uleb128 0x5
 2047 035e 03       		.byte	0x3
 2048 035f 00000000 		.4byte	grader_groen
 2049 0363 0E       		.uleb128 0xe
 2050 0364 24010000 		.4byte	.LASF42
 2051 0368 01       		.byte	0x1
 2052 0369 20       		.byte	0x20
 2053 036a 83000000 		.4byte	0x83
 2054 036e 05       		.uleb128 0x5
 2055 036f 03       		.byte	0x3
 2056 0370 00000000 		.4byte	grader_roed
 2057 0374 0E       		.uleb128 0xe
 2058 0375 40000000 		.4byte	.LASF43
 2059 0379 01       		.byte	0x1
 2060 037a 20       		.byte	0x20
 2061 037b 83000000 		.4byte	0x83
 2062 037f 05       		.uleb128 0x5
 2063 0380 03       		.byte	0x3
 2064 0381 00000000 		.4byte	diff
 2065 0385 0F       		.uleb128 0xf
 2066 0386 6F6C6400 		.ascii	"old\000"
 2067 038a 01       		.byte	0x1
 2068 038b 20       		.byte	0x20
 2069 038c 83000000 		.4byte	0x83
 2070 0390 05       		.uleb128 0x5
 2071 0391 03       		.byte	0x3
 2072 0392 00000000 		.4byte	old
 2073 0396 0E       		.uleb128 0xe
 2074 0397 9D010000 		.4byte	.LASF44
 2075 039b 01       		.byte	0x1
 2076 039c 20       		.byte	0x20
 2077 039d 83000000 		.4byte	0x83
 2078 03a1 05       		.uleb128 0x5
 2079 03a2 03       		.byte	0x3
 2080 03a3 00000000 		.4byte	counter
 2081 03a7 0E       		.uleb128 0xe
 2082 03a8 65010000 		.4byte	.LASF45
 2083 03ac 01       		.byte	0x1
 2084 03ad 21       		.byte	0x21
 2085 03ae 9D000000 		.4byte	0x9d
 2086 03b2 05       		.uleb128 0x5
 2087 03b3 03       		.byte	0x3
 2088 03b4 00000000 		.4byte	FirstCall
 2089 03b8 0E       		.uleb128 0xe
 2090 03b9 21000000 		.4byte	.LASF46
 2091 03bd 01       		.byte	0x1
 2092 03be 23       		.byte	0x23
 2093 03bf 83000000 		.4byte	0x83
 2094 03c3 05       		.uleb128 0x5
 2095 03c4 03       		.byte	0x3
 2096 03c5 00000000 		.4byte	accroed
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 44


 2097 03c9 0E       		.uleb128 0xe
 2098 03ca F8010000 		.4byte	.LASF47
 2099 03ce 01       		.byte	0x1
 2100 03cf 24       		.byte	0x24
 2101 03d0 83000000 		.4byte	0x83
 2102 03d4 05       		.uleb128 0x5
 2103 03d5 03       		.byte	0x3
 2104 03d6 00000000 		.4byte	accgroen
 2105 03da 0F       		.uleb128 0xf
 2106 03db 454D4700 		.ascii	"EMG\000"
 2107 03df 01       		.byte	0x1
 2108 03e0 25       		.byte	0x25
 2109 03e1 83000000 		.4byte	0x83
 2110 03e5 05       		.uleb128 0x5
 2111 03e6 03       		.byte	0x3
 2112 03e7 00000000 		.4byte	EMG
 2113 03eb 0C       		.uleb128 0xc
 2114 03ec 83000000 		.4byte	0x83
 2115 03f0 FB030000 		.4byte	0x3fb
 2116 03f4 0D       		.uleb128 0xd
 2117 03f5 A4000000 		.4byte	0xa4
 2118 03f9 02       		.byte	0x2
 2119 03fa 00       		.byte	0
 2120 03fb 0E       		.uleb128 0xe
 2121 03fc 0E030000 		.4byte	.LASF48
 2122 0400 01       		.byte	0x1
 2123 0401 26       		.byte	0x26
 2124 0402 EB030000 		.4byte	0x3eb
 2125 0406 05       		.uleb128 0x5
 2126 0407 03       		.byte	0x3
 2127 0408 00000000 		.4byte	result
 2128 040c 0E       		.uleb128 0xe
 2129 040d 54010000 		.4byte	.LASF49
 2130 0411 01       		.byte	0x1
 2131 0412 27       		.byte	0x27
 2132 0413 6B000000 		.4byte	0x6b
 2133 0417 05       		.uleb128 0x5
 2134 0418 03       		.byte	0x3
 2135 0419 00000000 		.4byte	data_ready
 2136 041d 0E       		.uleb128 0xe
 2137 041e 46010000 		.4byte	.LASF50
 2138 0422 01       		.byte	0x1
 2139 0423 29       		.byte	0x29
 2140 0424 83000000 		.4byte	0x83
 2141 0428 05       		.uleb128 0x5
 2142 0429 03       		.byte	0x3
 2143 042a 00000000 		.4byte	mav_data_roed
 2144 042e 0E       		.uleb128 0xe
 2145 042f E9010000 		.4byte	.LASF51
 2146 0433 01       		.byte	0x1
 2147 0434 2A       		.byte	0x2a
 2148 0435 83000000 		.4byte	0x83
 2149 0439 05       		.uleb128 0x5
 2150 043a 03       		.byte	0x3
 2151 043b 00000000 		.4byte	mav_data_groen
 2152 043f 0E       		.uleb128 0xe
 2153 0440 16010000 		.4byte	.LASF52
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 45


 2154 0444 01       		.byte	0x1
 2155 0445 2B       		.byte	0x2b
 2156 0446 83000000 		.4byte	0x83
 2157 044a 05       		.uleb128 0x5
 2158 044b 03       		.byte	0x3
 2159 044c 00000000 		.4byte	samlet_grader
 2160 0450 0E       		.uleb128 0xe
 2161 0451 5E020000 		.4byte	.LASF53
 2162 0455 01       		.byte	0x1
 2163 0456 2C       		.byte	0x2c
 2164 0457 83000000 		.4byte	0x83
 2165 045b 05       		.uleb128 0x5
 2166 045c 03       		.byte	0x3
 2167 045d 00000000 		.4byte	low_pass_data
 2168 0461 0E       		.uleb128 0xe
 2169 0462 00000000 		.4byte	.LASF54
 2170 0466 01       		.byte	0x1
 2171 0467 2D       		.byte	0x2d
 2172 0468 83000000 		.4byte	0x83
 2173 046c 05       		.uleb128 0x5
 2174 046d 03       		.byte	0x3
 2175 046e 00000000 		.4byte	diff_data
 2176 0472 00       		.byte	0
 2177              		.section	.debug_abbrev,"",%progbits
 2178              	.Ldebug_abbrev0:
 2179 0000 01       		.uleb128 0x1
 2180 0001 11       		.uleb128 0x11
 2181 0002 01       		.byte	0x1
 2182 0003 25       		.uleb128 0x25
 2183 0004 0E       		.uleb128 0xe
 2184 0005 13       		.uleb128 0x13
 2185 0006 0B       		.uleb128 0xb
 2186 0007 03       		.uleb128 0x3
 2187 0008 0E       		.uleb128 0xe
 2188 0009 1B       		.uleb128 0x1b
 2189 000a 0E       		.uleb128 0xe
 2190 000b 55       		.uleb128 0x55
 2191 000c 17       		.uleb128 0x17
 2192 000d 11       		.uleb128 0x11
 2193 000e 01       		.uleb128 0x1
 2194 000f 10       		.uleb128 0x10
 2195 0010 17       		.uleb128 0x17
 2196 0011 00       		.byte	0
 2197 0012 00       		.byte	0
 2198 0013 02       		.uleb128 0x2
 2199 0014 24       		.uleb128 0x24
 2200 0015 00       		.byte	0
 2201 0016 0B       		.uleb128 0xb
 2202 0017 0B       		.uleb128 0xb
 2203 0018 3E       		.uleb128 0x3e
 2204 0019 0B       		.uleb128 0xb
 2205 001a 03       		.uleb128 0x3
 2206 001b 0E       		.uleb128 0xe
 2207 001c 00       		.byte	0
 2208 001d 00       		.byte	0
 2209 001e 03       		.uleb128 0x3
 2210 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 46


 2211 0020 00       		.byte	0
 2212 0021 0B       		.uleb128 0xb
 2213 0022 0B       		.uleb128 0xb
 2214 0023 3E       		.uleb128 0x3e
 2215 0024 0B       		.uleb128 0xb
 2216 0025 03       		.uleb128 0x3
 2217 0026 08       		.uleb128 0x8
 2218 0027 00       		.byte	0
 2219 0028 00       		.byte	0
 2220 0029 04       		.uleb128 0x4
 2221 002a 16       		.uleb128 0x16
 2222 002b 00       		.byte	0
 2223 002c 03       		.uleb128 0x3
 2224 002d 0E       		.uleb128 0xe
 2225 002e 3A       		.uleb128 0x3a
 2226 002f 0B       		.uleb128 0xb
 2227 0030 3B       		.uleb128 0x3b
 2228 0031 05       		.uleb128 0x5
 2229 0032 49       		.uleb128 0x49
 2230 0033 13       		.uleb128 0x13
 2231 0034 00       		.byte	0
 2232 0035 00       		.byte	0
 2233 0036 05       		.uleb128 0x5
 2234 0037 2E       		.uleb128 0x2e
 2235 0038 01       		.byte	0x1
 2236 0039 3F       		.uleb128 0x3f
 2237 003a 19       		.uleb128 0x19
 2238 003b 03       		.uleb128 0x3
 2239 003c 0E       		.uleb128 0xe
 2240 003d 3A       		.uleb128 0x3a
 2241 003e 0B       		.uleb128 0xb
 2242 003f 3B       		.uleb128 0x3b
 2243 0040 0B       		.uleb128 0xb
 2244 0041 27       		.uleb128 0x27
 2245 0042 19       		.uleb128 0x19
 2246 0043 49       		.uleb128 0x49
 2247 0044 13       		.uleb128 0x13
 2248 0045 11       		.uleb128 0x11
 2249 0046 01       		.uleb128 0x1
 2250 0047 12       		.uleb128 0x12
 2251 0048 06       		.uleb128 0x6
 2252 0049 40       		.uleb128 0x40
 2253 004a 18       		.uleb128 0x18
 2254 004b 9642     		.uleb128 0x2116
 2255 004d 19       		.uleb128 0x19
 2256 004e 01       		.uleb128 0x1
 2257 004f 13       		.uleb128 0x13
 2258 0050 00       		.byte	0
 2259 0051 00       		.byte	0
 2260 0052 06       		.uleb128 0x6
 2261 0053 05       		.uleb128 0x5
 2262 0054 00       		.byte	0
 2263 0055 03       		.uleb128 0x3
 2264 0056 08       		.uleb128 0x8
 2265 0057 3A       		.uleb128 0x3a
 2266 0058 0B       		.uleb128 0xb
 2267 0059 3B       		.uleb128 0x3b
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 47


 2268 005a 0B       		.uleb128 0xb
 2269 005b 49       		.uleb128 0x49
 2270 005c 13       		.uleb128 0x13
 2271 005d 02       		.uleb128 0x2
 2272 005e 18       		.uleb128 0x18
 2273 005f 00       		.byte	0
 2274 0060 00       		.byte	0
 2275 0061 07       		.uleb128 0x7
 2276 0062 05       		.uleb128 0x5
 2277 0063 00       		.byte	0
 2278 0064 03       		.uleb128 0x3
 2279 0065 0E       		.uleb128 0xe
 2280 0066 3A       		.uleb128 0x3a
 2281 0067 0B       		.uleb128 0xb
 2282 0068 3B       		.uleb128 0x3b
 2283 0069 0B       		.uleb128 0xb
 2284 006a 49       		.uleb128 0x49
 2285 006b 13       		.uleb128 0x13
 2286 006c 02       		.uleb128 0x2
 2287 006d 18       		.uleb128 0x18
 2288 006e 00       		.byte	0
 2289 006f 00       		.byte	0
 2290 0070 08       		.uleb128 0x8
 2291 0071 34       		.uleb128 0x34
 2292 0072 00       		.byte	0
 2293 0073 03       		.uleb128 0x3
 2294 0074 08       		.uleb128 0x8
 2295 0075 3A       		.uleb128 0x3a
 2296 0076 0B       		.uleb128 0xb
 2297 0077 3B       		.uleb128 0x3b
 2298 0078 0B       		.uleb128 0xb
 2299 0079 49       		.uleb128 0x49
 2300 007a 13       		.uleb128 0x13
 2301 007b 02       		.uleb128 0x2
 2302 007c 18       		.uleb128 0x18
 2303 007d 00       		.byte	0
 2304 007e 00       		.byte	0
 2305 007f 09       		.uleb128 0x9
 2306 0080 2E       		.uleb128 0x2e
 2307 0081 00       		.byte	0
 2308 0082 3F       		.uleb128 0x3f
 2309 0083 19       		.uleb128 0x19
 2310 0084 03       		.uleb128 0x3
 2311 0085 0E       		.uleb128 0xe
 2312 0086 3A       		.uleb128 0x3a
 2313 0087 0B       		.uleb128 0xb
 2314 0088 3B       		.uleb128 0x3b
 2315 0089 0B       		.uleb128 0xb
 2316 008a 27       		.uleb128 0x27
 2317 008b 19       		.uleb128 0x19
 2318 008c 11       		.uleb128 0x11
 2319 008d 01       		.uleb128 0x1
 2320 008e 12       		.uleb128 0x12
 2321 008f 06       		.uleb128 0x6
 2322 0090 40       		.uleb128 0x40
 2323 0091 18       		.uleb128 0x18
 2324 0092 9642     		.uleb128 0x2116
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 48


 2325 0094 19       		.uleb128 0x19
 2326 0095 00       		.byte	0
 2327 0096 00       		.byte	0
 2328 0097 0A       		.uleb128 0xa
 2329 0098 2E       		.uleb128 0x2e
 2330 0099 00       		.byte	0
 2331 009a 3F       		.uleb128 0x3f
 2332 009b 19       		.uleb128 0x19
 2333 009c 03       		.uleb128 0x3
 2334 009d 0E       		.uleb128 0xe
 2335 009e 3A       		.uleb128 0x3a
 2336 009f 0B       		.uleb128 0xb
 2337 00a0 3B       		.uleb128 0x3b
 2338 00a1 05       		.uleb128 0x5
 2339 00a2 27       		.uleb128 0x27
 2340 00a3 19       		.uleb128 0x19
 2341 00a4 11       		.uleb128 0x11
 2342 00a5 01       		.uleb128 0x1
 2343 00a6 12       		.uleb128 0x12
 2344 00a7 06       		.uleb128 0x6
 2345 00a8 40       		.uleb128 0x40
 2346 00a9 18       		.uleb128 0x18
 2347 00aa 9642     		.uleb128 0x2116
 2348 00ac 19       		.uleb128 0x19
 2349 00ad 00       		.byte	0
 2350 00ae 00       		.byte	0
 2351 00af 0B       		.uleb128 0xb
 2352 00b0 2E       		.uleb128 0x2e
 2353 00b1 00       		.byte	0
 2354 00b2 3F       		.uleb128 0x3f
 2355 00b3 19       		.uleb128 0x19
 2356 00b4 03       		.uleb128 0x3
 2357 00b5 0E       		.uleb128 0xe
 2358 00b6 3A       		.uleb128 0x3a
 2359 00b7 0B       		.uleb128 0xb
 2360 00b8 3B       		.uleb128 0x3b
 2361 00b9 05       		.uleb128 0x5
 2362 00ba 49       		.uleb128 0x49
 2363 00bb 13       		.uleb128 0x13
 2364 00bc 11       		.uleb128 0x11
 2365 00bd 01       		.uleb128 0x1
 2366 00be 12       		.uleb128 0x12
 2367 00bf 06       		.uleb128 0x6
 2368 00c0 40       		.uleb128 0x40
 2369 00c1 18       		.uleb128 0x18
 2370 00c2 9642     		.uleb128 0x2116
 2371 00c4 19       		.uleb128 0x19
 2372 00c5 00       		.byte	0
 2373 00c6 00       		.byte	0
 2374 00c7 0C       		.uleb128 0xc
 2375 00c8 01       		.uleb128 0x1
 2376 00c9 01       		.byte	0x1
 2377 00ca 49       		.uleb128 0x49
 2378 00cb 13       		.uleb128 0x13
 2379 00cc 01       		.uleb128 0x1
 2380 00cd 13       		.uleb128 0x13
 2381 00ce 00       		.byte	0
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 49


 2382 00cf 00       		.byte	0
 2383 00d0 0D       		.uleb128 0xd
 2384 00d1 21       		.uleb128 0x21
 2385 00d2 00       		.byte	0
 2386 00d3 49       		.uleb128 0x49
 2387 00d4 13       		.uleb128 0x13
 2388 00d5 2F       		.uleb128 0x2f
 2389 00d6 0B       		.uleb128 0xb
 2390 00d7 00       		.byte	0
 2391 00d8 00       		.byte	0
 2392 00d9 0E       		.uleb128 0xe
 2393 00da 34       		.uleb128 0x34
 2394 00db 00       		.byte	0
 2395 00dc 03       		.uleb128 0x3
 2396 00dd 0E       		.uleb128 0xe
 2397 00de 3A       		.uleb128 0x3a
 2398 00df 0B       		.uleb128 0xb
 2399 00e0 3B       		.uleb128 0x3b
 2400 00e1 0B       		.uleb128 0xb
 2401 00e2 49       		.uleb128 0x49
 2402 00e3 13       		.uleb128 0x13
 2403 00e4 3F       		.uleb128 0x3f
 2404 00e5 19       		.uleb128 0x19
 2405 00e6 02       		.uleb128 0x2
 2406 00e7 18       		.uleb128 0x18
 2407 00e8 00       		.byte	0
 2408 00e9 00       		.byte	0
 2409 00ea 0F       		.uleb128 0xf
 2410 00eb 34       		.uleb128 0x34
 2411 00ec 00       		.byte	0
 2412 00ed 03       		.uleb128 0x3
 2413 00ee 08       		.uleb128 0x8
 2414 00ef 3A       		.uleb128 0x3a
 2415 00f0 0B       		.uleb128 0xb
 2416 00f1 3B       		.uleb128 0x3b
 2417 00f2 0B       		.uleb128 0xb
 2418 00f3 49       		.uleb128 0x49
 2419 00f4 13       		.uleb128 0x13
 2420 00f5 3F       		.uleb128 0x3f
 2421 00f6 19       		.uleb128 0x19
 2422 00f7 02       		.uleb128 0x2
 2423 00f8 18       		.uleb128 0x18
 2424 00f9 00       		.byte	0
 2425 00fa 00       		.byte	0
 2426 00fb 00       		.byte	0
 2427              		.section	.debug_aranges,"",%progbits
 2428 0000 6C000000 		.4byte	0x6c
 2429 0004 0200     		.2byte	0x2
 2430 0006 00000000 		.4byte	.Ldebug_info0
 2431 000a 04       		.byte	0x4
 2432 000b 00       		.byte	0
 2433 000c 0000     		.2byte	0
 2434 000e 0000     		.2byte	0
 2435 0010 00000000 		.4byte	.LFB37
 2436 0014 5C000000 		.4byte	.LFE37-.LFB37
 2437 0018 00000000 		.4byte	.LFB38
 2438 001c 04010000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 50


 2439 0020 00000000 		.4byte	.LFB39
 2440 0024 0C010000 		.4byte	.LFE39-.LFB39
 2441 0028 00000000 		.4byte	.LFB40
 2442 002c 24010000 		.4byte	.LFE40-.LFB40
 2443 0030 00000000 		.4byte	.LFB41
 2444 0034 1C010000 		.4byte	.LFE41-.LFB41
 2445 0038 00000000 		.4byte	.LFB42
 2446 003c 1A010000 		.4byte	.LFE42-.LFB42
 2447 0040 00000000 		.4byte	.LFB43
 2448 0044 9C000000 		.4byte	.LFE43-.LFB43
 2449 0048 00000000 		.4byte	.LFB44
 2450 004c 48010000 		.4byte	.LFE44-.LFB44
 2451 0050 00000000 		.4byte	.LFB45
 2452 0054 4C000000 		.4byte	.LFE45-.LFB45
 2453 0058 00000000 		.4byte	.LFB46
 2454 005c 18000000 		.4byte	.LFE46-.LFB46
 2455 0060 00000000 		.4byte	.LFB47
 2456 0064 5C000000 		.4byte	.LFE47-.LFB47
 2457 0068 00000000 		.4byte	0
 2458 006c 00000000 		.4byte	0
 2459              		.section	.debug_ranges,"",%progbits
 2460              	.Ldebug_ranges0:
 2461 0000 00000000 		.4byte	.LFB37
 2462 0004 5C000000 		.4byte	.LFE37
 2463 0008 00000000 		.4byte	.LFB38
 2464 000c 04010000 		.4byte	.LFE38
 2465 0010 00000000 		.4byte	.LFB39
 2466 0014 0C010000 		.4byte	.LFE39
 2467 0018 00000000 		.4byte	.LFB40
 2468 001c 24010000 		.4byte	.LFE40
 2469 0020 00000000 		.4byte	.LFB41
 2470 0024 1C010000 		.4byte	.LFE41
 2471 0028 00000000 		.4byte	.LFB42
 2472 002c 1A010000 		.4byte	.LFE42
 2473 0030 00000000 		.4byte	.LFB43
 2474 0034 9C000000 		.4byte	.LFE43
 2475 0038 00000000 		.4byte	.LFB44
 2476 003c 48010000 		.4byte	.LFE44
 2477 0040 00000000 		.4byte	.LFB45
 2478 0044 4C000000 		.4byte	.LFE45
 2479 0048 00000000 		.4byte	.LFB46
 2480 004c 18000000 		.4byte	.LFE46
 2481 0050 00000000 		.4byte	.LFB47
 2482 0054 5C000000 		.4byte	.LFE47
 2483 0058 00000000 		.4byte	0
 2484 005c 00000000 		.4byte	0
 2485              		.section	.debug_line,"",%progbits
 2486              	.Ldebug_line0:
 2487 0000 47020000 		.section	.debug_str,"MS",%progbits,1
 2487      02004300 
 2487      00000201 
 2487      FB0E0D00 
 2487      01010101 
 2488              	.LASF54:
 2489 0000 64696666 		.ascii	"diff_data\000"
 2489      5F646174 
 2489      6100
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 51


 2490              	.LASF34:
 2491 000a 785F6C6F 		.ascii	"x_low\000"
 2491      7700
 2492              	.LASF32:
 2493 0010 79325F6D 		.ascii	"y2_mavg\000"
 2493      61766700 
 2494              	.LASF39:
 2495 0018 76616C75 		.ascii	"value_in\000"
 2495      655F696E 
 2495      00
 2496              	.LASF46:
 2497 0021 61636372 		.ascii	"accroed\000"
 2497      6F656400 
 2498              	.LASF7:
 2499 0029 6C6F6E67 		.ascii	"long long unsigned int\000"
 2499      206C6F6E 
 2499      6720756E 
 2499      7369676E 
 2499      65642069 
 2500              	.LASF43:
 2501 0040 64696666 		.ascii	"diff\000"
 2501      00
 2502              	.LASF28:
 2503 0045 785F6D61 		.ascii	"x_mavg\000"
 2503      766700
 2504              	.LASF6:
 2505 004c 6C6F6E67 		.ascii	"long long int\000"
 2505      206C6F6E 
 2505      6720696E 
 2505      7400
 2506              	.LASF0:
 2507 005a 7369676E 		.ascii	"signed char\000"
 2507      65642063 
 2507      68617200 
 2508              	.LASF56:
 2509 0066 2E5C6D61 		.ascii	".\\main.c\000"
 2509      696E2E63 
 2509      00
 2510              	.LASF4:
 2511 006f 6C6F6E67 		.ascii	"long int\000"
 2511      20696E74 
 2511      00
 2512              	.LASF9:
 2513 0078 75696E74 		.ascii	"uint8\000"
 2513      3800
 2514              	.LASF40:
 2515 007e 76616C75 		.ascii	"value_out\000"
 2515      655F6F75 
 2515      7400
 2516              	.LASF29:
 2517 0088 795F6D61 		.ascii	"y_mavg\000"
 2517      766700
 2518              	.LASF13:
 2519 008f 646F7562 		.ascii	"double\000"
 2519      6C6500
 2520              	.LASF10:
 2521 0096 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 52


 2521      333200
 2522              	.LASF37:
 2523 009d 615F6C6F 		.ascii	"a_low\000"
 2523      7700
 2524              	.LASF36:
 2525 00a3 625F6C6F 		.ascii	"b_low\000"
 2525      7700
 2526              	.LASF30:
 2527 00a9 625F6D61 		.ascii	"b_mavg\000"
 2527      766700
 2528              	.LASF8:
 2529 00b0 756E7369 		.ascii	"unsigned int\000"
 2529      676E6564 
 2529      20696E74 
 2529      00
 2530              	.LASF5:
 2531 00bd 6C6F6E67 		.ascii	"long unsigned int\000"
 2531      20756E73 
 2531      69676E65 
 2531      6420696E 
 2531      7400
 2532              	.LASF18:
 2533 00cf 64617461 		.ascii	"data\000"
 2533      00
 2534              	.LASF19:
 2535 00d4 6D617667 		.ascii	"mavg_filter2\000"
 2535      5F66696C 
 2535      74657232 
 2535      00
 2536              	.LASF3:
 2537 00e1 73686F72 		.ascii	"short unsigned int\000"
 2537      7420756E 
 2537      7369676E 
 2537      65642069 
 2537      6E7400
 2538              	.LASF21:
 2539 00f4 726F6564 		.ascii	"roed_grader\000"
 2539      5F677261 
 2539      64657200 
 2540              	.LASF38:
 2541 0100 63757272 		.ascii	"current_byte\000"
 2541      656E745F 
 2541      62797465 
 2541      00
 2542              	.LASF15:
 2543 010d 73697A65 		.ascii	"sizetype\000"
 2543      74797065 
 2543      00
 2544              	.LASF52:
 2545 0116 73616D6C 		.ascii	"samlet_grader\000"
 2545      65745F67 
 2545      72616465 
 2545      7200
 2546              	.LASF42:
 2547 0124 67726164 		.ascii	"grader_roed\000"
 2547      65725F72 
 2547      6F656400 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 53


 2548              	.LASF31:
 2549 0130 78325F6D 		.ascii	"x2_mavg\000"
 2549      61766700 
 2550              	.LASF24:
 2551 0138 4144435F 		.ascii	"ADC_interrupt\000"
 2551      696E7465 
 2551      72727570 
 2551      7400
 2552              	.LASF50:
 2553 0146 6D61765F 		.ascii	"mav_data_roed\000"
 2553      64617461 
 2553      5F726F65 
 2553      6400
 2554              	.LASF49:
 2555 0154 64617461 		.ascii	"data_ready\000"
 2555      5F726561 
 2555      647900
 2556              	.LASF12:
 2557 015f 666C6F61 		.ascii	"float\000"
 2557      7400
 2558              	.LASF45:
 2559 0165 46697273 		.ascii	"FirstCall\000"
 2559      7443616C 
 2559      6C00
 2560              	.LASF1:
 2561 016f 756E7369 		.ascii	"unsigned char\000"
 2561      676E6564 
 2561      20636861 
 2561      7200
 2562              	.LASF26:
 2563 017d 54696D65 		.ascii	"Timer_interrupt\000"
 2563      725F696E 
 2563      74657272 
 2563      75707400 
 2564              	.LASF35:
 2565 018d 795F6C6F 		.ascii	"y_low\000"
 2565      7700
 2566              	.LASF2:
 2567 0193 73686F72 		.ascii	"short int\000"
 2567      7420696E 
 2567      7400
 2568              	.LASF44:
 2569 019d 636F756E 		.ascii	"counter\000"
 2569      74657200 
 2570              	.LASF22:
 2571 01a5 67726F65 		.ascii	"groen_grader\000"
 2571      6E5F6772 
 2571      61646572 
 2571      00
 2572              	.LASF20:
 2573 01b2 6C6F775F 		.ascii	"low_pass_filter\000"
 2573      70617373 
 2573      5F66696C 
 2573      74657200 
 2574              	.LASF25:
 2575 01c2 50696E5F 		.ascii	"Pin_SW2_handler\000"
 2575      5357325F 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 54


 2575      68616E64 
 2575      6C657200 
 2576              	.LASF14:
 2577 01d2 63686172 		.ascii	"char\000"
 2577      00
 2578              	.LASF16:
 2579 01d7 666C6F6F 		.ascii	"floor_and_convert\000"
 2579      725F616E 
 2579      645F636F 
 2579      6E766572 
 2579      7400
 2580              	.LASF51:
 2581 01e9 6D61765F 		.ascii	"mav_data_groen\000"
 2581      64617461 
 2581      5F67726F 
 2581      656E00
 2582              	.LASF47:
 2583 01f8 61636367 		.ascii	"accgroen\000"
 2583      726F656E 
 2583      00
 2584              	.LASF17:
 2585 0201 6D617667 		.ascii	"mavg_filter\000"
 2585      5F66696C 
 2585      74657200 
 2586              	.LASF57:
 2587 020d 433A5C55 		.ascii	"C:\\Users\\passw\\Desktop\\ADC_filtre_samlet_grader"
 2587      73657273 
 2587      5C706173 
 2587      73775C44 
 2587      65736B74 
 2588 023c 2E637964 		.ascii	".cydsn\000"
 2588      736E00
 2589              	.LASF33:
 2590 0243 62325F6D 		.ascii	"b2_mavg\000"
 2590      61766700 
 2591              	.LASF41:
 2592 024b 67726164 		.ascii	"grader_groen\000"
 2592      65725F67 
 2592      726F656E 
 2592      00
 2593              	.LASF11:
 2594 0258 696E7431 		.ascii	"int16\000"
 2594      3600
 2595              	.LASF53:
 2596 025e 6C6F775F 		.ascii	"low_pass_data\000"
 2596      70617373 
 2596      5F646174 
 2596      6100
 2597              	.LASF55:
 2598 026c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2598      4320342E 
 2598      392E3320 
 2598      32303135 
 2598      30333033 
 2599 029f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2599      20726576 
 2599      6973696F 
ARM GAS  C:\Users\passw\AppData\Local\Temp\ccPSLrPd.s 			page 55


 2599      6E203232 
 2599      31323230 
 2600 02d2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2600      66756E63 
 2600      74696F6E 
 2600      2D736563 
 2600      74696F6E 
 2601              	.LASF23:
 2602 02fa 64696666 		.ascii	"differentiator\000"
 2602      6572656E 
 2602      74696174 
 2602      6F7200
 2603              	.LASF27:
 2604 0309 6D61696E 		.ascii	"main\000"
 2604      00
 2605              	.LASF48:
 2606 030e 72657375 		.ascii	"result\000"
 2606      6C7400
 2607              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
