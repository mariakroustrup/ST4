ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	x_mavg
  18              		.bss
  19              		.align	3
  20              		.type	x_mavg, %object
  21              		.size	x_mavg, 80
  22              	x_mavg:
  23 0000 00000000 		.space	80
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	y_mavg
  25              		.align	3
  26              		.type	y_mavg, %object
  27              		.size	y_mavg, 8
  28              	y_mavg:
  29 0050 00000000 		.space	8
  29      00000000 
  30              		.global	b_mavg
  31              		.data
  32              		.align	3
  33              		.type	b_mavg, %object
  34              		.size	b_mavg, 80
  35              	b_mavg:
  36 0000 9A999999 		.word	-1717986918
  37 0004 9999B93F 		.word	1069128089
  38 0008 9A999999 		.word	-1717986918
  39 000c 9999B93F 		.word	1069128089
  40 0010 9A999999 		.word	-1717986918
  41 0014 9999B93F 		.word	1069128089
  42 0018 9A999999 		.word	-1717986918
  43 001c 9999B93F 		.word	1069128089
  44 0020 9A999999 		.word	-1717986918
  45 0024 9999B93F 		.word	1069128089
  46 0028 9A999999 		.word	-1717986918
  47 002c 9999B93F 		.word	1069128089
  48 0030 9A999999 		.word	-1717986918
  49 0034 9999B93F 		.word	1069128089
  50 0038 9A999999 		.word	-1717986918
  51 003c 9999B93F 		.word	1069128089
  52 0040 9A999999 		.word	-1717986918
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 2


  53 0044 9999B93F 		.word	1069128089
  54 0048 9A999999 		.word	-1717986918
  55 004c 9999B93F 		.word	1069128089
  56              		.global	x2_mavg
  57              		.bss
  58              		.align	3
  59              		.type	x2_mavg, %object
  60              		.size	x2_mavg, 80
  61              	x2_mavg:
  62 0058 00000000 		.space	80
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.global	y2_mavg
  64              		.align	3
  65              		.type	y2_mavg, %object
  66              		.size	y2_mavg, 8
  67              	y2_mavg:
  68 00a8 00000000 		.space	8
  68      00000000 
  69              		.global	b2_mavg
  70              		.data
  71              		.align	3
  72              		.type	b2_mavg, %object
  73              		.size	b2_mavg, 80
  74              	b2_mavg:
  75 0050 9A999999 		.word	-1717986918
  76 0054 9999B93F 		.word	1069128089
  77 0058 9A999999 		.word	-1717986918
  78 005c 9999B93F 		.word	1069128089
  79 0060 9A999999 		.word	-1717986918
  80 0064 9999B93F 		.word	1069128089
  81 0068 9A999999 		.word	-1717986918
  82 006c 9999B93F 		.word	1069128089
  83 0070 9A999999 		.word	-1717986918
  84 0074 9999B93F 		.word	1069128089
  85 0078 9A999999 		.word	-1717986918
  86 007c 9999B93F 		.word	1069128089
  87 0080 9A999999 		.word	-1717986918
  88 0084 9999B93F 		.word	1069128089
  89 0088 9A999999 		.word	-1717986918
  90 008c 9999B93F 		.word	1069128089
  91 0090 9A999999 		.word	-1717986918
  92 0094 9999B93F 		.word	1069128089
  93 0098 9A999999 		.word	-1717986918
  94 009c 9999B93F 		.word	1069128089
  95              		.global	x_low
  96              		.bss
  97              		.align	3
  98              		.type	x_low, %object
  99              		.size	x_low, 24
 100              	x_low:
 101 00b0 00000000 		.space	24
 101      00000000 
 101      00000000 
 101      00000000 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 3


 101      00000000 
 102              		.global	y_low
 103              		.align	3
 104              		.type	y_low, %object
 105              		.size	y_low, 24
 106              	y_low:
 107 00c8 00000000 		.space	24
 107      00000000 
 107      00000000 
 107      00000000 
 107      00000000 
 108              		.global	b_low
 109              		.data
 110              		.align	3
 111              		.type	b_low, %object
 112              		.size	b_low, 24
 113              	b_low:
 114 00a0 FA7E6ABC 		.word	-1133871366
 115 00a4 7493583F 		.word	1062769524
 116 00a8 E09C11A5 		.word	-1525572384
 117 00ac BDC1673F 		.word	1063764413
 118 00b0 FA7E6ABC 		.word	-1133871366
 119 00b4 7493583F 		.word	1062769524
 120              		.global	a_low
 121              		.align	3
 122              		.type	a_low, %object
 123              		.size	a_low, 24
 124              	a_low:
 125 00b8 00000000 		.word	0
 126 00bc 0000F03F 		.word	1072693248
 127 00c0 D34D6210 		.word	274877907
 128 00c4 5839FEBF 		.word	-1073858216
 129 00c8 C2172653 		.word	1395005378
 130 00cc 05A3EC3F 		.word	1072472837
 131              		.global	current_byte
 132              		.bss
 133              		.type	current_byte, %object
 134              		.size	current_byte, 1
 135              	current_byte:
 136 00e0 00       		.space	1
 137              		.comm	value_in,2,2
 138              		.global	value_out
 139 00e1 000000   		.align	2
 140              		.type	value_out, %object
 141              		.size	value_out, 4
 142              	value_out:
 143 00e4 00000000 		.space	4
 144              		.global	i
 145              		.align	1
 146              		.type	i, %object
 147              		.size	i, 2
 148              	i:
 149 00e8 0000     		.space	2
 150              		.global	j
 151              		.align	1
 152              		.type	j, %object
 153              		.size	j, 2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 4


 154              	j:
 155 00ea 0000     		.space	2
 156              		.global	k
 157              		.align	1
 158              		.type	k, %object
 159              		.size	k, 2
 160              	k:
 161 00ec 0000     		.space	2
 162              		.comm	grader_groen,2,2
 163              		.comm	grader_roed,2,2
 164              		.comm	diff,2,2
 165              		.comm	old,2,2
 166              		.global	counter
 167              		.align	1
 168              		.type	counter, %object
 169              		.size	counter, 2
 170              	counter:
 171 00ee 0000     		.space	2
 172              		.global	FirstCall
 173              		.data
 174              		.type	FirstCall, %object
 175              		.size	FirstCall, 1
 176              	FirstCall:
 177 00d0 01       		.byte	1
 178              		.global	accroed
 179 00d1 00000000 		.bss
 179      000000
 180              		.align	1
 181              		.type	accroed, %object
 182              		.size	accroed, 2
 183              	accroed:
 184 00f0 0000     		.space	2
 185              		.global	accgroen
 186              		.align	1
 187              		.type	accgroen, %object
 188              		.size	accgroen, 2
 189              	accgroen:
 190 00f2 0000     		.space	2
 191              		.global	EMG
 192              		.align	1
 193              		.type	EMG, %object
 194              		.size	EMG, 2
 195              	EMG:
 196 00f4 0000     		.space	2
 197              		.global	result
 198 00f6 0000     		.align	2
 199              		.type	result, %object
 200              		.size	result, 6
 201              	result:
 202 00f8 00000000 		.space	6
 202      0000
 203              		.global	data_ready
 204              		.type	data_ready, %object
 205              		.size	data_ready, 1
 206              	data_ready:
 207 00fe 00       		.space	1
 208              		.comm	mav_data_roed,2,2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 5


 209              		.comm	mav_data_groen,2,2
 210              		.comm	samlet_grader,2,2
 211              		.comm	low_pass_data,2,2
 212              		.comm	diff_data,2,2
 213              		.global	__aeabi_dcmpgt
 214              		.global	__aeabi_dadd
 215              		.global	__aeabi_d2iz
 216              		.global	__aeabi_dsub
 217 00ff 00       		.section	.text.floor_and_convert,"ax",%progbits
 218              		.align	2
 219              		.global	floor_and_convert
 220              		.code	16
 221              		.thumb_func
 222              		.type	floor_and_convert, %function
 223              	floor_and_convert:
 224              	.LFB37:
 225              		.file 1 ".\\main.c"
   1:.\main.c      **** #include <project.h>
   2:.\main.c      **** #include <my_defines.h>
   3:.\main.c      **** #include <stdlib.h>
   4:.\main.c      **** 
   5:.\main.c      **** #define LOWBYTE 0                                   // Used to toggle between HIGH byte and LOW byt
   6:.\main.c      **** #define HIGHBYTE 1                                  // Used to toggle between HIGH byte and LOW byt
   7:.\main.c      **** #define FALSE 0
   8:.\main.c      **** #define TRUE 1
   9:.\main.c      **** 
  10:.\main.c      **** /* Moving average filter */ 
  11:.\main.c      **** #define FILTER_LENGTH_mavg 9
  12:.\main.c      **** //int y[2] = {0,0};
  13:.\main.c      **** double x_mavg[FILTER_LENGTH_mavg+1] = {0,0,0,0,0,0,0,0,0,0};
  14:.\main.c      **** double y_mavg = 0;
  15:.\main.c      **** double b_mavg[FILTER_LENGTH_mavg+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  16:.\main.c      **** 
  17:.\main.c      **** /* Moving average filter 2 */
  18:.\main.c      **** #define FILTER_LENGTH_mavg2 9
  19:.\main.c      **** //int y2[2] = {0,0};
  20:.\main.c      **** double x2_mavg[FILTER_LENGTH_mavg2+1] = {0,0,0,0,0,0,0,0,0,0};
  21:.\main.c      **** double y2_mavg = 0;
  22:.\main.c      **** double b2_mavg[FILTER_LENGTH_mavg2+1] = {0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  23:.\main.c      **** 
  24:.\main.c      **** 
  25:.\main.c      **** #define FILTER_LENGTH_low 2
  26:.\main.c      **** double x_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  27:.\main.c      **** double y_low[FILTER_LENGTH_low+1] = {0, 0, 0};
  28:.\main.c      **** double b_low[FILTER_LENGTH_low+1] = {0.0015, 0.0029, 0.0015};
  29:.\main.c      **** double a_low[FILTER_LENGTH_low+1] = {1.0000, -1.8890, 0.8949};
  30:.\main.c      **** 
  31:.\main.c      **** char current_byte = LOWBYTE;                        // Receive LOW byte first as default
  32:.\main.c      **** int16 value_in,value_out[2]={0,0},i=0,j=0,k=0, grader_groen, grader_roed, diff, old, counter=0; 
  33:.\main.c      **** char FirstCall = TRUE;
  34:.\main.c      **** 
  35:.\main.c      **** int16 accroed = {0};
  36:.\main.c      **** int16 accgroen = {0};
  37:.\main.c      **** int16 EMG = {0};
  38:.\main.c      **** int16 result[num_of_channels] = {0};
  39:.\main.c      **** uint8 data_ready = FALSE;
  40:.\main.c      **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 6


  41:.\main.c      **** int16 mav_data_roed;
  42:.\main.c      **** int16 mav_data_groen;
  43:.\main.c      **** int16 samlet_grader;
  44:.\main.c      **** int16 low_pass_data;
  45:.\main.c      **** int16 diff_data;
  46:.\main.c      **** 
  47:.\main.c      **** #define StartMeasuring Control_Reg_1_Write(1);
  48:.\main.c      **** #define StopMeasuring Control_Reg_1_Write(0);
  49:.\main.c      **** 
  50:.\main.c      **** /***********************************Konvertering til heltal***********************************/
  51:.\main.c      **** signed int floor_and_convert(double y)
  52:.\main.c      **** {
 226              		.loc 1 52 0
 227              		.cfi_startproc
 228 0000 90B5     		push	{r4, r7, lr}
 229              		.cfi_def_cfa_offset 12
 230              		.cfi_offset 4, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 83B0     		sub	sp, sp, #12
 234              		.cfi_def_cfa_offset 24
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 3860     		str	r0, [r7]
 238 0008 7960     		str	r1, [r7, #4]
  53:.\main.c      ****    if (y > 0)
 239              		.loc 1 53 0
 240 000a 3868     		ldr	r0, [r7]
 241 000c 7968     		ldr	r1, [r7, #4]
 242 000e 0022     		mov	r2, #0
 243 0010 0023     		mov	r3, #0
 244 0012 FFF7FEFF 		bl	__aeabi_dcmpgt
 245 0016 031E     		sub	r3, r0, #0
 246 0018 0DD0     		beq	.L6
  54:.\main.c      ****       return (signed int) (y+0.5);
 247              		.loc 1 54 0
 248 001a 3868     		ldr	r0, [r7]
 249 001c 7968     		ldr	r1, [r7, #4]
 250 001e 0022     		mov	r2, #0
 251 0020 0D4B     		ldr	r3, .L7
 252 0022 FFF7FEFF 		bl	__aeabi_dadd
 253 0026 031C     		mov	r3, r0
 254 0028 0C1C     		mov	r4, r1
 255 002a 181C     		mov	r0, r3
 256 002c 211C     		mov	r1, r4
 257 002e FFF7FEFF 		bl	__aeabi_d2iz
 258 0032 031C     		mov	r3, r0
 259 0034 0CE0     		b	.L4
 260              	.L6:
  55:.\main.c      ****    else
  56:.\main.c      ****       return (signed int) (y-0.5);
 261              		.loc 1 56 0
 262 0036 3868     		ldr	r0, [r7]
 263 0038 7968     		ldr	r1, [r7, #4]
 264 003a 0022     		mov	r2, #0
 265 003c 064B     		ldr	r3, .L7
 266 003e FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 7


 267 0042 031C     		mov	r3, r0
 268 0044 0C1C     		mov	r4, r1
 269 0046 181C     		mov	r0, r3
 270 0048 211C     		mov	r1, r4
 271 004a FFF7FEFF 		bl	__aeabi_d2iz
 272 004e 031C     		mov	r3, r0
 273              	.L4:
  57:.\main.c      **** }
 274              		.loc 1 57 0
 275 0050 181C     		mov	r0, r3
 276 0052 BD46     		mov	sp, r7
 277 0054 03B0     		add	sp, sp, #12
 278              		@ sp needed
 279 0056 90BD     		pop	{r4, r7, pc}
 280              	.L8:
 281              		.align	2
 282              	.L7:
 283 0058 0000E03F 		.word	1071644672
 284              		.cfi_endproc
 285              	.LFE37:
 286              		.size	floor_and_convert, .-floor_and_convert
 287              		.global	__aeabi_i2d
 288              		.global	__aeabi_dmul
 289              		.section	.text.mavg_filter,"ax",%progbits
 290              		.align	2
 291              		.global	mavg_filter
 292              		.code	16
 293              		.thumb_func
 294              		.type	mavg_filter, %function
 295              	mavg_filter:
 296              	.LFB38:
  58:.\main.c      **** 
  59:.\main.c      **** /***********************************Moving average filter***********************************/
  60:.\main.c      **** signed int mavg_filter(signed int data)
  61:.\main.c      **** {
 297              		.loc 1 61 0
 298              		.cfi_startproc
 299 0000 90B5     		push	{r4, r7, lr}
 300              		.cfi_def_cfa_offset 12
 301              		.cfi_offset 4, -12
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 83B0     		sub	sp, sp, #12
 305              		.cfi_def_cfa_offset 24
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
  62:.\main.c      ****    x_mavg[0] =  (double) data;      // Read received sample and perform type casts
 309              		.loc 1 62 0
 310 0008 7868     		ldr	r0, [r7, #4]
 311 000a FFF7FEFF 		bl	__aeabi_i2d
 312 000e 031C     		mov	r3, r0
 313 0010 0C1C     		mov	r4, r1
 314 0012 384A     		ldr	r2, .L15
 315 0014 1360     		str	r3, [r2]
 316 0016 5460     		str	r4, [r2, #4]
  63:.\main.c      ****    
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 8


  64:.\main.c      ****    y_mavg = 0;
 317              		.loc 1 64 0
 318 0018 374A     		ldr	r2, .L15+4
 319 001a 0023     		mov	r3, #0
 320 001c 0024     		mov	r4, #0
 321 001e 1360     		str	r3, [r2]
 322 0020 5460     		str	r4, [r2, #4]
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 323              		.loc 1 65 0
 324 0022 364B     		ldr	r3, .L15+8
 325 0024 0022     		mov	r2, #0
 326 0026 1A80     		strh	r2, [r3]
 327 0028 30E0     		b	.L10
 328              	.L11:
  66:.\main.c      ****    {
  67:.\main.c      ****       y_mavg += b_mavg[i]*x_mavg[i];
 329              		.loc 1 67 0 discriminator 3
 330 002a 344B     		ldr	r3, .L15+8
 331 002c 1B88     		ldrh	r3, [r3]
 332 002e 1BB2     		sxth	r3, r3
 333 0030 334A     		ldr	r2, .L15+12
 334 0032 DB00     		lsl	r3, r3, #3
 335 0034 D318     		add	r3, r2, r3
 336 0036 1968     		ldr	r1, [r3]
 337 0038 5A68     		ldr	r2, [r3, #4]
 338 003a 304B     		ldr	r3, .L15+8
 339 003c 1B88     		ldrh	r3, [r3]
 340 003e 1BB2     		sxth	r3, r3
 341 0040 2C48     		ldr	r0, .L15
 342 0042 DB00     		lsl	r3, r3, #3
 343 0044 C318     		add	r3, r0, r3
 344 0046 5C68     		ldr	r4, [r3, #4]
 345 0048 1B68     		ldr	r3, [r3]
 346 004a 081C     		mov	r0, r1
 347 004c 111C     		mov	r1, r2
 348 004e 1A1C     		mov	r2, r3
 349 0050 231C     		mov	r3, r4
 350 0052 FFF7FEFF 		bl	__aeabi_dmul
 351 0056 031C     		mov	r3, r0
 352 0058 0C1C     		mov	r4, r1
 353 005a 191C     		mov	r1, r3
 354 005c 221C     		mov	r2, r4
 355 005e 264B     		ldr	r3, .L15+4
 356 0060 5C68     		ldr	r4, [r3, #4]
 357 0062 1B68     		ldr	r3, [r3]
 358 0064 081C     		mov	r0, r1
 359 0066 111C     		mov	r1, r2
 360 0068 1A1C     		mov	r2, r3
 361 006a 231C     		mov	r3, r4
 362 006c FFF7FEFF 		bl	__aeabi_dadd
 363 0070 031C     		mov	r3, r0
 364 0072 0C1C     		mov	r4, r1
 365 0074 204A     		ldr	r2, .L15+4
 366 0076 1360     		str	r3, [r2]
 367 0078 5460     		str	r4, [r2, #4]
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 368              		.loc 1 65 0 discriminator 3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 9


 369 007a 204B     		ldr	r3, .L15+8
 370 007c 1B88     		ldrh	r3, [r3]
 371 007e 9BB2     		uxth	r3, r3
 372 0080 9BB2     		uxth	r3, r3
 373 0082 0133     		add	r3, r3, #1
 374 0084 9BB2     		uxth	r3, r3
 375 0086 9AB2     		uxth	r2, r3
 376 0088 1C4B     		ldr	r3, .L15+8
 377 008a 1A80     		strh	r2, [r3]
 378              	.L10:
  65:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg;i++)           // Run FIR filter for each received sample
 379              		.loc 1 65 0 is_stmt 0 discriminator 1
 380 008c 1B4B     		ldr	r3, .L15+8
 381 008e 1B88     		ldrh	r3, [r3]
 382 0090 1BB2     		sxth	r3, r3
 383 0092 092B     		cmp	r3, #9
 384 0094 C9DD     		ble	.L11
  68:.\main.c      ****    } 
  69:.\main.c      ****    
  70:.\main.c      ****    for(i = FILTER_LENGTH_mavg-1;i >= 0;i--)         // Roll x array in order to hold old sample inp
 385              		.loc 1 70 0 is_stmt 1
 386 0096 194B     		ldr	r3, .L15+8
 387 0098 0822     		mov	r2, #8
 388 009a 1A80     		strh	r2, [r3]
 389 009c 19E0     		b	.L12
 390              	.L13:
  71:.\main.c      ****    {
  72:.\main.c      ****       x_mavg[i+1] = x_mavg[i];
 391              		.loc 1 72 0 discriminator 3
 392 009e 174B     		ldr	r3, .L15+8
 393 00a0 1B88     		ldrh	r3, [r3]
 394 00a2 1BB2     		sxth	r3, r3
 395 00a4 5A1C     		add	r2, r3, #1
 396 00a6 154B     		ldr	r3, .L15+8
 397 00a8 1B88     		ldrh	r3, [r3]
 398 00aa 1BB2     		sxth	r3, r3
 399 00ac 1149     		ldr	r1, .L15
 400 00ae DB00     		lsl	r3, r3, #3
 401 00b0 CB18     		add	r3, r1, r3
 402 00b2 5C68     		ldr	r4, [r3, #4]
 403 00b4 1B68     		ldr	r3, [r3]
 404 00b6 0F49     		ldr	r1, .L15
 405 00b8 D200     		lsl	r2, r2, #3
 406 00ba 8A18     		add	r2, r1, r2
 407 00bc 1360     		str	r3, [r2]
 408 00be 5460     		str	r4, [r2, #4]
  70:.\main.c      ****    {
 409              		.loc 1 70 0 discriminator 3
 410 00c0 0E4B     		ldr	r3, .L15+8
 411 00c2 1B88     		ldrh	r3, [r3]
 412 00c4 9BB2     		uxth	r3, r3
 413 00c6 9BB2     		uxth	r3, r3
 414 00c8 013B     		sub	r3, r3, #1
 415 00ca 9BB2     		uxth	r3, r3
 416 00cc 9AB2     		uxth	r2, r3
 417 00ce 0B4B     		ldr	r3, .L15+8
 418 00d0 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 10


 419              	.L12:
  70:.\main.c      ****    {
 420              		.loc 1 70 0 is_stmt 0 discriminator 1
 421 00d2 0A4B     		ldr	r3, .L15+8
 422 00d4 1B88     		ldrh	r3, [r3]
 423 00d6 1BB2     		sxth	r3, r3
 424 00d8 002B     		cmp	r3, #0
 425 00da E0DA     		bge	.L13
  73:.\main.c      ****    }
  74:.\main.c      ****   
  75:.\main.c      ****    return (signed int) y_mavg;
 426              		.loc 1 75 0 is_stmt 1
 427 00dc 064B     		ldr	r3, .L15+4
 428 00de 5C68     		ldr	r4, [r3, #4]
 429 00e0 1B68     		ldr	r3, [r3]
 430 00e2 181C     		mov	r0, r3
 431 00e4 211C     		mov	r1, r4
 432 00e6 FFF7FEFF 		bl	__aeabi_d2iz
 433 00ea 031C     		mov	r3, r0
  76:.\main.c      **** }
 434              		.loc 1 76 0
 435 00ec 181C     		mov	r0, r3
 436 00ee BD46     		mov	sp, r7
 437 00f0 03B0     		add	sp, sp, #12
 438              		@ sp needed
 439 00f2 90BD     		pop	{r4, r7, pc}
 440              	.L16:
 441              		.align	2
 442              	.L15:
 443 00f4 00000000 		.word	x_mavg
 444 00f8 00000000 		.word	y_mavg
 445 00fc 00000000 		.word	i
 446 0100 00000000 		.word	b_mavg
 447              		.cfi_endproc
 448              	.LFE38:
 449              		.size	mavg_filter, .-mavg_filter
 450              		.section	.text.mavg_filter2,"ax",%progbits
 451              		.align	2
 452              		.global	mavg_filter2
 453              		.code	16
 454              		.thumb_func
 455              		.type	mavg_filter2, %function
 456              	mavg_filter2:
 457              	.LFB39:
  77:.\main.c      **** 
  78:.\main.c      **** 
  79:.\main.c      **** /***********************************Moving average filter 2***********************************/
  80:.\main.c      **** signed int mavg_filter2(signed int data)
  81:.\main.c      **** {
 458              		.loc 1 81 0
 459              		.cfi_startproc
 460 0000 90B5     		push	{r4, r7, lr}
 461              		.cfi_def_cfa_offset 12
 462              		.cfi_offset 4, -12
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 11


 466              		.cfi_def_cfa_offset 24
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
  82:.\main.c      ****    x2_mavg[0] =  (int16) data;                     // Read received sample and perform type casts
 470              		.loc 1 82 0
 471 0008 7B68     		ldr	r3, [r7, #4]
 472 000a 9BB2     		uxth	r3, r3
 473 000c 1BB2     		sxth	r3, r3
 474 000e 181C     		mov	r0, r3
 475 0010 FFF7FEFF 		bl	__aeabi_i2d
 476 0014 031C     		mov	r3, r0
 477 0016 0C1C     		mov	r4, r1
 478 0018 384A     		ldr	r2, .L23
 479 001a 1360     		str	r3, [r2]
 480 001c 5460     		str	r4, [r2, #4]
  83:.\main.c      ****     
  84:.\main.c      ****    y2_mavg = 0;                                     // 
 481              		.loc 1 84 0
 482 001e 384A     		ldr	r2, .L23+4
 483 0020 0023     		mov	r3, #0
 484 0022 0024     		mov	r4, #0
 485 0024 1360     		str	r3, [r2]
 486 0026 5460     		str	r4, [r2, #4]
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 487              		.loc 1 85 0
 488 0028 364B     		ldr	r3, .L23+8
 489 002a 0022     		mov	r2, #0
 490 002c 1A80     		strh	r2, [r3]
 491 002e 30E0     		b	.L18
 492              	.L19:
  86:.\main.c      ****    {
  87:.\main.c      ****       y2_mavg += b2_mavg[i]*x2_mavg[i];             // 
 493              		.loc 1 87 0 discriminator 3
 494 0030 344B     		ldr	r3, .L23+8
 495 0032 1B88     		ldrh	r3, [r3]
 496 0034 1BB2     		sxth	r3, r3
 497 0036 344A     		ldr	r2, .L23+12
 498 0038 DB00     		lsl	r3, r3, #3
 499 003a D318     		add	r3, r2, r3
 500 003c 1968     		ldr	r1, [r3]
 501 003e 5A68     		ldr	r2, [r3, #4]
 502 0040 304B     		ldr	r3, .L23+8
 503 0042 1B88     		ldrh	r3, [r3]
 504 0044 1BB2     		sxth	r3, r3
 505 0046 2D48     		ldr	r0, .L23
 506 0048 DB00     		lsl	r3, r3, #3
 507 004a C318     		add	r3, r0, r3
 508 004c 5C68     		ldr	r4, [r3, #4]
 509 004e 1B68     		ldr	r3, [r3]
 510 0050 081C     		mov	r0, r1
 511 0052 111C     		mov	r1, r2
 512 0054 1A1C     		mov	r2, r3
 513 0056 231C     		mov	r3, r4
 514 0058 FFF7FEFF 		bl	__aeabi_dmul
 515 005c 031C     		mov	r3, r0
 516 005e 0C1C     		mov	r4, r1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 12


 517 0060 191C     		mov	r1, r3
 518 0062 221C     		mov	r2, r4
 519 0064 264B     		ldr	r3, .L23+4
 520 0066 5C68     		ldr	r4, [r3, #4]
 521 0068 1B68     		ldr	r3, [r3]
 522 006a 081C     		mov	r0, r1
 523 006c 111C     		mov	r1, r2
 524 006e 1A1C     		mov	r2, r3
 525 0070 231C     		mov	r3, r4
 526 0072 FFF7FEFF 		bl	__aeabi_dadd
 527 0076 031C     		mov	r3, r0
 528 0078 0C1C     		mov	r4, r1
 529 007a 214A     		ldr	r2, .L23+4
 530 007c 1360     		str	r3, [r2]
 531 007e 5460     		str	r4, [r2, #4]
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 532              		.loc 1 85 0 discriminator 3
 533 0080 204B     		ldr	r3, .L23+8
 534 0082 1B88     		ldrh	r3, [r3]
 535 0084 9BB2     		uxth	r3, r3
 536 0086 9BB2     		uxth	r3, r3
 537 0088 0133     		add	r3, r3, #1
 538 008a 9BB2     		uxth	r3, r3
 539 008c 9AB2     		uxth	r2, r3
 540 008e 1D4B     		ldr	r3, .L23+8
 541 0090 1A80     		strh	r2, [r3]
 542              	.L18:
  85:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_mavg2;i++)          // Run FIR filter for each received sample
 543              		.loc 1 85 0 is_stmt 0 discriminator 1
 544 0092 1C4B     		ldr	r3, .L23+8
 545 0094 1B88     		ldrh	r3, [r3]
 546 0096 1BB2     		sxth	r3, r3
 547 0098 092B     		cmp	r3, #9
 548 009a C9DD     		ble	.L19
  88:.\main.c      ****    } 
  89:.\main.c      ****    
  90:.\main.c      ****    for(i = FILTER_LENGTH_mavg2-1;i >= 0;i--)        // Roll x array in order to hold old sample inp
 549              		.loc 1 90 0 is_stmt 1
 550 009c 194B     		ldr	r3, .L23+8
 551 009e 0822     		mov	r2, #8
 552 00a0 1A80     		strh	r2, [r3]
 553 00a2 19E0     		b	.L20
 554              	.L21:
  91:.\main.c      ****    {
  92:.\main.c      ****       x2_mavg[i+1] = x2_mavg[i];                    // 
 555              		.loc 1 92 0 discriminator 3
 556 00a4 174B     		ldr	r3, .L23+8
 557 00a6 1B88     		ldrh	r3, [r3]
 558 00a8 1BB2     		sxth	r3, r3
 559 00aa 5A1C     		add	r2, r3, #1
 560 00ac 154B     		ldr	r3, .L23+8
 561 00ae 1B88     		ldrh	r3, [r3]
 562 00b0 1BB2     		sxth	r3, r3
 563 00b2 1249     		ldr	r1, .L23
 564 00b4 DB00     		lsl	r3, r3, #3
 565 00b6 CB18     		add	r3, r1, r3
 566 00b8 5C68     		ldr	r4, [r3, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 13


 567 00ba 1B68     		ldr	r3, [r3]
 568 00bc 0F49     		ldr	r1, .L23
 569 00be D200     		lsl	r2, r2, #3
 570 00c0 8A18     		add	r2, r1, r2
 571 00c2 1360     		str	r3, [r2]
 572 00c4 5460     		str	r4, [r2, #4]
  90:.\main.c      ****    {
 573              		.loc 1 90 0 discriminator 3
 574 00c6 0F4B     		ldr	r3, .L23+8
 575 00c8 1B88     		ldrh	r3, [r3]
 576 00ca 9BB2     		uxth	r3, r3
 577 00cc 9BB2     		uxth	r3, r3
 578 00ce 013B     		sub	r3, r3, #1
 579 00d0 9BB2     		uxth	r3, r3
 580 00d2 9AB2     		uxth	r2, r3
 581 00d4 0B4B     		ldr	r3, .L23+8
 582 00d6 1A80     		strh	r2, [r3]
 583              	.L20:
  90:.\main.c      ****    {
 584              		.loc 1 90 0 is_stmt 0 discriminator 1
 585 00d8 0A4B     		ldr	r3, .L23+8
 586 00da 1B88     		ldrh	r3, [r3]
 587 00dc 1BB2     		sxth	r3, r3
 588 00de 002B     		cmp	r3, #0
 589 00e0 E0DA     		bge	.L21
  93:.\main.c      ****    }
  94:.\main.c      ****       
  95:.\main.c      ****    return (signed int) y2_mavg;               // 
 590              		.loc 1 95 0 is_stmt 1
 591 00e2 074B     		ldr	r3, .L23+4
 592 00e4 5C68     		ldr	r4, [r3, #4]
 593 00e6 1B68     		ldr	r3, [r3]
 594 00e8 181C     		mov	r0, r3
 595 00ea 211C     		mov	r1, r4
 596 00ec FFF7FEFF 		bl	__aeabi_d2iz
 597 00f0 031C     		mov	r3, r0
  96:.\main.c      **** }
 598              		.loc 1 96 0
 599 00f2 181C     		mov	r0, r3
 600 00f4 BD46     		mov	sp, r7
 601 00f6 03B0     		add	sp, sp, #12
 602              		@ sp needed
 603 00f8 90BD     		pop	{r4, r7, pc}
 604              	.L24:
 605 00fa C046     		.align	2
 606              	.L23:
 607 00fc 00000000 		.word	x2_mavg
 608 0100 00000000 		.word	y2_mavg
 609 0104 00000000 		.word	i
 610 0108 00000000 		.word	b2_mavg
 611              		.cfi_endproc
 612              	.LFE39:
 613              		.size	mavg_filter2, .-mavg_filter2
 614              		.section	.text.low_pass_filter,"ax",%progbits
 615              		.align	2
 616              		.global	low_pass_filter
 617              		.code	16
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 14


 618              		.thumb_func
 619              		.type	low_pass_filter, %function
 620              	low_pass_filter:
 621              	.LFB40:
  97:.\main.c      **** 
  98:.\main.c      **** /***********************************Lavpas filter***********************************/
  99:.\main.c      **** 
 100:.\main.c      **** int low_pass_filter(int data)
 101:.\main.c      **** {
 622              		.loc 1 101 0
 623              		.cfi_startproc
 624 0000 B0B5     		push	{r4, r5, r7, lr}
 625              		.cfi_def_cfa_offset 16
 626              		.cfi_offset 4, -16
 627              		.cfi_offset 5, -12
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 84B0     		sub	sp, sp, #16
 631              		.cfi_def_cfa_offset 32
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 102:.\main.c      ****    int i;
 103:.\main.c      ****    x_low[0] =  (double) data;
 635              		.loc 1 103 0
 636 0008 7868     		ldr	r0, [r7, #4]
 637 000a FFF7FEFF 		bl	__aeabi_i2d
 638 000e 031C     		mov	r3, r0
 639 0010 0C1C     		mov	r4, r1
 640 0012 404A     		ldr	r2, .L33
 641 0014 1360     		str	r3, [r2]
 642 0016 5460     		str	r4, [r2, #4]
 104:.\main.c      ****    
 105:.\main.c      ****    y_low[0] = 0;
 643              		.loc 1 105 0
 644 0018 3F4A     		ldr	r2, .L33+4
 645 001a 0023     		mov	r3, #0
 646 001c 0024     		mov	r4, #0
 647 001e 1360     		str	r3, [r2]
 648 0020 5460     		str	r4, [r2, #4]
 106:.\main.c      ****   
 107:.\main.c      ****    for(i = 0;i <= FILTER_LENGTH_low;i++)                 // Run IIR filter for each received sample
 649              		.loc 1 107 0
 650 0022 0023     		mov	r3, #0
 651 0024 FB60     		str	r3, [r7, #12]
 652 0026 1EE0     		b	.L26
 653              	.L27:
 108:.\main.c      ****    {
 109:.\main.c      ****       y_low[0] += b_low[i]*x_low[i];
 654              		.loc 1 109 0 discriminator 3
 655 0028 3B4B     		ldr	r3, .L33+4
 656 002a 1C68     		ldr	r4, [r3]
 657 002c 5D68     		ldr	r5, [r3, #4]
 658 002e 3B4A     		ldr	r2, .L33+8
 659 0030 FB68     		ldr	r3, [r7, #12]
 660 0032 DB00     		lsl	r3, r3, #3
 661 0034 D318     		add	r3, r2, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 15


 662 0036 1868     		ldr	r0, [r3]
 663 0038 5968     		ldr	r1, [r3, #4]
 664 003a 364A     		ldr	r2, .L33
 665 003c FB68     		ldr	r3, [r7, #12]
 666 003e DB00     		lsl	r3, r3, #3
 667 0040 D318     		add	r3, r2, r3
 668 0042 1A68     		ldr	r2, [r3]
 669 0044 5B68     		ldr	r3, [r3, #4]
 670 0046 FFF7FEFF 		bl	__aeabi_dmul
 671 004a 021C     		mov	r2, r0
 672 004c 0B1C     		mov	r3, r1
 673 004e 201C     		mov	r0, r4
 674 0050 291C     		mov	r1, r5
 675 0052 FFF7FEFF 		bl	__aeabi_dadd
 676 0056 031C     		mov	r3, r0
 677 0058 0C1C     		mov	r4, r1
 678 005a 2F4A     		ldr	r2, .L33+4
 679 005c 1360     		str	r3, [r2]
 680 005e 5460     		str	r4, [r2, #4]
 107:.\main.c      ****    {
 681              		.loc 1 107 0 discriminator 3
 682 0060 FB68     		ldr	r3, [r7, #12]
 683 0062 0133     		add	r3, r3, #1
 684 0064 FB60     		str	r3, [r7, #12]
 685              	.L26:
 107:.\main.c      ****    {
 686              		.loc 1 107 0 is_stmt 0 discriminator 1
 687 0066 FB68     		ldr	r3, [r7, #12]
 688 0068 022B     		cmp	r3, #2
 689 006a DDDD     		ble	.L27
 110:.\main.c      ****    } 
 111:.\main.c      ****    
 112:.\main.c      ****    for(i =1;i <= FILTER_LENGTH_low;i++)               // Roll x array in order to hold old sample i
 690              		.loc 1 112 0 is_stmt 1
 691 006c 0123     		mov	r3, #1
 692 006e FB60     		str	r3, [r7, #12]
 693 0070 1EE0     		b	.L28
 694              	.L29:
 113:.\main.c      ****    {
 114:.\main.c      ****       y_low[0] -= a_low[i]*y_low[i];
 695              		.loc 1 114 0 discriminator 3
 696 0072 294B     		ldr	r3, .L33+4
 697 0074 1C68     		ldr	r4, [r3]
 698 0076 5D68     		ldr	r5, [r3, #4]
 699 0078 294A     		ldr	r2, .L33+12
 700 007a FB68     		ldr	r3, [r7, #12]
 701 007c DB00     		lsl	r3, r3, #3
 702 007e D318     		add	r3, r2, r3
 703 0080 1868     		ldr	r0, [r3]
 704 0082 5968     		ldr	r1, [r3, #4]
 705 0084 244A     		ldr	r2, .L33+4
 706 0086 FB68     		ldr	r3, [r7, #12]
 707 0088 DB00     		lsl	r3, r3, #3
 708 008a D318     		add	r3, r2, r3
 709 008c 1A68     		ldr	r2, [r3]
 710 008e 5B68     		ldr	r3, [r3, #4]
 711 0090 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 16


 712 0094 021C     		mov	r2, r0
 713 0096 0B1C     		mov	r3, r1
 714 0098 201C     		mov	r0, r4
 715 009a 291C     		mov	r1, r5
 716 009c FFF7FEFF 		bl	__aeabi_dsub
 717 00a0 031C     		mov	r3, r0
 718 00a2 0C1C     		mov	r4, r1
 719 00a4 1C4A     		ldr	r2, .L33+4
 720 00a6 1360     		str	r3, [r2]
 721 00a8 5460     		str	r4, [r2, #4]
 112:.\main.c      ****    {
 722              		.loc 1 112 0 discriminator 3
 723 00aa FB68     		ldr	r3, [r7, #12]
 724 00ac 0133     		add	r3, r3, #1
 725 00ae FB60     		str	r3, [r7, #12]
 726              	.L28:
 112:.\main.c      ****    {
 727              		.loc 1 112 0 is_stmt 0 discriminator 1
 728 00b0 FB68     		ldr	r3, [r7, #12]
 729 00b2 022B     		cmp	r3, #2
 730 00b4 DDDD     		ble	.L29
 115:.\main.c      ****    }
 116:.\main.c      **** 
 117:.\main.c      ****    for(i = FILTER_LENGTH_low-1;i >= 0;i--)
 731              		.loc 1 117 0 is_stmt 1
 732 00b6 0123     		mov	r3, #1
 733 00b8 FB60     		str	r3, [r7, #12]
 734 00ba 1CE0     		b	.L30
 735              	.L31:
 118:.\main.c      ****     {
 119:.\main.c      ****        x_low[i+1]=x_low[i];
 736              		.loc 1 119 0 discriminator 3
 737 00bc FB68     		ldr	r3, [r7, #12]
 738 00be 5A1C     		add	r2, r3, #1
 739 00c0 1449     		ldr	r1, .L33
 740 00c2 FB68     		ldr	r3, [r7, #12]
 741 00c4 DB00     		lsl	r3, r3, #3
 742 00c6 CB18     		add	r3, r1, r3
 743 00c8 5C68     		ldr	r4, [r3, #4]
 744 00ca 1B68     		ldr	r3, [r3]
 745 00cc 1149     		ldr	r1, .L33
 746 00ce D200     		lsl	r2, r2, #3
 747 00d0 8A18     		add	r2, r1, r2
 748 00d2 1360     		str	r3, [r2]
 749 00d4 5460     		str	r4, [r2, #4]
 120:.\main.c      ****        y_low[i+1]=y_low[i];
 750              		.loc 1 120 0 discriminator 3
 751 00d6 FB68     		ldr	r3, [r7, #12]
 752 00d8 5A1C     		add	r2, r3, #1
 753 00da 0F49     		ldr	r1, .L33+4
 754 00dc FB68     		ldr	r3, [r7, #12]
 755 00de DB00     		lsl	r3, r3, #3
 756 00e0 CB18     		add	r3, r1, r3
 757 00e2 5C68     		ldr	r4, [r3, #4]
 758 00e4 1B68     		ldr	r3, [r3]
 759 00e6 0C49     		ldr	r1, .L33+4
 760 00e8 D200     		lsl	r2, r2, #3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 17


 761 00ea 8A18     		add	r2, r1, r2
 762 00ec 1360     		str	r3, [r2]
 763 00ee 5460     		str	r4, [r2, #4]
 117:.\main.c      ****     {
 764              		.loc 1 117 0 discriminator 3
 765 00f0 FB68     		ldr	r3, [r7, #12]
 766 00f2 013B     		sub	r3, r3, #1
 767 00f4 FB60     		str	r3, [r7, #12]
 768              	.L30:
 117:.\main.c      ****     {
 769              		.loc 1 117 0 is_stmt 0 discriminator 1
 770 00f6 FB68     		ldr	r3, [r7, #12]
 771 00f8 002B     		cmp	r3, #0
 772 00fa DFDA     		bge	.L31
 121:.\main.c      ****     }
 122:.\main.c      **** 
 123:.\main.c      ****     return floor_and_convert(y_low[0]);
 773              		.loc 1 123 0 is_stmt 1
 774 00fc 064B     		ldr	r3, .L33+4
 775 00fe 5C68     		ldr	r4, [r3, #4]
 776 0100 1B68     		ldr	r3, [r3]
 777 0102 181C     		mov	r0, r3
 778 0104 211C     		mov	r1, r4
 779 0106 FFF7FEFF 		bl	floor_and_convert
 780 010a 031C     		mov	r3, r0
 124:.\main.c      **** }
 781              		.loc 1 124 0
 782 010c 181C     		mov	r0, r3
 783 010e BD46     		mov	sp, r7
 784 0110 04B0     		add	sp, sp, #16
 785              		@ sp needed
 786 0112 B0BD     		pop	{r4, r5, r7, pc}
 787              	.L34:
 788              		.align	2
 789              	.L33:
 790 0114 00000000 		.word	x_low
 791 0118 00000000 		.word	y_low
 792 011c 00000000 		.word	b_low
 793 0120 00000000 		.word	a_low
 794              		.cfi_endproc
 795              	.LFE40:
 796              		.size	low_pass_filter, .-low_pass_filter
 797              		.global	__aeabi_idiv
 798              		.section	.text.roed_grader,"ax",%progbits
 799              		.align	2
 800              		.global	roed_grader
 801              		.code	16
 802              		.thumb_func
 803              		.type	roed_grader, %function
 804              	roed_grader:
 805              	.LFB41:
 125:.\main.c      **** 
 126:.\main.c      **** 
 127:.\main.c      **** /***********************************Omregning til grader for rød**********************************
 128:.\main.c      **** int roed_grader(int data)
 129:.\main.c      **** {
 806              		.loc 1 129 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 18


 807              		.cfi_startproc
 808 0000 80B5     		push	{r7, lr}
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 82B0     		sub	sp, sp, #8
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 130:.\main.c      ****     if ((data >= -207) && (data <= -206))
 817              		.loc 1 130 0
 818 0008 7B68     		ldr	r3, [r7, #4]
 819 000a CF33     		add	r3, r3, #207
 820 000c 0CDB     		blt	.L36
 821              		.loc 1 130 0 is_stmt 0 discriminator 1
 822 000e 7B68     		ldr	r3, [r7, #4]
 823 0010 CD33     		add	r3, r3, #205
 824 0012 09DA     		bge	.L36
 131:.\main.c      ****     {
 132:.\main.c      ****         data=(0+(10-0)*(data-(-207))/(-206-(-207)));
 825              		.loc 1 132 0 is_stmt 1
 826 0014 7B68     		ldr	r3, [r7, #4]
 827 0016 CF33     		add	r3, r3, #207
 828 0018 1A1C     		mov	r2, r3
 829 001a 131C     		mov	r3, r2
 830 001c 9B00     		lsl	r3, r3, #2
 831 001e 9B18     		add	r3, r3, r2
 832 0020 5B00     		lsl	r3, r3, #1
 833 0022 7B60     		str	r3, [r7, #4]
 133:.\main.c      ****         return data; 
 834              		.loc 1 133 0
 835 0024 7B68     		ldr	r3, [r7, #4]
 836 0026 71E0     		b	.L37
 837              	.L36:
 134:.\main.c      ****     }
 135:.\main.c      ****     else if ((data >= -206) && (data <= -185))
 838              		.loc 1 135 0
 839 0028 7B68     		ldr	r3, [r7, #4]
 840 002a CE33     		add	r3, r3, #206
 841 002c 12DB     		blt	.L38
 842              		.loc 1 135 0 is_stmt 0 discriminator 1
 843 002e 7B68     		ldr	r3, [r7, #4]
 844 0030 B833     		add	r3, r3, #184
 845 0032 0FDA     		bge	.L38
 136:.\main.c      ****     {
 137:.\main.c      ****         data=(10+(30-10)*(data-(-206))/(-185-(-206)));
 846              		.loc 1 137 0 is_stmt 1
 847 0034 7B68     		ldr	r3, [r7, #4]
 848 0036 CE33     		add	r3, r3, #206
 849 0038 1A1C     		mov	r2, r3
 850 003a 131C     		mov	r3, r2
 851 003c 9B00     		lsl	r3, r3, #2
 852 003e 9B18     		add	r3, r3, r2
 853 0040 9B00     		lsl	r3, r3, #2
 854 0042 181C     		mov	r0, r3
 855 0044 1521     		mov	r1, #21
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 19


 856 0046 FFF7FEFF 		bl	__aeabi_idiv
 857 004a 031C     		mov	r3, r0
 858 004c 0A33     		add	r3, r3, #10
 859 004e 7B60     		str	r3, [r7, #4]
 138:.\main.c      ****         return data;
 860              		.loc 1 138 0
 861 0050 7B68     		ldr	r3, [r7, #4]
 862 0052 5BE0     		b	.L37
 863              	.L38:
 139:.\main.c      ****     }
 140:.\main.c      ****     else if ((data >= -185) && (data <= -145))
 864              		.loc 1 140 0
 865 0054 7B68     		ldr	r3, [r7, #4]
 866 0056 B933     		add	r3, r3, #185
 867 0058 12DB     		blt	.L39
 868              		.loc 1 140 0 is_stmt 0 discriminator 1
 869 005a 7B68     		ldr	r3, [r7, #4]
 870 005c 9033     		add	r3, r3, #144
 871 005e 0FDA     		bge	.L39
 141:.\main.c      ****     {
 142:.\main.c      ****         data=(30+(50-30)*(data-(-185))/(-145-(-185)));
 872              		.loc 1 142 0 is_stmt 1
 873 0060 7B68     		ldr	r3, [r7, #4]
 874 0062 B933     		add	r3, r3, #185
 875 0064 1A1C     		mov	r2, r3
 876 0066 131C     		mov	r3, r2
 877 0068 9B00     		lsl	r3, r3, #2
 878 006a 9B18     		add	r3, r3, r2
 879 006c 9B00     		lsl	r3, r3, #2
 880 006e 181C     		mov	r0, r3
 881 0070 2821     		mov	r1, #40
 882 0072 FFF7FEFF 		bl	__aeabi_idiv
 883 0076 031C     		mov	r3, r0
 884 0078 1E33     		add	r3, r3, #30
 885 007a 7B60     		str	r3, [r7, #4]
 143:.\main.c      ****         return data;
 886              		.loc 1 143 0
 887 007c 7B68     		ldr	r3, [r7, #4]
 888 007e 45E0     		b	.L37
 889              	.L39:
 144:.\main.c      ****     }
 145:.\main.c      ****     else if ((data >= -145) && (data <= -85))
 890              		.loc 1 145 0
 891 0080 7B68     		ldr	r3, [r7, #4]
 892 0082 9133     		add	r3, r3, #145
 893 0084 12DB     		blt	.L40
 894              		.loc 1 145 0 is_stmt 0 discriminator 1
 895 0086 7B68     		ldr	r3, [r7, #4]
 896 0088 5433     		add	r3, r3, #84
 897 008a 0FDA     		bge	.L40
 146:.\main.c      ****     {
 147:.\main.c      ****         data=(50+(70-50)*(data-(-145))/(-85-(-145)));
 898              		.loc 1 147 0 is_stmt 1
 899 008c 7B68     		ldr	r3, [r7, #4]
 900 008e 9133     		add	r3, r3, #145
 901 0090 1A1C     		mov	r2, r3
 902 0092 131C     		mov	r3, r2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 20


 903 0094 9B00     		lsl	r3, r3, #2
 904 0096 9B18     		add	r3, r3, r2
 905 0098 9B00     		lsl	r3, r3, #2
 906 009a 181C     		mov	r0, r3
 907 009c 3C21     		mov	r1, #60
 908 009e FFF7FEFF 		bl	__aeabi_idiv
 909 00a2 031C     		mov	r3, r0
 910 00a4 3233     		add	r3, r3, #50
 911 00a6 7B60     		str	r3, [r7, #4]
 148:.\main.c      ****         return data;
 912              		.loc 1 148 0
 913 00a8 7B68     		ldr	r3, [r7, #4]
 914 00aa 2FE0     		b	.L37
 915              	.L40:
 149:.\main.c      ****     }
 150:.\main.c      ****     else if ((data >= -85) && (data <= -48))
 916              		.loc 1 150 0
 917 00ac 7B68     		ldr	r3, [r7, #4]
 918 00ae 5533     		add	r3, r3, #85
 919 00b0 12DB     		blt	.L41
 920              		.loc 1 150 0 is_stmt 0 discriminator 1
 921 00b2 7B68     		ldr	r3, [r7, #4]
 922 00b4 2F33     		add	r3, r3, #47
 923 00b6 0FDA     		bge	.L41
 151:.\main.c      ****     {
 152:.\main.c      ****         data=(70+(80-70)*(data-(-85))/(-48-(-85)));
 924              		.loc 1 152 0 is_stmt 1
 925 00b8 7B68     		ldr	r3, [r7, #4]
 926 00ba 5533     		add	r3, r3, #85
 927 00bc 1A1C     		mov	r2, r3
 928 00be 131C     		mov	r3, r2
 929 00c0 9B00     		lsl	r3, r3, #2
 930 00c2 9B18     		add	r3, r3, r2
 931 00c4 5B00     		lsl	r3, r3, #1
 932 00c6 181C     		mov	r0, r3
 933 00c8 2521     		mov	r1, #37
 934 00ca FFF7FEFF 		bl	__aeabi_idiv
 935 00ce 031C     		mov	r3, r0
 936 00d0 4633     		add	r3, r3, #70
 937 00d2 7B60     		str	r3, [r7, #4]
 153:.\main.c      ****         return data;
 938              		.loc 1 153 0
 939 00d4 7B68     		ldr	r3, [r7, #4]
 940 00d6 19E0     		b	.L37
 941              	.L41:
 154:.\main.c      ****     }
 155:.\main.c      ****     else if ((data >= -48) && (data <= -22))
 942              		.loc 1 155 0
 943 00d8 7B68     		ldr	r3, [r7, #4]
 944 00da 3033     		add	r3, r3, #48
 945 00dc 12DB     		blt	.L42
 946              		.loc 1 155 0 is_stmt 0 discriminator 1
 947 00de 7B68     		ldr	r3, [r7, #4]
 948 00e0 1533     		add	r3, r3, #21
 949 00e2 0FDA     		bge	.L42
 156:.\main.c      ****     {
 157:.\main.c      ****         data=(80+(90-80)*(data-(-48))/(-22-(-48)));
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 21


 950              		.loc 1 157 0 is_stmt 1
 951 00e4 7B68     		ldr	r3, [r7, #4]
 952 00e6 3033     		add	r3, r3, #48
 953 00e8 1A1C     		mov	r2, r3
 954 00ea 131C     		mov	r3, r2
 955 00ec 9B00     		lsl	r3, r3, #2
 956 00ee 9B18     		add	r3, r3, r2
 957 00f0 5B00     		lsl	r3, r3, #1
 958 00f2 181C     		mov	r0, r3
 959 00f4 1A21     		mov	r1, #26
 960 00f6 FFF7FEFF 		bl	__aeabi_idiv
 961 00fa 031C     		mov	r3, r0
 962 00fc 5033     		add	r3, r3, #80
 963 00fe 7B60     		str	r3, [r7, #4]
 158:.\main.c      ****         return data;
 964              		.loc 1 158 0
 965 0100 7B68     		ldr	r3, [r7, #4]
 966 0102 03E0     		b	.L37
 967              	.L42:
 159:.\main.c      ****     }
 160:.\main.c      ****     
 161:.\main.c      ****     else
 162:.\main.c      ****     {
 163:.\main.c      ****         data = -200;
 968              		.loc 1 163 0
 969 0104 C823     		mov	r3, #200
 970 0106 5B42     		neg	r3, r3
 971 0108 7B60     		str	r3, [r7, #4]
 164:.\main.c      ****         return data;
 972              		.loc 1 164 0
 973 010a 7B68     		ldr	r3, [r7, #4]
 974              	.L37:
 165:.\main.c      ****     }
 166:.\main.c      **** }
 975              		.loc 1 166 0
 976 010c 181C     		mov	r0, r3
 977 010e BD46     		mov	sp, r7
 978 0110 02B0     		add	sp, sp, #8
 979              		@ sp needed
 980 0112 80BD     		pop	{r7, pc}
 981              		.cfi_endproc
 982              	.LFE41:
 983              		.size	roed_grader, .-roed_grader
 984              		.section	.text.groen_grader,"ax",%progbits
 985              		.align	2
 986              		.global	groen_grader
 987              		.code	16
 988              		.thumb_func
 989              		.type	groen_grader, %function
 990              	groen_grader:
 991              	.LFB42:
 167:.\main.c      **** 
 168:.\main.c      **** /***********************************Omregning til grader for grøn*********************************
 169:.\main.c      **** int groen_grader(int data)
 170:.\main.c      **** {
 992              		.loc 1 170 0
 993              		.cfi_startproc
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 22


 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 7860     		str	r0, [r7, #4]
 171:.\main.c      ****     if ((data >= -194) && (data <= -185))
 1003              		.loc 1 171 0
 1004 0008 7B68     		ldr	r3, [r7, #4]
 1005 000a C233     		add	r3, r3, #194
 1006 000c 11DB     		blt	.L44
 1007              		.loc 1 171 0 is_stmt 0 discriminator 1
 1008 000e 7B68     		ldr	r3, [r7, #4]
 1009 0010 B833     		add	r3, r3, #184
 1010 0012 0EDA     		bge	.L44
 172:.\main.c      ****     {
 173:.\main.c      ****         data=(0+(10-0)*(data-(-194))/(-185-(-194)));
 1011              		.loc 1 173 0 is_stmt 1
 1012 0014 7B68     		ldr	r3, [r7, #4]
 1013 0016 C233     		add	r3, r3, #194
 1014 0018 1A1C     		mov	r2, r3
 1015 001a 131C     		mov	r3, r2
 1016 001c 9B00     		lsl	r3, r3, #2
 1017 001e 9B18     		add	r3, r3, r2
 1018 0020 5B00     		lsl	r3, r3, #1
 1019 0022 181C     		mov	r0, r3
 1020 0024 0921     		mov	r1, #9
 1021 0026 FFF7FEFF 		bl	__aeabi_idiv
 1022 002a 031C     		mov	r3, r0
 1023 002c 7B60     		str	r3, [r7, #4]
 174:.\main.c      ****         return data; 
 1024              		.loc 1 174 0
 1025 002e 7B68     		ldr	r3, [r7, #4]
 1026 0030 71E0     		b	.L45
 1027              	.L44:
 175:.\main.c      ****     }
 176:.\main.c      ****     else if ((data >= -185) && (data <= -167))
 1028              		.loc 1 176 0
 1029 0032 7B68     		ldr	r3, [r7, #4]
 1030 0034 B933     		add	r3, r3, #185
 1031 0036 12DB     		blt	.L46
 1032              		.loc 1 176 0 is_stmt 0 discriminator 1
 1033 0038 7B68     		ldr	r3, [r7, #4]
 1034 003a A633     		add	r3, r3, #166
 1035 003c 0FDA     		bge	.L46
 177:.\main.c      ****     {
 178:.\main.c      ****         data=(10+(30-10)*(data-(-185))/(-167-(-185)));
 1036              		.loc 1 178 0 is_stmt 1
 1037 003e 7B68     		ldr	r3, [r7, #4]
 1038 0040 B933     		add	r3, r3, #185
 1039 0042 1A1C     		mov	r2, r3
 1040 0044 131C     		mov	r3, r2
 1041 0046 9B00     		lsl	r3, r3, #2
 1042 0048 9B18     		add	r3, r3, r2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 23


 1043 004a 9B00     		lsl	r3, r3, #2
 1044 004c 181C     		mov	r0, r3
 1045 004e 1221     		mov	r1, #18
 1046 0050 FFF7FEFF 		bl	__aeabi_idiv
 1047 0054 031C     		mov	r3, r0
 1048 0056 0A33     		add	r3, r3, #10
 1049 0058 7B60     		str	r3, [r7, #4]
 179:.\main.c      ****         return data;
 1050              		.loc 1 179 0
 1051 005a 7B68     		ldr	r3, [r7, #4]
 1052 005c 5BE0     		b	.L45
 1053              	.L46:
 180:.\main.c      ****     }
 181:.\main.c      ****     else if ((data >= -167) && (data <= -132))
 1054              		.loc 1 181 0
 1055 005e 7B68     		ldr	r3, [r7, #4]
 1056 0060 A733     		add	r3, r3, #167
 1057 0062 12DB     		blt	.L47
 1058              		.loc 1 181 0 is_stmt 0 discriminator 1
 1059 0064 7B68     		ldr	r3, [r7, #4]
 1060 0066 8333     		add	r3, r3, #131
 1061 0068 0FDA     		bge	.L47
 182:.\main.c      ****     {
 183:.\main.c      ****         data=(30+(50-30)*(data-(-167))/(-132-(-167)));
 1062              		.loc 1 183 0 is_stmt 1
 1063 006a 7B68     		ldr	r3, [r7, #4]
 1064 006c A733     		add	r3, r3, #167
 1065 006e 1A1C     		mov	r2, r3
 1066 0070 131C     		mov	r3, r2
 1067 0072 9B00     		lsl	r3, r3, #2
 1068 0074 9B18     		add	r3, r3, r2
 1069 0076 9B00     		lsl	r3, r3, #2
 1070 0078 181C     		mov	r0, r3
 1071 007a 2321     		mov	r1, #35
 1072 007c FFF7FEFF 		bl	__aeabi_idiv
 1073 0080 031C     		mov	r3, r0
 1074 0082 1E33     		add	r3, r3, #30
 1075 0084 7B60     		str	r3, [r7, #4]
 184:.\main.c      ****         return data;
 1076              		.loc 1 184 0
 1077 0086 7B68     		ldr	r3, [r7, #4]
 1078 0088 45E0     		b	.L45
 1079              	.L47:
 185:.\main.c      ****     }
 186:.\main.c      ****     else if ((data >= -132) && (data <= -70))
 1080              		.loc 1 186 0
 1081 008a 7B68     		ldr	r3, [r7, #4]
 1082 008c 8433     		add	r3, r3, #132
 1083 008e 12DB     		blt	.L48
 1084              		.loc 1 186 0 is_stmt 0 discriminator 1
 1085 0090 7B68     		ldr	r3, [r7, #4]
 1086 0092 4533     		add	r3, r3, #69
 1087 0094 0FDA     		bge	.L48
 187:.\main.c      ****     {
 188:.\main.c      ****         data=(50+(70-50)*(data-(-132))/(-70-(-132)));
 1088              		.loc 1 188 0 is_stmt 1
 1089 0096 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 24


 1090 0098 8433     		add	r3, r3, #132
 1091 009a 1A1C     		mov	r2, r3
 1092 009c 131C     		mov	r3, r2
 1093 009e 9B00     		lsl	r3, r3, #2
 1094 00a0 9B18     		add	r3, r3, r2
 1095 00a2 9B00     		lsl	r3, r3, #2
 1096 00a4 181C     		mov	r0, r3
 1097 00a6 3E21     		mov	r1, #62
 1098 00a8 FFF7FEFF 		bl	__aeabi_idiv
 1099 00ac 031C     		mov	r3, r0
 1100 00ae 3233     		add	r3, r3, #50
 1101 00b0 7B60     		str	r3, [r7, #4]
 189:.\main.c      ****         return data;
 1102              		.loc 1 189 0
 1103 00b2 7B68     		ldr	r3, [r7, #4]
 1104 00b4 2FE0     		b	.L45
 1105              	.L48:
 190:.\main.c      ****     }
 191:.\main.c      ****     else if ((data >= -70) && (data <= -31))
 1106              		.loc 1 191 0
 1107 00b6 7B68     		ldr	r3, [r7, #4]
 1108 00b8 4633     		add	r3, r3, #70
 1109 00ba 12DB     		blt	.L49
 1110              		.loc 1 191 0 is_stmt 0 discriminator 1
 1111 00bc 7B68     		ldr	r3, [r7, #4]
 1112 00be 1E33     		add	r3, r3, #30
 1113 00c0 0FDA     		bge	.L49
 192:.\main.c      ****     {
 193:.\main.c      ****         data=(70+(80-70)*(data-(-70))/(-31-(-70)));
 1114              		.loc 1 193 0 is_stmt 1
 1115 00c2 7B68     		ldr	r3, [r7, #4]
 1116 00c4 4633     		add	r3, r3, #70
 1117 00c6 1A1C     		mov	r2, r3
 1118 00c8 131C     		mov	r3, r2
 1119 00ca 9B00     		lsl	r3, r3, #2
 1120 00cc 9B18     		add	r3, r3, r2
 1121 00ce 5B00     		lsl	r3, r3, #1
 1122 00d0 181C     		mov	r0, r3
 1123 00d2 2721     		mov	r1, #39
 1124 00d4 FFF7FEFF 		bl	__aeabi_idiv
 1125 00d8 031C     		mov	r3, r0
 1126 00da 4633     		add	r3, r3, #70
 1127 00dc 7B60     		str	r3, [r7, #4]
 194:.\main.c      ****         return data;
 1128              		.loc 1 194 0
 1129 00de 7B68     		ldr	r3, [r7, #4]
 1130 00e0 19E0     		b	.L45
 1131              	.L49:
 195:.\main.c      ****     }
 196:.\main.c      ****     else if ((data >= -31) && (data <= 9))
 1132              		.loc 1 196 0
 1133 00e2 7B68     		ldr	r3, [r7, #4]
 1134 00e4 1F33     		add	r3, r3, #31
 1135 00e6 12DB     		blt	.L50
 1136              		.loc 1 196 0 is_stmt 0 discriminator 1
 1137 00e8 7B68     		ldr	r3, [r7, #4]
 1138 00ea 092B     		cmp	r3, #9
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 25


 1139 00ec 0FDC     		bgt	.L50
 197:.\main.c      ****     {
 198:.\main.c      ****         data=(80+(90-80)*(data-(-31))/(9-(-31)));
 1140              		.loc 1 198 0 is_stmt 1
 1141 00ee 7B68     		ldr	r3, [r7, #4]
 1142 00f0 1F33     		add	r3, r3, #31
 1143 00f2 1A1C     		mov	r2, r3
 1144 00f4 131C     		mov	r3, r2
 1145 00f6 9B00     		lsl	r3, r3, #2
 1146 00f8 9B18     		add	r3, r3, r2
 1147 00fa 5B00     		lsl	r3, r3, #1
 1148 00fc 181C     		mov	r0, r3
 1149 00fe 2821     		mov	r1, #40
 1150 0100 FFF7FEFF 		bl	__aeabi_idiv
 1151 0104 031C     		mov	r3, r0
 1152 0106 5033     		add	r3, r3, #80
 1153 0108 7B60     		str	r3, [r7, #4]
 199:.\main.c      ****         return data;
 1154              		.loc 1 199 0
 1155 010a 7B68     		ldr	r3, [r7, #4]
 1156 010c 03E0     		b	.L45
 1157              	.L50:
 200:.\main.c      ****     }
 201:.\main.c      ****     
 202:.\main.c      ****     else
 203:.\main.c      ****     {
 204:.\main.c      ****         data = -200;
 1158              		.loc 1 204 0
 1159 010e C823     		mov	r3, #200
 1160 0110 5B42     		neg	r3, r3
 1161 0112 7B60     		str	r3, [r7, #4]
 205:.\main.c      ****         
 206:.\main.c      ****         return data;
 1162              		.loc 1 206 0
 1163 0114 7B68     		ldr	r3, [r7, #4]
 1164              	.L45:
 207:.\main.c      ****     }
 208:.\main.c      **** }
 1165              		.loc 1 208 0
 1166 0116 181C     		mov	r0, r3
 1167 0118 BD46     		mov	sp, r7
 1168 011a 02B0     		add	sp, sp, #8
 1169              		@ sp needed
 1170 011c 80BD     		pop	{r7, pc}
 1171              		.cfi_endproc
 1172              	.LFE42:
 1173              		.size	groen_grader, .-groen_grader
 1174              		.global	__aeabi_ddiv
 1175 011e C046     		.section	.text.differentiator,"ax",%progbits
 1176              		.align	2
 1177              		.global	differentiator
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	differentiator, %function
 1181              	differentiator:
 1182              	.LFB43:
 209:.\main.c      **** 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 26


 210:.\main.c      **** /***********************************Differentiator***********************************/
 211:.\main.c      **** 
 212:.\main.c      **** signed int differentiator(signed int new)
 213:.\main.c      **** {
 1183              		.loc 1 213 0
 1184              		.cfi_startproc
 1185 0000 90B5     		push	{r4, r7, lr}
 1186              		.cfi_def_cfa_offset 12
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 83B0     		sub	sp, sp, #12
 1191              		.cfi_def_cfa_offset 24
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
 214:.\main.c      ****    diff = (new - old)/0.01;
 1195              		.loc 1 214 0
 1196 0008 204B     		ldr	r3, .L55
 1197 000a 1B88     		ldrh	r3, [r3]
 1198 000c 1BB2     		sxth	r3, r3
 1199 000e 7A68     		ldr	r2, [r7, #4]
 1200 0010 D31A     		sub	r3, r2, r3
 1201 0012 181C     		mov	r0, r3
 1202 0014 FFF7FEFF 		bl	__aeabi_i2d
 1203 0018 031C     		mov	r3, r0
 1204 001a 0C1C     		mov	r4, r1
 1205 001c 181C     		mov	r0, r3
 1206 001e 211C     		mov	r1, r4
 1207 0020 1B4A     		ldr	r2, .L55+4
 1208 0022 1C4B     		ldr	r3, .L55+8
 1209 0024 FFF7FEFF 		bl	__aeabi_ddiv
 1210 0028 031C     		mov	r3, r0
 1211 002a 0C1C     		mov	r4, r1
 1212 002c 181C     		mov	r0, r3
 1213 002e 211C     		mov	r1, r4
 1214 0030 FFF7FEFF 		bl	__aeabi_d2iz
 1215 0034 031C     		mov	r3, r0
 1216 0036 9AB2     		uxth	r2, r3
 1217 0038 174B     		ldr	r3, .L55+12
 1218 003a 1A80     		strh	r2, [r3]
 215:.\main.c      ****    old = new;
 1219              		.loc 1 215 0
 1220 003c 7B68     		ldr	r3, [r7, #4]
 1221 003e 9AB2     		uxth	r2, r3
 1222 0040 124B     		ldr	r3, .L55
 1223 0042 1A80     		strh	r2, [r3]
 216:.\main.c      ****    //return diff;
 217:.\main.c      ****     if(diff > 1)        //Stigende 
 1224              		.loc 1 217 0
 1225 0044 144B     		ldr	r3, .L55+12
 1226 0046 1B88     		ldrh	r3, [r3]
 1227 0048 1BB2     		sxth	r3, r3
 1228 004a 012B     		cmp	r3, #1
 1229 004c 06DD     		ble	.L52
 218:.\main.c      ****     {
 219:.\main.c      ****         diff = 10;
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 27


 1230              		.loc 1 219 0
 1231 004e 124B     		ldr	r3, .L55+12
 1232 0050 0A22     		mov	r2, #10
 1233 0052 1A80     		strh	r2, [r3]
 220:.\main.c      ****         return diff;
 1234              		.loc 1 220 0
 1235 0054 104B     		ldr	r3, .L55+12
 1236 0056 1B88     		ldrh	r3, [r3]
 1237 0058 1BB2     		sxth	r3, r3
 1238 005a 13E0     		b	.L53
 1239              	.L52:
 221:.\main.c      ****     }
 222:.\main.c      ****     
 223:.\main.c      ****     else if (diff < 1)  //faldene 
 1240              		.loc 1 223 0
 1241 005c 0E4B     		ldr	r3, .L55+12
 1242 005e 1B88     		ldrh	r3, [r3]
 1243 0060 1BB2     		sxth	r3, r3
 1244 0062 002B     		cmp	r3, #0
 1245 0064 07DC     		bgt	.L54
 224:.\main.c      ****     {
 225:.\main.c      ****         diff = -10;
 1246              		.loc 1 225 0
 1247 0066 0C4B     		ldr	r3, .L55+12
 1248 0068 0A22     		mov	r2, #10
 1249 006a 5242     		neg	r2, r2
 1250 006c 1A80     		strh	r2, [r3]
 226:.\main.c      ****         return diff;
 1251              		.loc 1 226 0
 1252 006e 0A4B     		ldr	r3, .L55+12
 1253 0070 1B88     		ldrh	r3, [r3]
 1254 0072 1BB2     		sxth	r3, r3
 1255 0074 06E0     		b	.L53
 1256              	.L54:
 227:.\main.c      ****     }
 228:.\main.c      ****     
 229:.\main.c      ****     else
 230:.\main.c      ****     {
 231:.\main.c      ****         diff=-200;
 1257              		.loc 1 231 0
 1258 0076 084B     		ldr	r3, .L55+12
 1259 0078 C822     		mov	r2, #200
 1260 007a 5242     		neg	r2, r2
 1261 007c 1A80     		strh	r2, [r3]
 232:.\main.c      ****         return diff;
 1262              		.loc 1 232 0
 1263 007e 064B     		ldr	r3, .L55+12
 1264 0080 1B88     		ldrh	r3, [r3]
 1265 0082 1BB2     		sxth	r3, r3
 1266              	.L53:
 233:.\main.c      ****     }
 234:.\main.c      **** }
 1267              		.loc 1 234 0
 1268 0084 181C     		mov	r0, r3
 1269 0086 BD46     		mov	sp, r7
 1270 0088 03B0     		add	sp, sp, #12
 1271              		@ sp needed
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 28


 1272 008a 90BD     		pop	{r4, r7, pc}
 1273              	.L56:
 1274              		.align	2
 1275              	.L55:
 1276 008c 00000000 		.word	old
 1277 0090 7B14AE47 		.word	1202590843
 1278 0094 E17A843F 		.word	1065646817
 1279 0098 00000000 		.word	diff
 1280              		.cfi_endproc
 1281              	.LFE43:
 1282              		.size	differentiator, .-differentiator
 1283              		.section	.text.ADC_interrupt,"ax",%progbits
 1284              		.align	2
 1285              		.global	ADC_interrupt
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	ADC_interrupt, %function
 1289              	ADC_interrupt:
 1290              	.LFB44:
 235:.\main.c      **** 
 236:.\main.c      **** /***********************************ISR***********************************/
 237:.\main.c      **** 
 238:.\main.c      **** CY_ISR(ADC_interrupt)
 239:.\main.c      **** {  
 1291              		.loc 1 239 0
 1292              		.cfi_startproc
 1293 0000 80B5     		push	{r7, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 240:.\main.c      ****     accroed = ADC_GetResult16(0)-1010+7;
 1299              		.loc 1 240 0
 1300 0004 0020     		mov	r0, #0
 1301 0006 FFF7FEFF 		bl	ADC_GetResult16
 1302 000a 031C     		mov	r3, r0
 1303 000c 9BB2     		uxth	r3, r3
 1304 000e 504A     		ldr	r2, .L59
 1305 0010 9446     		mov	ip, r2
 1306 0012 6344     		add	r3, r3, ip
 1307 0014 9BB2     		uxth	r3, r3
 1308 0016 9AB2     		uxth	r2, r3
 1309 0018 4E4B     		ldr	r3, .L59+4
 1310 001a 1A80     		strh	r2, [r3]
 241:.\main.c      ****     accgroen = ADC_GetResult16(1)-1024+52;
 1311              		.loc 1 241 0
 1312 001c 0120     		mov	r0, #1
 1313 001e FFF7FEFF 		bl	ADC_GetResult16
 1314 0022 031C     		mov	r3, r0
 1315 0024 9BB2     		uxth	r3, r3
 1316 0026 4C4A     		ldr	r2, .L59+8
 1317 0028 9446     		mov	ip, r2
 1318 002a 6344     		add	r3, r3, ip
 1319 002c 9BB2     		uxth	r3, r3
 1320 002e 9AB2     		uxth	r2, r3
 1321 0030 4A4B     		ldr	r3, .L59+12
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 29


 1322 0032 1A80     		strh	r2, [r3]
 242:.\main.c      ****     EMG = ADC_GetResult16(2);
 1323              		.loc 1 242 0
 1324 0034 0220     		mov	r0, #2
 1325 0036 FFF7FEFF 		bl	ADC_GetResult16
 1326 003a 031C     		mov	r3, r0
 1327 003c 1A1C     		mov	r2, r3
 1328 003e 484B     		ldr	r3, .L59+16
 1329 0040 1A80     		strh	r2, [r3]
 243:.\main.c      ****     
 244:.\main.c      ****     data_ready = TRUE;
 1330              		.loc 1 244 0
 1331 0042 484B     		ldr	r3, .L59+20
 1332 0044 0122     		mov	r2, #1
 1333 0046 1A70     		strb	r2, [r3]
 245:.\main.c      ****     
 246:.\main.c      ****     /* Databehandling */
 247:.\main.c      ****          
 248:.\main.c      ****     if(data_ready)
 1334              		.loc 1 248 0
 1335 0048 464B     		ldr	r3, .L59+20
 1336 004a 1B78     		ldrb	r3, [r3]
 1337 004c 002B     		cmp	r3, #0
 1338 004e 00D1     		bne	.LCB1009
 1339 0050 7CE0     		b	.L57	@long jump
 1340              	.LCB1009:
 249:.\main.c      ****     {   
 250:.\main.c      ****         /* Accelerometerne*/
 251:.\main.c      ****         StartMeasuring
 1341              		.loc 1 251 0
 1342 0052 0120     		mov	r0, #1
 1343 0054 FFF7FEFF 		bl	Control_Reg_1_Write
 252:.\main.c      ****         mav_data_roed = mavg_filter(accroed);           //Moving average filter til kanal 1
 1344              		.loc 1 252 0
 1345 0058 3E4B     		ldr	r3, .L59+4
 1346 005a 1B88     		ldrh	r3, [r3]
 1347 005c 1BB2     		sxth	r3, r3
 1348 005e 181C     		mov	r0, r3
 1349 0060 FFF7FEFF 		bl	mavg_filter
 1350 0064 031C     		mov	r3, r0
 1351 0066 9AB2     		uxth	r2, r3
 1352 0068 3F4B     		ldr	r3, .L59+24
 1353 006a 1A80     		strh	r2, [r3]
 253:.\main.c      ****         grader_roed = roed_grader(mav_data_roed);       //Grader tages til det filtrede signal
 1354              		.loc 1 253 0
 1355 006c 3E4B     		ldr	r3, .L59+24
 1356 006e 1B88     		ldrh	r3, [r3]
 1357 0070 1BB2     		sxth	r3, r3
 1358 0072 181C     		mov	r0, r3
 1359 0074 FFF7FEFF 		bl	roed_grader
 1360 0078 031C     		mov	r3, r0
 1361 007a 9AB2     		uxth	r2, r3
 1362 007c 3B4B     		ldr	r3, .L59+28
 1363 007e 1A80     		strh	r2, [r3]
 254:.\main.c      ****         
 255:.\main.c      ****         mav_data_groen = mavg_filter2(accgroen);        //Moving average filter til kanal 2
 1364              		.loc 1 255 0
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 30


 1365 0080 364B     		ldr	r3, .L59+12
 1366 0082 1B88     		ldrh	r3, [r3]
 1367 0084 1BB2     		sxth	r3, r3
 1368 0086 181C     		mov	r0, r3
 1369 0088 FFF7FEFF 		bl	mavg_filter2
 1370 008c 031C     		mov	r3, r0
 1371 008e 9AB2     		uxth	r2, r3
 1372 0090 374B     		ldr	r3, .L59+32
 1373 0092 1A80     		strh	r2, [r3]
 256:.\main.c      ****         grader_groen = groen_grader(mav_data_groen);    //Grader tages til det filtrede signal
 1374              		.loc 1 256 0
 1375 0094 364B     		ldr	r3, .L59+32
 1376 0096 1B88     		ldrh	r3, [r3]
 1377 0098 1BB2     		sxth	r3, r3
 1378 009a 181C     		mov	r0, r3
 1379 009c FFF7FEFF 		bl	groen_grader
 1380 00a0 031C     		mov	r3, r0
 1381 00a2 9AB2     		uxth	r2, r3
 1382 00a4 334B     		ldr	r3, .L59+36
 1383 00a6 1A80     		strh	r2, [r3]
 257:.\main.c      **** 
 258:.\main.c      ****         samlet_grader=grader_roed+grader_groen;         //Graderne lægges sammen, således vinklen
 1384              		.loc 1 258 0
 1385 00a8 304B     		ldr	r3, .L59+28
 1386 00aa 1B88     		ldrh	r3, [r3]
 1387 00ac 9AB2     		uxth	r2, r3
 1388 00ae 314B     		ldr	r3, .L59+36
 1389 00b0 1B88     		ldrh	r3, [r3]
 1390 00b2 9BB2     		uxth	r3, r3
 1391 00b4 D318     		add	r3, r2, r3
 1392 00b6 9BB2     		uxth	r3, r3
 1393 00b8 9AB2     		uxth	r2, r3
 1394 00ba 2F4B     		ldr	r3, .L59+40
 1395 00bc 1A80     		strh	r2, [r3]
 259:.\main.c      ****         StopMeasuring
 1396              		.loc 1 259 0
 1397 00be 0020     		mov	r0, #0
 1398 00c0 FFF7FEFF 		bl	Control_Reg_1_Write
 260:.\main.c      ****         
 261:.\main.c      ****         /* EMG */
 262:.\main.c      ****         low_pass_data = low_pass_filter(EMG);        
 1399              		.loc 1 262 0
 1400 00c4 264B     		ldr	r3, .L59+16
 1401 00c6 1B88     		ldrh	r3, [r3]
 1402 00c8 1BB2     		sxth	r3, r3
 1403 00ca 181C     		mov	r0, r3
 1404 00cc FFF7FEFF 		bl	low_pass_filter
 1405 00d0 031C     		mov	r3, r0
 1406 00d2 9AB2     		uxth	r2, r3
 1407 00d4 294B     		ldr	r3, .L59+44
 1408 00d6 1A80     		strh	r2, [r3]
 263:.\main.c      ****         diff_data = differentiator(low_pass_data);
 1409              		.loc 1 263 0
 1410 00d8 284B     		ldr	r3, .L59+44
 1411 00da 1B88     		ldrh	r3, [r3]
 1412 00dc 1BB2     		sxth	r3, r3
 1413 00de 181C     		mov	r0, r3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 31


 1414 00e0 FFF7FEFF 		bl	differentiator
 1415 00e4 031C     		mov	r3, r0
 1416 00e6 9AB2     		uxth	r2, r3
 1417 00e8 254B     		ldr	r3, .L59+48
 1418 00ea 1A80     		strh	r2, [r3]
 264:.\main.c      ****         
 265:.\main.c      ****         
 266:.\main.c      ****         
 267:.\main.c      ****         UART_UartPutChar(samlet_grader);                //plottes tilbage i MATLAB
 1419              		.loc 1 267 0
 1420 00ec 224B     		ldr	r3, .L59+40
 1421 00ee 1B88     		ldrh	r3, [r3]
 1422 00f0 1BB2     		sxth	r3, r3
 1423 00f2 181C     		mov	r0, r3
 1424 00f4 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 268:.\main.c      ****         UART_UartPutChar(samlet_grader>>8);
 1425              		.loc 1 268 0
 1426 00f8 1F4B     		ldr	r3, .L59+40
 1427 00fa 1B88     		ldrh	r3, [r3]
 1428 00fc 1BB2     		sxth	r3, r3
 1429 00fe 1B12     		asr	r3, r3, #8
 1430 0100 9BB2     		uxth	r3, r3
 1431 0102 1BB2     		sxth	r3, r3
 1432 0104 181C     		mov	r0, r3
 1433 0106 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 269:.\main.c      ****        
 270:.\main.c      ****         UART_UartPutChar(counter);             
 1434              		.loc 1 270 0
 1435 010a 1E4B     		ldr	r3, .L59+52
 1436 010c 1B88     		ldrh	r3, [r3]
 1437 010e 1BB2     		sxth	r3, r3
 1438 0110 181C     		mov	r0, r3
 1439 0112 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 271:.\main.c      ****         UART_UartPutChar(counter>>8);
 1440              		.loc 1 271 0
 1441 0116 1B4B     		ldr	r3, .L59+52
 1442 0118 1B88     		ldrh	r3, [r3]
 1443 011a 1BB2     		sxth	r3, r3
 1444 011c 1B12     		asr	r3, r3, #8
 1445 011e 9BB2     		uxth	r3, r3
 1446 0120 1BB2     		sxth	r3, r3
 1447 0122 181C     		mov	r0, r3
 1448 0124 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 272:.\main.c      ****         
 273:.\main.c      ****         UART_UartPutChar(diff_data);
 1449              		.loc 1 273 0
 1450 0128 154B     		ldr	r3, .L59+48
 1451 012a 1B88     		ldrh	r3, [r3]
 1452 012c 1BB2     		sxth	r3, r3
 1453 012e 181C     		mov	r0, r3
 1454 0130 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 274:.\main.c      ****         UART_UartPutChar(diff_data>>8);
 1455              		.loc 1 274 0
 1456 0134 124B     		ldr	r3, .L59+48
 1457 0136 1B88     		ldrh	r3, [r3]
 1458 0138 1BB2     		sxth	r3, r3
 1459 013a 1B12     		asr	r3, r3, #8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 32


 1460 013c 9BB2     		uxth	r3, r3
 1461 013e 1BB2     		sxth	r3, r3
 1462 0140 181C     		mov	r0, r3
 1463 0142 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 275:.\main.c      ****         
 276:.\main.c      ****         data_ready = FALSE;
 1464              		.loc 1 276 0
 1465 0146 074B     		ldr	r3, .L59+20
 1466 0148 0022     		mov	r2, #0
 1467 014a 1A70     		strb	r2, [r3]
 1468              	.L57:
 277:.\main.c      ****     }
 278:.\main.c      **** }
 1469              		.loc 1 278 0
 1470 014c BD46     		mov	sp, r7
 1471              		@ sp needed
 1472 014e 80BD     		pop	{r7, pc}
 1473              	.L60:
 1474              		.align	2
 1475              	.L59:
 1476 0150 15FCFFFF 		.word	-1003
 1477 0154 00000000 		.word	accroed
 1478 0158 34FCFFFF 		.word	-972
 1479 015c 00000000 		.word	accgroen
 1480 0160 00000000 		.word	EMG
 1481 0164 00000000 		.word	data_ready
 1482 0168 00000000 		.word	mav_data_roed
 1483 016c 00000000 		.word	grader_roed
 1484 0170 00000000 		.word	mav_data_groen
 1485 0174 00000000 		.word	grader_groen
 1486 0178 00000000 		.word	samlet_grader
 1487 017c 00000000 		.word	low_pass_data
 1488 0180 00000000 		.word	diff_data
 1489 0184 00000000 		.word	counter
 1490              		.cfi_endproc
 1491              	.LFE44:
 1492              		.size	ADC_interrupt, .-ADC_interrupt
 1493              		.section	.text.Pin_SW2_handler,"ax",%progbits
 1494              		.align	2
 1495              		.global	Pin_SW2_handler
 1496              		.code	16
 1497              		.thumb_func
 1498              		.type	Pin_SW2_handler, %function
 1499              	Pin_SW2_handler:
 1500              	.LFB45:
 279:.\main.c      **** 
 280:.\main.c      **** CY_ISR(Pin_SW2_handler)
 281:.\main.c      **** {
 1501              		.loc 1 281 0
 1502              		.cfi_startproc
 1503 0000 80B5     		push	{r7, lr}
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 00AF     		add	r7, sp, #0
 1508              		.cfi_def_cfa_register 7
 282:.\main.c      ****     
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 33


 283:.\main.c      ****     if (j==0)
 1509              		.loc 1 283 0
 1510 0004 104B     		ldr	r3, .L64
 1511 0006 1B88     		ldrh	r3, [r3]
 1512 0008 002B     		cmp	r3, #0
 1513 000a 0BD1     		bne	.L62
 284:.\main.c      ****     {
 285:.\main.c      ****         ADC_StartConvert();
 1514              		.loc 1 285 0
 1515 000c FFF7FEFF 		bl	ADC_StartConvert
 286:.\main.c      ****         j++;
 1516              		.loc 1 286 0
 1517 0010 0D4B     		ldr	r3, .L64
 1518 0012 1B88     		ldrh	r3, [r3]
 1519 0014 9BB2     		uxth	r3, r3
 1520 0016 9BB2     		uxth	r3, r3
 1521 0018 0133     		add	r3, r3, #1
 1522 001a 9BB2     		uxth	r3, r3
 1523 001c 9AB2     		uxth	r2, r3
 1524 001e 0A4B     		ldr	r3, .L64
 1525 0020 1A80     		strh	r2, [r3]
 1526 0022 04E0     		b	.L63
 1527              	.L62:
 287:.\main.c      ****     }
 288:.\main.c      ****     
 289:.\main.c      ****     else 
 290:.\main.c      ****     {
 291:.\main.c      ****         ADC_StopConvert();
 1528              		.loc 1 291 0
 1529 0024 FFF7FEFF 		bl	ADC_StopConvert
 292:.\main.c      ****         j=0;
 1530              		.loc 1 292 0
 1531 0028 074B     		ldr	r3, .L64
 1532 002a 0022     		mov	r2, #0
 1533 002c 1A80     		strh	r2, [r3]
 1534              	.L63:
 293:.\main.c      ****     }
 294:.\main.c      ****     Pin_Green_Write(~ Pin_Green_Read());
 1535              		.loc 1 294 0
 1536 002e FFF7FEFF 		bl	Pin_Green_Read
 1537 0032 031C     		mov	r3, r0
 1538 0034 DB43     		mvn	r3, r3
 1539 0036 DBB2     		uxtb	r3, r3
 1540 0038 181C     		mov	r0, r3
 1541 003a FFF7FEFF 		bl	Pin_Green_Write
 295:.\main.c      ****     Pin_SW2_ClearInterrupt();
 1542              		.loc 1 295 0
 1543 003e FFF7FEFF 		bl	Pin_SW2_ClearInterrupt
 296:.\main.c      **** }
 1544              		.loc 1 296 0
 1545 0042 BD46     		mov	sp, r7
 1546              		@ sp needed
 1547 0044 80BD     		pop	{r7, pc}
 1548              	.L65:
 1549 0046 C046     		.align	2
 1550              	.L64:
 1551 0048 00000000 		.word	j
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 34


 1552              		.cfi_endproc
 1553              	.LFE45:
 1554              		.size	Pin_SW2_handler, .-Pin_SW2_handler
 1555              		.section	.text.Timer_interrupt,"ax",%progbits
 1556              		.align	2
 1557              		.global	Timer_interrupt
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	Timer_interrupt, %function
 1561              	Timer_interrupt:
 1562              	.LFB46:
 297:.\main.c      **** 
 298:.\main.c      **** CY_ISR(Timer_interrupt)
 299:.\main.c      **** {
 1563              		.loc 1 299 0
 1564              		.cfi_startproc
 1565 0000 80B5     		push	{r7, lr}
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569 0002 00AF     		add	r7, sp, #0
 1570              		.cfi_def_cfa_register 7
 300:.\main.c      ****     counter=Timer_1_ReadCapture();
 1571              		.loc 1 300 0
 1572 0004 FFF7FEFF 		bl	Timer_1_ReadCapture
 1573 0008 031C     		mov	r3, r0
 1574 000a 9AB2     		uxth	r2, r3
 1575 000c 014B     		ldr	r3, .L67
 1576 000e 1A80     		strh	r2, [r3]
 301:.\main.c      **** }
 1577              		.loc 1 301 0
 1578 0010 BD46     		mov	sp, r7
 1579              		@ sp needed
 1580 0012 80BD     		pop	{r7, pc}
 1581              	.L68:
 1582              		.align	2
 1583              	.L67:
 1584 0014 00000000 		.word	counter
 1585              		.cfi_endproc
 1586              	.LFE46:
 1587              		.size	Timer_interrupt, .-Timer_interrupt
 1588              		.section	.text.main,"ax",%progbits
 1589              		.align	2
 1590              		.global	main
 1591              		.code	16
 1592              		.thumb_func
 1593              		.type	main, %function
 1594              	main:
 1595              	.LFB47:
 302:.\main.c      **** 
 303:.\main.c      **** /***********************************Main***********************************/
 304:.\main.c      **** int main()
 305:.\main.c      **** {   
 1596              		.loc 1 305 0
 1597              		.cfi_startproc
 1598 0000 80B5     		push	{r7, lr}
 1599              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 35


 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 306:.\main.c      ****     pin_SW2_int_StartEx(Pin_SW2_handler);
 1604              		.loc 1 306 0
 1605 0004 0E4B     		ldr	r3, .L71
 1606 0006 181C     		mov	r0, r3
 1607 0008 FFF7FEFF 		bl	pin_SW2_int_StartEx
 307:.\main.c      ****     ADC_ISR_StartEx(ADC_interrupt);
 1608              		.loc 1 307 0
 1609 000c 0D4B     		ldr	r3, .L71+4
 1610 000e 181C     		mov	r0, r3
 1611 0010 FFF7FEFF 		bl	ADC_ISR_StartEx
 308:.\main.c      ****     Timer_ISR_StartEx(Timer_interrupt);
 1612              		.loc 1 308 0
 1613 0014 0C4B     		ldr	r3, .L71+8
 1614 0016 181C     		mov	r0, r3
 1615 0018 FFF7FEFF 		bl	Timer_ISR_StartEx
 309:.\main.c      ****     CyGlobalIntEnable;
 1616              		.loc 1 309 0
 1617              	@ 309 ".\main.c" 1
 1618 001c 62B6     		CPSIE   i
 1619              	@ 0 "" 2
 310:.\main.c      ****     UART_Start();                       /* Initialize ADC */    
 1620              		.loc 1 310 0
 1621              		.code	16
 1622 001e FFF7FEFF 		bl	UART_Start
 311:.\main.c      ****     ADC_Start();                        /* Initialize ADC */
 1623              		.loc 1 311 0
 1624 0022 FFF7FEFF 		bl	ADC_Start
 312:.\main.c      ****     Timer_1_Start();
 1625              		.loc 1 312 0
 1626 0026 FFF7FEFF 		bl	Timer_1_Start
 313:.\main.c      ****     Timer_ISR_Enable();
 1627              		.loc 1 313 0
 1628 002a FFF7FEFF 		bl	Timer_ISR_Enable
 314:.\main.c      ****     ADC_IRQ_Enable();                   /* Enable ADC interrupts */   
 1629              		.loc 1 314 0
 1630 002e FFF7FEFF 		bl	ADC_IRQ_Enable
 315:.\main.c      ****     CySysPmSleep();
 1631              		.loc 1 315 0
 1632 0032 FFF7FEFF 		bl	CySysPmSleep
 316:.\main.c      ****     return 0;
 1633              		.loc 1 316 0
 1634 0036 0023     		mov	r3, #0
 317:.\main.c      ****    
 318:.\main.c      **** }...
 1635              		.loc 1 318 0
 1636 0038 181C     		mov	r0, r3
 1637 003a BD46     		mov	sp, r7
 1638              		@ sp needed
 1639 003c 80BD     		pop	{r7, pc}
 1640              	.L72:
 1641 003e C046     		.align	2
 1642              	.L71:
 1643 0040 00000000 		.word	Pin_SW2_handler
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 36


 1644 0044 00000000 		.word	ADC_interrupt
 1645 0048 00000000 		.word	Timer_interrupt
 1646              		.cfi_endproc
 1647              	.LFE47:
 1648              		.size	main, .-main
 1649              		.text
 1650              	.Letext0:
 1651              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1652              		.section	.debug_info,"",%progbits
 1653              	.Ldebug_info0:
 1654 0000 6F040000 		.4byte	0x46f
 1655 0004 0400     		.2byte	0x4
 1656 0006 00000000 		.4byte	.Ldebug_abbrev0
 1657 000a 04       		.byte	0x4
 1658 000b 01       		.uleb128 0x1
 1659 000c 75020000 		.4byte	.LASF55
 1660 0010 01       		.byte	0x1
 1661 0011 66000000 		.4byte	.LASF56
 1662 0015 7F010000 		.4byte	.LASF57
 1663 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1664 001d 00000000 		.4byte	0
 1665 0021 00000000 		.4byte	.Ldebug_line0
 1666 0025 02       		.uleb128 0x2
 1667 0026 01       		.byte	0x1
 1668 0027 06       		.byte	0x6
 1669 0028 5A000000 		.4byte	.LASF0
 1670 002c 02       		.uleb128 0x2
 1671 002d 01       		.byte	0x1
 1672 002e 08       		.byte	0x8
 1673 002f 61010000 		.4byte	.LASF1
 1674 0033 02       		.uleb128 0x2
 1675 0034 02       		.byte	0x2
 1676 0035 05       		.byte	0x5
 1677 0036 C4010000 		.4byte	.LASF2
 1678 003a 02       		.uleb128 0x2
 1679 003b 02       		.byte	0x2
 1680 003c 07       		.byte	0x7
 1681 003d E1000000 		.4byte	.LASF3
 1682 0041 02       		.uleb128 0x2
 1683 0042 04       		.byte	0x4
 1684 0043 05       		.byte	0x5
 1685 0044 6F000000 		.4byte	.LASF4
 1686 0048 02       		.uleb128 0x2
 1687 0049 04       		.byte	0x4
 1688 004a 07       		.byte	0x7
 1689 004b BD000000 		.4byte	.LASF5
 1690 004f 02       		.uleb128 0x2
 1691 0050 08       		.byte	0x8
 1692 0051 05       		.byte	0x5
 1693 0052 4C000000 		.4byte	.LASF6
 1694 0056 02       		.uleb128 0x2
 1695 0057 08       		.byte	0x8
 1696 0058 07       		.byte	0x7
 1697 0059 29000000 		.4byte	.LASF7
 1698 005d 03       		.uleb128 0x3
 1699 005e 04       		.byte	0x4
 1700 005f 05       		.byte	0x5
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 37


 1701 0060 696E7400 		.ascii	"int\000"
 1702 0064 02       		.uleb128 0x2
 1703 0065 04       		.byte	0x4
 1704 0066 07       		.byte	0x7
 1705 0067 B0000000 		.4byte	.LASF8
 1706 006b 04       		.uleb128 0x4
 1707 006c 78000000 		.4byte	.LASF9
 1708 0070 02       		.byte	0x2
 1709 0071 3801     		.2byte	0x138
 1710 0073 2C000000 		.4byte	0x2c
 1711 0077 04       		.uleb128 0x4
 1712 0078 96000000 		.4byte	.LASF10
 1713 007c 02       		.byte	0x2
 1714 007d 3A01     		.2byte	0x13a
 1715 007f 48000000 		.4byte	0x48
 1716 0083 04       		.uleb128 0x4
 1717 0084 61020000 		.4byte	.LASF11
 1718 0088 02       		.byte	0x2
 1719 0089 3C01     		.2byte	0x13c
 1720 008b 33000000 		.4byte	0x33
 1721 008f 02       		.uleb128 0x2
 1722 0090 04       		.byte	0x4
 1723 0091 04       		.byte	0x4
 1724 0092 51010000 		.4byte	.LASF12
 1725 0096 02       		.uleb128 0x2
 1726 0097 08       		.byte	0x8
 1727 0098 04       		.byte	0x4
 1728 0099 8F000000 		.4byte	.LASF13
 1729 009d 02       		.uleb128 0x2
 1730 009e 01       		.byte	0x1
 1731 009f 08       		.byte	0x8
 1732 00a0 03020000 		.4byte	.LASF14
 1733 00a4 02       		.uleb128 0x2
 1734 00a5 04       		.byte	0x4
 1735 00a6 07       		.byte	0x7
 1736 00a7 0D010000 		.4byte	.LASF15
 1737 00ab 05       		.uleb128 0x5
 1738 00ac 08020000 		.4byte	.LASF16
 1739 00b0 01       		.byte	0x1
 1740 00b1 33       		.byte	0x33
 1741 00b2 5D000000 		.4byte	0x5d
 1742 00b6 00000000 		.4byte	.LFB37
 1743 00ba 5C000000 		.4byte	.LFE37-.LFB37
 1744 00be 01       		.uleb128 0x1
 1745 00bf 9C       		.byte	0x9c
 1746 00c0 D1000000 		.4byte	0xd1
 1747 00c4 06       		.uleb128 0x6
 1748 00c5 7900     		.ascii	"y\000"
 1749 00c7 01       		.byte	0x1
 1750 00c8 33       		.byte	0x33
 1751 00c9 96000000 		.4byte	0x96
 1752 00cd 02       		.uleb128 0x2
 1753 00ce 91       		.byte	0x91
 1754 00cf 68       		.sleb128 -24
 1755 00d0 00       		.byte	0
 1756 00d1 05       		.uleb128 0x5
 1757 00d2 32020000 		.4byte	.LASF17
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 38


 1758 00d6 01       		.byte	0x1
 1759 00d7 3C       		.byte	0x3c
 1760 00d8 5D000000 		.4byte	0x5d
 1761 00dc 00000000 		.4byte	.LFB38
 1762 00e0 04010000 		.4byte	.LFE38-.LFB38
 1763 00e4 01       		.uleb128 0x1
 1764 00e5 9C       		.byte	0x9c
 1765 00e6 F9000000 		.4byte	0xf9
 1766 00ea 07       		.uleb128 0x7
 1767 00eb CF000000 		.4byte	.LASF18
 1768 00ef 01       		.byte	0x1
 1769 00f0 3C       		.byte	0x3c
 1770 00f1 5D000000 		.4byte	0x5d
 1771 00f5 02       		.uleb128 0x2
 1772 00f6 91       		.byte	0x91
 1773 00f7 6C       		.sleb128 -20
 1774 00f8 00       		.byte	0
 1775 00f9 05       		.uleb128 0x5
 1776 00fa D4000000 		.4byte	.LASF19
 1777 00fe 01       		.byte	0x1
 1778 00ff 50       		.byte	0x50
 1779 0100 5D000000 		.4byte	0x5d
 1780 0104 00000000 		.4byte	.LFB39
 1781 0108 0C010000 		.4byte	.LFE39-.LFB39
 1782 010c 01       		.uleb128 0x1
 1783 010d 9C       		.byte	0x9c
 1784 010e 21010000 		.4byte	0x121
 1785 0112 07       		.uleb128 0x7
 1786 0113 CF000000 		.4byte	.LASF18
 1787 0117 01       		.byte	0x1
 1788 0118 50       		.byte	0x50
 1789 0119 5D000000 		.4byte	0x5d
 1790 011d 02       		.uleb128 0x2
 1791 011e 91       		.byte	0x91
 1792 011f 6C       		.sleb128 -20
 1793 0120 00       		.byte	0
 1794 0121 05       		.uleb128 0x5
 1795 0122 E3010000 		.4byte	.LASF20
 1796 0126 01       		.byte	0x1
 1797 0127 64       		.byte	0x64
 1798 0128 5D000000 		.4byte	0x5d
 1799 012c 00000000 		.4byte	.LFB40
 1800 0130 24010000 		.4byte	.LFE40-.LFB40
 1801 0134 01       		.uleb128 0x1
 1802 0135 9C       		.byte	0x9c
 1803 0136 55010000 		.4byte	0x155
 1804 013a 07       		.uleb128 0x7
 1805 013b CF000000 		.4byte	.LASF18
 1806 013f 01       		.byte	0x1
 1807 0140 64       		.byte	0x64
 1808 0141 5D000000 		.4byte	0x5d
 1809 0145 02       		.uleb128 0x2
 1810 0146 91       		.byte	0x91
 1811 0147 64       		.sleb128 -28
 1812 0148 08       		.uleb128 0x8
 1813 0149 6900     		.ascii	"i\000"
 1814 014b 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 39


 1815 014c 66       		.byte	0x66
 1816 014d 5D000000 		.4byte	0x5d
 1817 0151 02       		.uleb128 0x2
 1818 0152 91       		.byte	0x91
 1819 0153 6C       		.sleb128 -20
 1820 0154 00       		.byte	0
 1821 0155 05       		.uleb128 0x5
 1822 0156 F4000000 		.4byte	.LASF21
 1823 015a 01       		.byte	0x1
 1824 015b 80       		.byte	0x80
 1825 015c 5D000000 		.4byte	0x5d
 1826 0160 00000000 		.4byte	.LFB41
 1827 0164 14010000 		.4byte	.LFE41-.LFB41
 1828 0168 01       		.uleb128 0x1
 1829 0169 9C       		.byte	0x9c
 1830 016a 7D010000 		.4byte	0x17d
 1831 016e 07       		.uleb128 0x7
 1832 016f CF000000 		.4byte	.LASF18
 1833 0173 01       		.byte	0x1
 1834 0174 80       		.byte	0x80
 1835 0175 5D000000 		.4byte	0x5d
 1836 0179 02       		.uleb128 0x2
 1837 017a 91       		.byte	0x91
 1838 017b 74       		.sleb128 -12
 1839 017c 00       		.byte	0
 1840 017d 05       		.uleb128 0x5
 1841 017e D6010000 		.4byte	.LASF22
 1842 0182 01       		.byte	0x1
 1843 0183 A9       		.byte	0xa9
 1844 0184 5D000000 		.4byte	0x5d
 1845 0188 00000000 		.4byte	.LFB42
 1846 018c 1E010000 		.4byte	.LFE42-.LFB42
 1847 0190 01       		.uleb128 0x1
 1848 0191 9C       		.byte	0x9c
 1849 0192 A5010000 		.4byte	0x1a5
 1850 0196 07       		.uleb128 0x7
 1851 0197 CF000000 		.4byte	.LASF18
 1852 019b 01       		.byte	0x1
 1853 019c A9       		.byte	0xa9
 1854 019d 5D000000 		.4byte	0x5d
 1855 01a1 02       		.uleb128 0x2
 1856 01a2 91       		.byte	0x91
 1857 01a3 74       		.sleb128 -12
 1858 01a4 00       		.byte	0
 1859 01a5 05       		.uleb128 0x5
 1860 01a6 03030000 		.4byte	.LASF23
 1861 01aa 01       		.byte	0x1
 1862 01ab D4       		.byte	0xd4
 1863 01ac 5D000000 		.4byte	0x5d
 1864 01b0 00000000 		.4byte	.LFB43
 1865 01b4 9C000000 		.4byte	.LFE43-.LFB43
 1866 01b8 01       		.uleb128 0x1
 1867 01b9 9C       		.byte	0x9c
 1868 01ba CD010000 		.4byte	0x1cd
 1869 01be 06       		.uleb128 0x6
 1870 01bf 6E657700 		.ascii	"new\000"
 1871 01c3 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 40


 1872 01c4 D4       		.byte	0xd4
 1873 01c5 5D000000 		.4byte	0x5d
 1874 01c9 02       		.uleb128 0x2
 1875 01ca 91       		.byte	0x91
 1876 01cb 6C       		.sleb128 -20
 1877 01cc 00       		.byte	0
 1878 01cd 09       		.uleb128 0x9
 1879 01ce 3E020000 		.4byte	.LASF24
 1880 01d2 01       		.byte	0x1
 1881 01d3 EE       		.byte	0xee
 1882 01d4 00000000 		.4byte	.LFB44
 1883 01d8 88010000 		.4byte	.LFE44-.LFB44
 1884 01dc 01       		.uleb128 0x1
 1885 01dd 9C       		.byte	0x9c
 1886 01de 0A       		.uleb128 0xa
 1887 01df F3010000 		.4byte	.LASF25
 1888 01e3 01       		.byte	0x1
 1889 01e4 1801     		.2byte	0x118
 1890 01e6 00000000 		.4byte	.LFB45
 1891 01ea 4C000000 		.4byte	.LFE45-.LFB45
 1892 01ee 01       		.uleb128 0x1
 1893 01ef 9C       		.byte	0x9c
 1894 01f0 0A       		.uleb128 0xa
 1895 01f1 6F010000 		.4byte	.LASF26
 1896 01f5 01       		.byte	0x1
 1897 01f6 2A01     		.2byte	0x12a
 1898 01f8 00000000 		.4byte	.LFB46
 1899 01fc 18000000 		.4byte	.LFE46-.LFB46
 1900 0200 01       		.uleb128 0x1
 1901 0201 9C       		.byte	0x9c
 1902 0202 0B       		.uleb128 0xb
 1903 0203 12030000 		.4byte	.LASF27
 1904 0207 01       		.byte	0x1
 1905 0208 3001     		.2byte	0x130
 1906 020a 5D000000 		.4byte	0x5d
 1907 020e 00000000 		.4byte	.LFB47
 1908 0212 4C000000 		.4byte	.LFE47-.LFB47
 1909 0216 01       		.uleb128 0x1
 1910 0217 9C       		.byte	0x9c
 1911 0218 0C       		.uleb128 0xc
 1912 0219 96000000 		.4byte	0x96
 1913 021d 28020000 		.4byte	0x228
 1914 0221 0D       		.uleb128 0xd
 1915 0222 A4000000 		.4byte	0xa4
 1916 0226 09       		.byte	0x9
 1917 0227 00       		.byte	0
 1918 0228 0E       		.uleb128 0xe
 1919 0229 45000000 		.4byte	.LASF28
 1920 022d 01       		.byte	0x1
 1921 022e 0D       		.byte	0xd
 1922 022f 18020000 		.4byte	0x218
 1923 0233 05       		.uleb128 0x5
 1924 0234 03       		.byte	0x3
 1925 0235 00000000 		.4byte	x_mavg
 1926 0239 0E       		.uleb128 0xe
 1927 023a 88000000 		.4byte	.LASF29
 1928 023e 01       		.byte	0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 41


 1929 023f 0E       		.byte	0xe
 1930 0240 96000000 		.4byte	0x96
 1931 0244 05       		.uleb128 0x5
 1932 0245 03       		.byte	0x3
 1933 0246 00000000 		.4byte	y_mavg
 1934 024a 0E       		.uleb128 0xe
 1935 024b A9000000 		.4byte	.LASF30
 1936 024f 01       		.byte	0x1
 1937 0250 0F       		.byte	0xf
 1938 0251 18020000 		.4byte	0x218
 1939 0255 05       		.uleb128 0x5
 1940 0256 03       		.byte	0x3
 1941 0257 00000000 		.4byte	b_mavg
 1942 025b 0E       		.uleb128 0xe
 1943 025c 30010000 		.4byte	.LASF31
 1944 0260 01       		.byte	0x1
 1945 0261 14       		.byte	0x14
 1946 0262 18020000 		.4byte	0x218
 1947 0266 05       		.uleb128 0x5
 1948 0267 03       		.byte	0x3
 1949 0268 00000000 		.4byte	x2_mavg
 1950 026c 0E       		.uleb128 0xe
 1951 026d 10000000 		.4byte	.LASF32
 1952 0271 01       		.byte	0x1
 1953 0272 15       		.byte	0x15
 1954 0273 96000000 		.4byte	0x96
 1955 0277 05       		.uleb128 0x5
 1956 0278 03       		.byte	0x3
 1957 0279 00000000 		.4byte	y2_mavg
 1958 027d 0E       		.uleb128 0xe
 1959 027e 4C020000 		.4byte	.LASF33
 1960 0282 01       		.byte	0x1
 1961 0283 16       		.byte	0x16
 1962 0284 18020000 		.4byte	0x218
 1963 0288 05       		.uleb128 0x5
 1964 0289 03       		.byte	0x3
 1965 028a 00000000 		.4byte	b2_mavg
 1966 028e 0C       		.uleb128 0xc
 1967 028f 96000000 		.4byte	0x96
 1968 0293 9E020000 		.4byte	0x29e
 1969 0297 0D       		.uleb128 0xd
 1970 0298 A4000000 		.4byte	0xa4
 1971 029c 02       		.byte	0x2
 1972 029d 00       		.byte	0
 1973 029e 0E       		.uleb128 0xe
 1974 029f 0A000000 		.4byte	.LASF34
 1975 02a3 01       		.byte	0x1
 1976 02a4 1A       		.byte	0x1a
 1977 02a5 8E020000 		.4byte	0x28e
 1978 02a9 05       		.uleb128 0x5
 1979 02aa 03       		.byte	0x3
 1980 02ab 00000000 		.4byte	x_low
 1981 02af 0E       		.uleb128 0xe
 1982 02b0 BE010000 		.4byte	.LASF35
 1983 02b4 01       		.byte	0x1
 1984 02b5 1B       		.byte	0x1b
 1985 02b6 8E020000 		.4byte	0x28e
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 42


 1986 02ba 05       		.uleb128 0x5
 1987 02bb 03       		.byte	0x3
 1988 02bc 00000000 		.4byte	y_low
 1989 02c0 0E       		.uleb128 0xe
 1990 02c1 A3000000 		.4byte	.LASF36
 1991 02c5 01       		.byte	0x1
 1992 02c6 1C       		.byte	0x1c
 1993 02c7 8E020000 		.4byte	0x28e
 1994 02cb 05       		.uleb128 0x5
 1995 02cc 03       		.byte	0x3
 1996 02cd 00000000 		.4byte	b_low
 1997 02d1 0E       		.uleb128 0xe
 1998 02d2 9D000000 		.4byte	.LASF37
 1999 02d6 01       		.byte	0x1
 2000 02d7 1D       		.byte	0x1d
 2001 02d8 8E020000 		.4byte	0x28e
 2002 02dc 05       		.uleb128 0x5
 2003 02dd 03       		.byte	0x3
 2004 02de 00000000 		.4byte	a_low
 2005 02e2 0E       		.uleb128 0xe
 2006 02e3 00010000 		.4byte	.LASF38
 2007 02e7 01       		.byte	0x1
 2008 02e8 1F       		.byte	0x1f
 2009 02e9 9D000000 		.4byte	0x9d
 2010 02ed 05       		.uleb128 0x5
 2011 02ee 03       		.byte	0x3
 2012 02ef 00000000 		.4byte	current_byte
 2013 02f3 0E       		.uleb128 0xe
 2014 02f4 18000000 		.4byte	.LASF39
 2015 02f8 01       		.byte	0x1
 2016 02f9 20       		.byte	0x20
 2017 02fa 83000000 		.4byte	0x83
 2018 02fe 05       		.uleb128 0x5
 2019 02ff 03       		.byte	0x3
 2020 0300 00000000 		.4byte	value_in
 2021 0304 0C       		.uleb128 0xc
 2022 0305 83000000 		.4byte	0x83
 2023 0309 14030000 		.4byte	0x314
 2024 030d 0D       		.uleb128 0xd
 2025 030e A4000000 		.4byte	0xa4
 2026 0312 01       		.byte	0x1
 2027 0313 00       		.byte	0
 2028 0314 0E       		.uleb128 0xe
 2029 0315 7E000000 		.4byte	.LASF40
 2030 0319 01       		.byte	0x1
 2031 031a 20       		.byte	0x20
 2032 031b 04030000 		.4byte	0x304
 2033 031f 05       		.uleb128 0x5
 2034 0320 03       		.byte	0x3
 2035 0321 00000000 		.4byte	value_out
 2036 0325 0F       		.uleb128 0xf
 2037 0326 6900     		.ascii	"i\000"
 2038 0328 01       		.byte	0x1
 2039 0329 20       		.byte	0x20
 2040 032a 83000000 		.4byte	0x83
 2041 032e 05       		.uleb128 0x5
 2042 032f 03       		.byte	0x3
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 43


 2043 0330 00000000 		.4byte	i
 2044 0334 0F       		.uleb128 0xf
 2045 0335 6A00     		.ascii	"j\000"
 2046 0337 01       		.byte	0x1
 2047 0338 20       		.byte	0x20
 2048 0339 83000000 		.4byte	0x83
 2049 033d 05       		.uleb128 0x5
 2050 033e 03       		.byte	0x3
 2051 033f 00000000 		.4byte	j
 2052 0343 0F       		.uleb128 0xf
 2053 0344 6B00     		.ascii	"k\000"
 2054 0346 01       		.byte	0x1
 2055 0347 20       		.byte	0x20
 2056 0348 83000000 		.4byte	0x83
 2057 034c 05       		.uleb128 0x5
 2058 034d 03       		.byte	0x3
 2059 034e 00000000 		.4byte	k
 2060 0352 0E       		.uleb128 0xe
 2061 0353 54020000 		.4byte	.LASF41
 2062 0357 01       		.byte	0x1
 2063 0358 20       		.byte	0x20
 2064 0359 83000000 		.4byte	0x83
 2065 035d 05       		.uleb128 0x5
 2066 035e 03       		.byte	0x3
 2067 035f 00000000 		.4byte	grader_groen
 2068 0363 0E       		.uleb128 0xe
 2069 0364 24010000 		.4byte	.LASF42
 2070 0368 01       		.byte	0x1
 2071 0369 20       		.byte	0x20
 2072 036a 83000000 		.4byte	0x83
 2073 036e 05       		.uleb128 0x5
 2074 036f 03       		.byte	0x3
 2075 0370 00000000 		.4byte	grader_roed
 2076 0374 0E       		.uleb128 0xe
 2077 0375 40000000 		.4byte	.LASF43
 2078 0379 01       		.byte	0x1
 2079 037a 20       		.byte	0x20
 2080 037b 83000000 		.4byte	0x83
 2081 037f 05       		.uleb128 0x5
 2082 0380 03       		.byte	0x3
 2083 0381 00000000 		.4byte	diff
 2084 0385 0F       		.uleb128 0xf
 2085 0386 6F6C6400 		.ascii	"old\000"
 2086 038a 01       		.byte	0x1
 2087 038b 20       		.byte	0x20
 2088 038c 83000000 		.4byte	0x83
 2089 0390 05       		.uleb128 0x5
 2090 0391 03       		.byte	0x3
 2091 0392 00000000 		.4byte	old
 2092 0396 0E       		.uleb128 0xe
 2093 0397 CE010000 		.4byte	.LASF44
 2094 039b 01       		.byte	0x1
 2095 039c 20       		.byte	0x20
 2096 039d 83000000 		.4byte	0x83
 2097 03a1 05       		.uleb128 0x5
 2098 03a2 03       		.byte	0x3
 2099 03a3 00000000 		.4byte	counter
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 44


 2100 03a7 0E       		.uleb128 0xe
 2101 03a8 57010000 		.4byte	.LASF45
 2102 03ac 01       		.byte	0x1
 2103 03ad 21       		.byte	0x21
 2104 03ae 9D000000 		.4byte	0x9d
 2105 03b2 05       		.uleb128 0x5
 2106 03b3 03       		.byte	0x3
 2107 03b4 00000000 		.4byte	FirstCall
 2108 03b8 0E       		.uleb128 0xe
 2109 03b9 21000000 		.4byte	.LASF46
 2110 03bd 01       		.byte	0x1
 2111 03be 23       		.byte	0x23
 2112 03bf 83000000 		.4byte	0x83
 2113 03c3 05       		.uleb128 0x5
 2114 03c4 03       		.byte	0x3
 2115 03c5 00000000 		.4byte	accroed
 2116 03c9 0E       		.uleb128 0xe
 2117 03ca 29020000 		.4byte	.LASF47
 2118 03ce 01       		.byte	0x1
 2119 03cf 24       		.byte	0x24
 2120 03d0 83000000 		.4byte	0x83
 2121 03d4 05       		.uleb128 0x5
 2122 03d5 03       		.byte	0x3
 2123 03d6 00000000 		.4byte	accgroen
 2124 03da 0F       		.uleb128 0xf
 2125 03db 454D4700 		.ascii	"EMG\000"
 2126 03df 01       		.byte	0x1
 2127 03e0 25       		.byte	0x25
 2128 03e1 83000000 		.4byte	0x83
 2129 03e5 05       		.uleb128 0x5
 2130 03e6 03       		.byte	0x3
 2131 03e7 00000000 		.4byte	EMG
 2132 03eb 0C       		.uleb128 0xc
 2133 03ec 83000000 		.4byte	0x83
 2134 03f0 FB030000 		.4byte	0x3fb
 2135 03f4 0D       		.uleb128 0xd
 2136 03f5 A4000000 		.4byte	0xa4
 2137 03f9 02       		.byte	0x2
 2138 03fa 00       		.byte	0
 2139 03fb 0E       		.uleb128 0xe
 2140 03fc 17030000 		.4byte	.LASF48
 2141 0400 01       		.byte	0x1
 2142 0401 26       		.byte	0x26
 2143 0402 EB030000 		.4byte	0x3eb
 2144 0406 05       		.uleb128 0x5
 2145 0407 03       		.byte	0x3
 2146 0408 00000000 		.4byte	result
 2147 040c 0E       		.uleb128 0xe
 2148 040d 46010000 		.4byte	.LASF49
 2149 0411 01       		.byte	0x1
 2150 0412 27       		.byte	0x27
 2151 0413 6B000000 		.4byte	0x6b
 2152 0417 05       		.uleb128 0x5
 2153 0418 03       		.byte	0x3
 2154 0419 00000000 		.4byte	data_ready
 2155 041d 0E       		.uleb128 0xe
 2156 041e 38010000 		.4byte	.LASF50
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 45


 2157 0422 01       		.byte	0x1
 2158 0423 29       		.byte	0x29
 2159 0424 83000000 		.4byte	0x83
 2160 0428 05       		.uleb128 0x5
 2161 0429 03       		.byte	0x3
 2162 042a 00000000 		.4byte	mav_data_roed
 2163 042e 0E       		.uleb128 0xe
 2164 042f 1A020000 		.4byte	.LASF51
 2165 0433 01       		.byte	0x1
 2166 0434 2A       		.byte	0x2a
 2167 0435 83000000 		.4byte	0x83
 2168 0439 05       		.uleb128 0x5
 2169 043a 03       		.byte	0x3
 2170 043b 00000000 		.4byte	mav_data_groen
 2171 043f 0E       		.uleb128 0xe
 2172 0440 16010000 		.4byte	.LASF52
 2173 0444 01       		.byte	0x1
 2174 0445 2B       		.byte	0x2b
 2175 0446 83000000 		.4byte	0x83
 2176 044a 05       		.uleb128 0x5
 2177 044b 03       		.byte	0x3
 2178 044c 00000000 		.4byte	samlet_grader
 2179 0450 0E       		.uleb128 0xe
 2180 0451 67020000 		.4byte	.LASF53
 2181 0455 01       		.byte	0x1
 2182 0456 2C       		.byte	0x2c
 2183 0457 83000000 		.4byte	0x83
 2184 045b 05       		.uleb128 0x5
 2185 045c 03       		.byte	0x3
 2186 045d 00000000 		.4byte	low_pass_data
 2187 0461 0E       		.uleb128 0xe
 2188 0462 00000000 		.4byte	.LASF54
 2189 0466 01       		.byte	0x1
 2190 0467 2D       		.byte	0x2d
 2191 0468 83000000 		.4byte	0x83
 2192 046c 05       		.uleb128 0x5
 2193 046d 03       		.byte	0x3
 2194 046e 00000000 		.4byte	diff_data
 2195 0472 00       		.byte	0
 2196              		.section	.debug_abbrev,"",%progbits
 2197              	.Ldebug_abbrev0:
 2198 0000 01       		.uleb128 0x1
 2199 0001 11       		.uleb128 0x11
 2200 0002 01       		.byte	0x1
 2201 0003 25       		.uleb128 0x25
 2202 0004 0E       		.uleb128 0xe
 2203 0005 13       		.uleb128 0x13
 2204 0006 0B       		.uleb128 0xb
 2205 0007 03       		.uleb128 0x3
 2206 0008 0E       		.uleb128 0xe
 2207 0009 1B       		.uleb128 0x1b
 2208 000a 0E       		.uleb128 0xe
 2209 000b 55       		.uleb128 0x55
 2210 000c 17       		.uleb128 0x17
 2211 000d 11       		.uleb128 0x11
 2212 000e 01       		.uleb128 0x1
 2213 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 46


 2214 0010 17       		.uleb128 0x17
 2215 0011 00       		.byte	0
 2216 0012 00       		.byte	0
 2217 0013 02       		.uleb128 0x2
 2218 0014 24       		.uleb128 0x24
 2219 0015 00       		.byte	0
 2220 0016 0B       		.uleb128 0xb
 2221 0017 0B       		.uleb128 0xb
 2222 0018 3E       		.uleb128 0x3e
 2223 0019 0B       		.uleb128 0xb
 2224 001a 03       		.uleb128 0x3
 2225 001b 0E       		.uleb128 0xe
 2226 001c 00       		.byte	0
 2227 001d 00       		.byte	0
 2228 001e 03       		.uleb128 0x3
 2229 001f 24       		.uleb128 0x24
 2230 0020 00       		.byte	0
 2231 0021 0B       		.uleb128 0xb
 2232 0022 0B       		.uleb128 0xb
 2233 0023 3E       		.uleb128 0x3e
 2234 0024 0B       		.uleb128 0xb
 2235 0025 03       		.uleb128 0x3
 2236 0026 08       		.uleb128 0x8
 2237 0027 00       		.byte	0
 2238 0028 00       		.byte	0
 2239 0029 04       		.uleb128 0x4
 2240 002a 16       		.uleb128 0x16
 2241 002b 00       		.byte	0
 2242 002c 03       		.uleb128 0x3
 2243 002d 0E       		.uleb128 0xe
 2244 002e 3A       		.uleb128 0x3a
 2245 002f 0B       		.uleb128 0xb
 2246 0030 3B       		.uleb128 0x3b
 2247 0031 05       		.uleb128 0x5
 2248 0032 49       		.uleb128 0x49
 2249 0033 13       		.uleb128 0x13
 2250 0034 00       		.byte	0
 2251 0035 00       		.byte	0
 2252 0036 05       		.uleb128 0x5
 2253 0037 2E       		.uleb128 0x2e
 2254 0038 01       		.byte	0x1
 2255 0039 3F       		.uleb128 0x3f
 2256 003a 19       		.uleb128 0x19
 2257 003b 03       		.uleb128 0x3
 2258 003c 0E       		.uleb128 0xe
 2259 003d 3A       		.uleb128 0x3a
 2260 003e 0B       		.uleb128 0xb
 2261 003f 3B       		.uleb128 0x3b
 2262 0040 0B       		.uleb128 0xb
 2263 0041 27       		.uleb128 0x27
 2264 0042 19       		.uleb128 0x19
 2265 0043 49       		.uleb128 0x49
 2266 0044 13       		.uleb128 0x13
 2267 0045 11       		.uleb128 0x11
 2268 0046 01       		.uleb128 0x1
 2269 0047 12       		.uleb128 0x12
 2270 0048 06       		.uleb128 0x6
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 47


 2271 0049 40       		.uleb128 0x40
 2272 004a 18       		.uleb128 0x18
 2273 004b 9642     		.uleb128 0x2116
 2274 004d 19       		.uleb128 0x19
 2275 004e 01       		.uleb128 0x1
 2276 004f 13       		.uleb128 0x13
 2277 0050 00       		.byte	0
 2278 0051 00       		.byte	0
 2279 0052 06       		.uleb128 0x6
 2280 0053 05       		.uleb128 0x5
 2281 0054 00       		.byte	0
 2282 0055 03       		.uleb128 0x3
 2283 0056 08       		.uleb128 0x8
 2284 0057 3A       		.uleb128 0x3a
 2285 0058 0B       		.uleb128 0xb
 2286 0059 3B       		.uleb128 0x3b
 2287 005a 0B       		.uleb128 0xb
 2288 005b 49       		.uleb128 0x49
 2289 005c 13       		.uleb128 0x13
 2290 005d 02       		.uleb128 0x2
 2291 005e 18       		.uleb128 0x18
 2292 005f 00       		.byte	0
 2293 0060 00       		.byte	0
 2294 0061 07       		.uleb128 0x7
 2295 0062 05       		.uleb128 0x5
 2296 0063 00       		.byte	0
 2297 0064 03       		.uleb128 0x3
 2298 0065 0E       		.uleb128 0xe
 2299 0066 3A       		.uleb128 0x3a
 2300 0067 0B       		.uleb128 0xb
 2301 0068 3B       		.uleb128 0x3b
 2302 0069 0B       		.uleb128 0xb
 2303 006a 49       		.uleb128 0x49
 2304 006b 13       		.uleb128 0x13
 2305 006c 02       		.uleb128 0x2
 2306 006d 18       		.uleb128 0x18
 2307 006e 00       		.byte	0
 2308 006f 00       		.byte	0
 2309 0070 08       		.uleb128 0x8
 2310 0071 34       		.uleb128 0x34
 2311 0072 00       		.byte	0
 2312 0073 03       		.uleb128 0x3
 2313 0074 08       		.uleb128 0x8
 2314 0075 3A       		.uleb128 0x3a
 2315 0076 0B       		.uleb128 0xb
 2316 0077 3B       		.uleb128 0x3b
 2317 0078 0B       		.uleb128 0xb
 2318 0079 49       		.uleb128 0x49
 2319 007a 13       		.uleb128 0x13
 2320 007b 02       		.uleb128 0x2
 2321 007c 18       		.uleb128 0x18
 2322 007d 00       		.byte	0
 2323 007e 00       		.byte	0
 2324 007f 09       		.uleb128 0x9
 2325 0080 2E       		.uleb128 0x2e
 2326 0081 00       		.byte	0
 2327 0082 3F       		.uleb128 0x3f
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 48


 2328 0083 19       		.uleb128 0x19
 2329 0084 03       		.uleb128 0x3
 2330 0085 0E       		.uleb128 0xe
 2331 0086 3A       		.uleb128 0x3a
 2332 0087 0B       		.uleb128 0xb
 2333 0088 3B       		.uleb128 0x3b
 2334 0089 0B       		.uleb128 0xb
 2335 008a 27       		.uleb128 0x27
 2336 008b 19       		.uleb128 0x19
 2337 008c 11       		.uleb128 0x11
 2338 008d 01       		.uleb128 0x1
 2339 008e 12       		.uleb128 0x12
 2340 008f 06       		.uleb128 0x6
 2341 0090 40       		.uleb128 0x40
 2342 0091 18       		.uleb128 0x18
 2343 0092 9642     		.uleb128 0x2116
 2344 0094 19       		.uleb128 0x19
 2345 0095 00       		.byte	0
 2346 0096 00       		.byte	0
 2347 0097 0A       		.uleb128 0xa
 2348 0098 2E       		.uleb128 0x2e
 2349 0099 00       		.byte	0
 2350 009a 3F       		.uleb128 0x3f
 2351 009b 19       		.uleb128 0x19
 2352 009c 03       		.uleb128 0x3
 2353 009d 0E       		.uleb128 0xe
 2354 009e 3A       		.uleb128 0x3a
 2355 009f 0B       		.uleb128 0xb
 2356 00a0 3B       		.uleb128 0x3b
 2357 00a1 05       		.uleb128 0x5
 2358 00a2 27       		.uleb128 0x27
 2359 00a3 19       		.uleb128 0x19
 2360 00a4 11       		.uleb128 0x11
 2361 00a5 01       		.uleb128 0x1
 2362 00a6 12       		.uleb128 0x12
 2363 00a7 06       		.uleb128 0x6
 2364 00a8 40       		.uleb128 0x40
 2365 00a9 18       		.uleb128 0x18
 2366 00aa 9642     		.uleb128 0x2116
 2367 00ac 19       		.uleb128 0x19
 2368 00ad 00       		.byte	0
 2369 00ae 00       		.byte	0
 2370 00af 0B       		.uleb128 0xb
 2371 00b0 2E       		.uleb128 0x2e
 2372 00b1 00       		.byte	0
 2373 00b2 3F       		.uleb128 0x3f
 2374 00b3 19       		.uleb128 0x19
 2375 00b4 03       		.uleb128 0x3
 2376 00b5 0E       		.uleb128 0xe
 2377 00b6 3A       		.uleb128 0x3a
 2378 00b7 0B       		.uleb128 0xb
 2379 00b8 3B       		.uleb128 0x3b
 2380 00b9 05       		.uleb128 0x5
 2381 00ba 49       		.uleb128 0x49
 2382 00bb 13       		.uleb128 0x13
 2383 00bc 11       		.uleb128 0x11
 2384 00bd 01       		.uleb128 0x1
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 49


 2385 00be 12       		.uleb128 0x12
 2386 00bf 06       		.uleb128 0x6
 2387 00c0 40       		.uleb128 0x40
 2388 00c1 18       		.uleb128 0x18
 2389 00c2 9642     		.uleb128 0x2116
 2390 00c4 19       		.uleb128 0x19
 2391 00c5 00       		.byte	0
 2392 00c6 00       		.byte	0
 2393 00c7 0C       		.uleb128 0xc
 2394 00c8 01       		.uleb128 0x1
 2395 00c9 01       		.byte	0x1
 2396 00ca 49       		.uleb128 0x49
 2397 00cb 13       		.uleb128 0x13
 2398 00cc 01       		.uleb128 0x1
 2399 00cd 13       		.uleb128 0x13
 2400 00ce 00       		.byte	0
 2401 00cf 00       		.byte	0
 2402 00d0 0D       		.uleb128 0xd
 2403 00d1 21       		.uleb128 0x21
 2404 00d2 00       		.byte	0
 2405 00d3 49       		.uleb128 0x49
 2406 00d4 13       		.uleb128 0x13
 2407 00d5 2F       		.uleb128 0x2f
 2408 00d6 0B       		.uleb128 0xb
 2409 00d7 00       		.byte	0
 2410 00d8 00       		.byte	0
 2411 00d9 0E       		.uleb128 0xe
 2412 00da 34       		.uleb128 0x34
 2413 00db 00       		.byte	0
 2414 00dc 03       		.uleb128 0x3
 2415 00dd 0E       		.uleb128 0xe
 2416 00de 3A       		.uleb128 0x3a
 2417 00df 0B       		.uleb128 0xb
 2418 00e0 3B       		.uleb128 0x3b
 2419 00e1 0B       		.uleb128 0xb
 2420 00e2 49       		.uleb128 0x49
 2421 00e3 13       		.uleb128 0x13
 2422 00e4 3F       		.uleb128 0x3f
 2423 00e5 19       		.uleb128 0x19
 2424 00e6 02       		.uleb128 0x2
 2425 00e7 18       		.uleb128 0x18
 2426 00e8 00       		.byte	0
 2427 00e9 00       		.byte	0
 2428 00ea 0F       		.uleb128 0xf
 2429 00eb 34       		.uleb128 0x34
 2430 00ec 00       		.byte	0
 2431 00ed 03       		.uleb128 0x3
 2432 00ee 08       		.uleb128 0x8
 2433 00ef 3A       		.uleb128 0x3a
 2434 00f0 0B       		.uleb128 0xb
 2435 00f1 3B       		.uleb128 0x3b
 2436 00f2 0B       		.uleb128 0xb
 2437 00f3 49       		.uleb128 0x49
 2438 00f4 13       		.uleb128 0x13
 2439 00f5 3F       		.uleb128 0x3f
 2440 00f6 19       		.uleb128 0x19
 2441 00f7 02       		.uleb128 0x2
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 50


 2442 00f8 18       		.uleb128 0x18
 2443 00f9 00       		.byte	0
 2444 00fa 00       		.byte	0
 2445 00fb 00       		.byte	0
 2446              		.section	.debug_aranges,"",%progbits
 2447 0000 6C000000 		.4byte	0x6c
 2448 0004 0200     		.2byte	0x2
 2449 0006 00000000 		.4byte	.Ldebug_info0
 2450 000a 04       		.byte	0x4
 2451 000b 00       		.byte	0
 2452 000c 0000     		.2byte	0
 2453 000e 0000     		.2byte	0
 2454 0010 00000000 		.4byte	.LFB37
 2455 0014 5C000000 		.4byte	.LFE37-.LFB37
 2456 0018 00000000 		.4byte	.LFB38
 2457 001c 04010000 		.4byte	.LFE38-.LFB38
 2458 0020 00000000 		.4byte	.LFB39
 2459 0024 0C010000 		.4byte	.LFE39-.LFB39
 2460 0028 00000000 		.4byte	.LFB40
 2461 002c 24010000 		.4byte	.LFE40-.LFB40
 2462 0030 00000000 		.4byte	.LFB41
 2463 0034 14010000 		.4byte	.LFE41-.LFB41
 2464 0038 00000000 		.4byte	.LFB42
 2465 003c 1E010000 		.4byte	.LFE42-.LFB42
 2466 0040 00000000 		.4byte	.LFB43
 2467 0044 9C000000 		.4byte	.LFE43-.LFB43
 2468 0048 00000000 		.4byte	.LFB44
 2469 004c 88010000 		.4byte	.LFE44-.LFB44
 2470 0050 00000000 		.4byte	.LFB45
 2471 0054 4C000000 		.4byte	.LFE45-.LFB45
 2472 0058 00000000 		.4byte	.LFB46
 2473 005c 18000000 		.4byte	.LFE46-.LFB46
 2474 0060 00000000 		.4byte	.LFB47
 2475 0064 4C000000 		.4byte	.LFE47-.LFB47
 2476 0068 00000000 		.4byte	0
 2477 006c 00000000 		.4byte	0
 2478              		.section	.debug_ranges,"",%progbits
 2479              	.Ldebug_ranges0:
 2480 0000 00000000 		.4byte	.LFB37
 2481 0004 5C000000 		.4byte	.LFE37
 2482 0008 00000000 		.4byte	.LFB38
 2483 000c 04010000 		.4byte	.LFE38
 2484 0010 00000000 		.4byte	.LFB39
 2485 0014 0C010000 		.4byte	.LFE39
 2486 0018 00000000 		.4byte	.LFB40
 2487 001c 24010000 		.4byte	.LFE40
 2488 0020 00000000 		.4byte	.LFB41
 2489 0024 14010000 		.4byte	.LFE41
 2490 0028 00000000 		.4byte	.LFB42
 2491 002c 1E010000 		.4byte	.LFE42
 2492 0030 00000000 		.4byte	.LFB43
 2493 0034 9C000000 		.4byte	.LFE43
 2494 0038 00000000 		.4byte	.LFB44
 2495 003c 88010000 		.4byte	.LFE44
 2496 0040 00000000 		.4byte	.LFB45
 2497 0044 4C000000 		.4byte	.LFE45
 2498 0048 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 51


 2499 004c 18000000 		.4byte	.LFE46
 2500 0050 00000000 		.4byte	.LFB47
 2501 0054 4C000000 		.4byte	.LFE47
 2502 0058 00000000 		.4byte	0
 2503 005c 00000000 		.4byte	0
 2504              		.section	.debug_line,"",%progbits
 2505              	.Ldebug_line0:
 2506 0000 46020000 		.section	.debug_str,"MS",%progbits,1
 2506      02004300 
 2506      00000201 
 2506      FB0E0D00 
 2506      01010101 
 2507              	.LASF54:
 2508 0000 64696666 		.ascii	"diff_data\000"
 2508      5F646174 
 2508      6100
 2509              	.LASF34:
 2510 000a 785F6C6F 		.ascii	"x_low\000"
 2510      7700
 2511              	.LASF32:
 2512 0010 79325F6D 		.ascii	"y2_mavg\000"
 2512      61766700 
 2513              	.LASF39:
 2514 0018 76616C75 		.ascii	"value_in\000"
 2514      655F696E 
 2514      00
 2515              	.LASF46:
 2516 0021 61636372 		.ascii	"accroed\000"
 2516      6F656400 
 2517              	.LASF7:
 2518 0029 6C6F6E67 		.ascii	"long long unsigned int\000"
 2518      206C6F6E 
 2518      6720756E 
 2518      7369676E 
 2518      65642069 
 2519              	.LASF43:
 2520 0040 64696666 		.ascii	"diff\000"
 2520      00
 2521              	.LASF28:
 2522 0045 785F6D61 		.ascii	"x_mavg\000"
 2522      766700
 2523              	.LASF6:
 2524 004c 6C6F6E67 		.ascii	"long long int\000"
 2524      206C6F6E 
 2524      6720696E 
 2524      7400
 2525              	.LASF0:
 2526 005a 7369676E 		.ascii	"signed char\000"
 2526      65642063 
 2526      68617200 
 2527              	.LASF56:
 2528 0066 2E5C6D61 		.ascii	".\\main.c\000"
 2528      696E2E63 
 2528      00
 2529              	.LASF4:
 2530 006f 6C6F6E67 		.ascii	"long int\000"
 2530      20696E74 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 52


 2530      00
 2531              	.LASF9:
 2532 0078 75696E74 		.ascii	"uint8\000"
 2532      3800
 2533              	.LASF40:
 2534 007e 76616C75 		.ascii	"value_out\000"
 2534      655F6F75 
 2534      7400
 2535              	.LASF29:
 2536 0088 795F6D61 		.ascii	"y_mavg\000"
 2536      766700
 2537              	.LASF13:
 2538 008f 646F7562 		.ascii	"double\000"
 2538      6C6500
 2539              	.LASF10:
 2540 0096 75696E74 		.ascii	"uint32\000"
 2540      333200
 2541              	.LASF37:
 2542 009d 615F6C6F 		.ascii	"a_low\000"
 2542      7700
 2543              	.LASF36:
 2544 00a3 625F6C6F 		.ascii	"b_low\000"
 2544      7700
 2545              	.LASF30:
 2546 00a9 625F6D61 		.ascii	"b_mavg\000"
 2546      766700
 2547              	.LASF8:
 2548 00b0 756E7369 		.ascii	"unsigned int\000"
 2548      676E6564 
 2548      20696E74 
 2548      00
 2549              	.LASF5:
 2550 00bd 6C6F6E67 		.ascii	"long unsigned int\000"
 2550      20756E73 
 2550      69676E65 
 2550      6420696E 
 2550      7400
 2551              	.LASF18:
 2552 00cf 64617461 		.ascii	"data\000"
 2552      00
 2553              	.LASF19:
 2554 00d4 6D617667 		.ascii	"mavg_filter2\000"
 2554      5F66696C 
 2554      74657232 
 2554      00
 2555              	.LASF3:
 2556 00e1 73686F72 		.ascii	"short unsigned int\000"
 2556      7420756E 
 2556      7369676E 
 2556      65642069 
 2556      6E7400
 2557              	.LASF21:
 2558 00f4 726F6564 		.ascii	"roed_grader\000"
 2558      5F677261 
 2558      64657200 
 2559              	.LASF38:
 2560 0100 63757272 		.ascii	"current_byte\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 53


 2560      656E745F 
 2560      62797465 
 2560      00
 2561              	.LASF15:
 2562 010d 73697A65 		.ascii	"sizetype\000"
 2562      74797065 
 2562      00
 2563              	.LASF52:
 2564 0116 73616D6C 		.ascii	"samlet_grader\000"
 2564      65745F67 
 2564      72616465 
 2564      7200
 2565              	.LASF42:
 2566 0124 67726164 		.ascii	"grader_roed\000"
 2566      65725F72 
 2566      6F656400 
 2567              	.LASF31:
 2568 0130 78325F6D 		.ascii	"x2_mavg\000"
 2568      61766700 
 2569              	.LASF50:
 2570 0138 6D61765F 		.ascii	"mav_data_roed\000"
 2570      64617461 
 2570      5F726F65 
 2570      6400
 2571              	.LASF49:
 2572 0146 64617461 		.ascii	"data_ready\000"
 2572      5F726561 
 2572      647900
 2573              	.LASF12:
 2574 0151 666C6F61 		.ascii	"float\000"
 2574      7400
 2575              	.LASF45:
 2576 0157 46697273 		.ascii	"FirstCall\000"
 2576      7443616C 
 2576      6C00
 2577              	.LASF1:
 2578 0161 756E7369 		.ascii	"unsigned char\000"
 2578      676E6564 
 2578      20636861 
 2578      7200
 2579              	.LASF26:
 2580 016f 54696D65 		.ascii	"Timer_interrupt\000"
 2580      725F696E 
 2580      74657272 
 2580      75707400 
 2581              	.LASF57:
 2582 017f 433A5C55 		.ascii	"C:\\Users\\Linette Helena\\Desktop\\ADC_filtre_saml"
 2582      73657273 
 2582      5C4C696E 
 2582      65747465 
 2582      2048656C 
 2583 01ae 65745F67 		.ascii	"et_grader.cydsn\000"
 2583      72616465 
 2583      722E6379 
 2583      64736E00 
 2584              	.LASF35:
 2585 01be 795F6C6F 		.ascii	"y_low\000"
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 54


 2585      7700
 2586              	.LASF2:
 2587 01c4 73686F72 		.ascii	"short int\000"
 2587      7420696E 
 2587      7400
 2588              	.LASF44:
 2589 01ce 636F756E 		.ascii	"counter\000"
 2589      74657200 
 2590              	.LASF22:
 2591 01d6 67726F65 		.ascii	"groen_grader\000"
 2591      6E5F6772 
 2591      61646572 
 2591      00
 2592              	.LASF20:
 2593 01e3 6C6F775F 		.ascii	"low_pass_filter\000"
 2593      70617373 
 2593      5F66696C 
 2593      74657200 
 2594              	.LASF25:
 2595 01f3 50696E5F 		.ascii	"Pin_SW2_handler\000"
 2595      5357325F 
 2595      68616E64 
 2595      6C657200 
 2596              	.LASF14:
 2597 0203 63686172 		.ascii	"char\000"
 2597      00
 2598              	.LASF16:
 2599 0208 666C6F6F 		.ascii	"floor_and_convert\000"
 2599      725F616E 
 2599      645F636F 
 2599      6E766572 
 2599      7400
 2600              	.LASF51:
 2601 021a 6D61765F 		.ascii	"mav_data_groen\000"
 2601      64617461 
 2601      5F67726F 
 2601      656E00
 2602              	.LASF47:
 2603 0229 61636367 		.ascii	"accgroen\000"
 2603      726F656E 
 2603      00
 2604              	.LASF17:
 2605 0232 6D617667 		.ascii	"mavg_filter\000"
 2605      5F66696C 
 2605      74657200 
 2606              	.LASF24:
 2607 023e 4144435F 		.ascii	"ADC_interrupt\000"
 2607      696E7465 
 2607      72727570 
 2607      7400
 2608              	.LASF33:
 2609 024c 62325F6D 		.ascii	"b2_mavg\000"
 2609      61766700 
 2610              	.LASF41:
 2611 0254 67726164 		.ascii	"grader_groen\000"
 2611      65725F67 
 2611      726F656E 
ARM GAS  C:\Users\LINETT~1\AppData\Local\Temp\ccZ4JG3h.s 			page 55


 2611      00
 2612              	.LASF11:
 2613 0261 696E7431 		.ascii	"int16\000"
 2613      3600
 2614              	.LASF53:
 2615 0267 6C6F775F 		.ascii	"low_pass_data\000"
 2615      70617373 
 2615      5F646174 
 2615      6100
 2616              	.LASF55:
 2617 0275 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2617      4320342E 
 2617      392E3320 
 2617      32303135 
 2617      30333033 
 2618 02a8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2618      20726576 
 2618      6973696F 
 2618      6E203232 
 2618      31323230 
 2619 02db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2619      66756E63 
 2619      74696F6E 
 2619      2D736563 
 2619      74696F6E 
 2620              	.LASF23:
 2621 0303 64696666 		.ascii	"differentiator\000"
 2621      6572656E 
 2621      74696174 
 2621      6F7200
 2622              	.LASF27:
 2623 0312 6D61696E 		.ascii	"main\000"
 2623      00
 2624              	.LASF48:
 2625 0317 72657375 		.ascii	"result\000"
 2625      6C7400
 2626              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
