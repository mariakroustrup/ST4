function [fitresult, gof] = createFits(grader, groenX, groenY, groenZ, roedX, roedY1, roedZ)
%CREATEFITS(GRADER,GROENX,GROENY,GROENZ,ROEDX,ROEDY1,ROEDZ)
%  Create fits.
%
%  Data for 'Grøn - x' fit:
%      X Input : grader
%      Y Output: groenX
%  Data for 'Grøn - y' fit:
%      X Input : grader
%      Y Output: groenY
%  Data for 'Grøn - z' fit:
%      X Input : grader
%      Y Output: groenZ
%  Data for 'Rød - x' fit:
%      X Input : grader
%      Y Output: roedX
%  Data for 'Rød - y' fit:
%      X Input : grader
%      Y Output: roedY1
%  Data for 'Rød - z' fit:
%      X Input : grader
%      Y Output: roedZ
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 12-Apr-2016 11:51:51

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 6, 1 );
gof = struct( 'sse', cell( 6, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Grøn - x'.
[xData, yData] = prepareCurveData( grader, groenX );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Grøn - x' );
plot( fitresult{1}, xData, yData );
xlabel grader
ylabel groenX
grid off

%% Fit: 'Grøn - y'.
[xData, yData] = prepareCurveData( grader, groenY );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Grøn - y' );
plot( fitresult{2}, xData, yData );
xlabel grader
ylabel groenY
grid off

%% Fit: 'Grøn - z'.
[xData, yData] = prepareCurveData( grader, groenZ );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Grøn - z' );
plot( fitresult{3}, xData, yData );
xlabel grader
ylabel groenZ
grid off

%% Fit: 'Rød - x'.
[xData, yData] = prepareCurveData( grader, roedX );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Rød - x' );
plot( fitresult{4}, xData, yData );
xlabel grader
ylabel roedX
grid off

%% Fit: 'Rød - y'.
[xData, yData] = prepareCurveData( grader, roedY1 );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Rød - y' );
plot( fitresult{5}, xData, yData );
xlabel grader
ylabel roedY1
grid off

%% Fit: 'Rød - z'.
[xData, yData] = prepareCurveData( grader, roedZ );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Rød - z' );
plot( fitresult{6}, xData, yData );
xlabel grader
ylabel roedZ
grid off


%% 
figure
subplot(3,2,1)
%figure( 'Name', 'Grøn - x' );
plot( fitresult{1}, xData, yData );
xlabel grader
ylabel groenX
grid off

subplot(3,2,3)
%figure( 'Name', 'Grøn - y' );
plot( fitresult{2}, xData, yData );
xlabel grader
ylabel groenY
grid off

subplot(3,2,5)
%figure( 'Name', 'Grøn - z' );
plot( fitresult{3}, xData, yData );
xlabel grader
ylabel groenZ
grid off

subplot(3,2,2)
%figure( 'Name', 'Rød - x' );
plot( fitresult{4}, xData, yData );
xlabel grader
ylabel roedX
grid off

subplot(3,2,4)
%figure( 'Name', 'Rød - y' );
plot( fitresult{5}, xData, yData );
xlabel grader
ylabel roedY1
grid off

subplot(3,2,6)
%figure( 'Name', 'Rød - z' );
plot( fitresult{6}, xData, yData );
xlabel grader
ylabel roedZ
grid off